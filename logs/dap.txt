!! ⚠️ PLEASE REVIEW THIS LOG FOR SENSITIVE INFORMATION BEFORE SHARING ⚠️ !!
Dart Code extension: 3.78.2
Flutter extension: 3.79.20231130 (not activated)

App: Visual Studio Code
App Host: desktop
Version: win 1.85.1


Logging Categories:
    DAP

Thu Dec 14 2023 [10:02:28 GMT+0700 (Indochina Time)] Log file started
[12:58:10 PM] [DAP] [Info] Starting debug session f94d973d-7640-403a-be64-a8a308789e5f
[12:58:10 PM] [DAP] [Info] ==> {"command":"initialize","arguments":{"clientID":"vscode","clientName":"Visual Studio Code","adapterID":"dart","pathFormat":"path","linesStartAt1":true,"columnsStartAt1":true,"supportsVariableType":true,"supportsVariablePaging":true,"supportsRunInTerminalRequest":true,"locale":"en","supportsProgressReporting":true,"supportsInvalidatedEvent":true,"supportsMemoryReferences":true,"supportsArgsCanBeInterpretedByShell":true,"supportsMemoryEvent":true,"supportsStartDebuggingRequest":true},"type":"request","seq":1}
[12:58:11 PM] [DAP] [Info] <== {"seq":1,"type":"response","body":{"exceptionBreakpointFilters":[{"default":false,"filter":"All","label":"All Exceptions"},{"default":true,"filter":"Unhandled","label":"Uncaught Exceptions"}],"supportsClipboardContext":true,"supportsConditionalBreakpoints":true,"supportsConfigurationDoneRequest":true,"supportsDelayedStackTraceLoading":true,"supportsEvaluateForHovers":true,"supportsLogPoints":true,"supportsRestartRequest":false,"supportsTerminateRequest":true,"supportsValueFormattingOptions":true},"command":"initialize","request_seq":1,"success":true}
[12:58:11 PM] [DAP] [Info] ==> {"command":"launch","arguments":{"name":"Dart  (Pixel 6 Pro API 33)","noDebug":false,"request":"launch","type":"dart","program":"D:\\Flutter\\tintuc\\lib\\main.dart","dartCodeDebugSessionID":"session-5d973","projectRootPath":"D:\\Flutter\\tintuc","cwd":"D:\\Flutter\\tintuc","deviceId":"emulator-5554","deviceName":"Pixel 6 Pro API 33 (android-x64)","toolEnv":{"FLUTTER_HOST":"VSCode","PUB_ENVIRONMENT":"vscode.dart-code","FLUTTER_ROOT":"C:\\src\\flutter"},"sendLogsToClient":false,"sendCustomProgressEvents":true,"allowAnsiColorOutput":true,"additionalProjectPaths":["D:\\Flutter\\tintuc"],"args":[],"vmAdditionalArgs":[],"toolArgs":["-d","emulator-5554","--devtools-server-address","http://127.0.0.1:9100/"],"vmServicePort":0,"dartSdkPath":"C:\\src\\flutter\\bin\\cache\\dart-sdk","vmServiceLogFile":"D:\\Flutter\\tintuc\\logs\\observatory.txt","maxLogLineLength":2000,"dartTestLogFile":"D:\\Flutter\\tintuc\\logs\\dart_test.txt","debugSdkLibraries":false,"debugExternalPackageLibraries":false,"showDartDeveloperLogs":true,"evaluateGettersInDebugViews":true,"showGettersInDebugViews":true,"evaluateToStringInDebugViews":true,"flutterSdkPath":"C:\\src\\flutter","useInspectorNotificationsForWidgetErrors":true,"flutterRunLogFile":"D:\\Flutter\\tintuc\\logs\\flutter_run.txt","flutterTestLogFile":"D:\\Flutter\\tintuc\\logs\\flutter_test.txt","showMemoryUsage":false,"debuggerType":2,"__sessionId":"f94d973d-7640-403a-be64-a8a308789e5f"},"type":"request","seq":2}
[12:58:11 PM] [DAP] [Info] <== {"seq":2,"type":"event","body":{},"event":"initialized"}
[12:58:11 PM] [DAP] [Info] ==> {"command":"setBreakpoints","arguments":{"source":{"name":"c:\\src\\flutter\\bin\\cache\\pkg\\sky_engine\\lib\\_internal\\vm\\bin\\socket_patch.dart","path":"C:\\src\\flutter\\bin\\cache\\pkg\\sky_engine\\lib\\_internal\\vm\\bin\\socket_patch.dart","sourceReference":3},"lines":[520],"breakpoints":[{"line":520}],"sourceModified":false},"type":"request","seq":3}
[12:58:11 PM] [DAP] [Info] ==> {"command":"setBreakpoints","arguments":{"source":{"name":"taobaivieta.dart","path":"d:\\Flutter\\tintuc\\lib\\danhsachbaiviet\\taobaivieta.dart"},"lines":[107],"breakpoints":[{"line":107}],"sourceModified":false},"type":"request","seq":4}
[12:58:11 PM] [DAP] [Info] ==> {"command":"setExceptionBreakpoints","arguments":{"filters":["All","Unhandled"]},"type":"request","seq":5}
[12:58:11 PM] [DAP] [Info] <== {"seq":3,"type":"response","body":{"breakpoints":[{"id":100000,"verified":false}]},"command":"setBreakpoints","request_seq":3,"success":true}
[12:58:11 PM] [DAP] [Info] <== {"seq":4,"type":"response","body":{"breakpoints":[{"id":100001,"verified":false}]},"command":"setBreakpoints","request_seq":4,"success":true}
[12:58:11 PM] [DAP] [Info] <== {"seq":5,"type":"response","body":{},"command":"setExceptionBreakpoints","request_seq":5,"success":true}
[12:58:11 PM] [DAP] [Info] ==> {"command":"configurationDone","type":"request","seq":6}
[12:58:11 PM] [DAP] [Info] <== {"seq":6,"type":"response","command":"configurationDone","request_seq":6,"success":true}
[12:58:11 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":7}
[12:58:11 PM] [DAP] [Info] <== {"seq":7,"type":"event","body":{"message":"Launching…","progressId":"launch_1","title":"Flutter"},"event":"dart.progressStart"}
[12:58:11 PM] [DAP] [Info] <== {"seq":8,"type":"response","command":"launch","request_seq":2,"success":true}
[12:58:11 PM] [DAP] [Info] <== {"seq":9,"type":"response","body":{"threads":[]},"command":"threads","request_seq":7,"success":true}
[12:58:12 PM] [DAP] [Info] <== {"seq":10,"type":"event","body":{"capabilities":{"supportsRestartRequest":true}},"event":"capabilities"}
[12:58:12 PM] [DAP] [Info] <== {"seq":11,"type":"event","body":{"appId":"40da67a6-abd5-4339-b86b-52ddf6c76b4a","deviceId":"emulator-5554","directory":"D:\\Flutter\\tintuc","supportsRestart":true,"launchMode":"run","mode":"debug"},"event":"flutter.appStart"}
[12:58:12 PM] [DAP] [Info] <== {"seq":12,"type":"event","body":{"category":"console","output":"Launching lib\\main.dart on sdk gphone x86 64 in debug mode...\n"},"event":"output"}
[12:58:13 PM] [DAP] [Info] <== {"seq":13,"type":"event","body":{"category":"console","output":"Building with Flutter multidex support enabled.\n"},"event":"output"}
[12:58:14 PM] [DAP] [Info] Starting debug session 087877e3-c3ed-4ad8-b9e7-d10d626f1deb
[12:58:14 PM] [DAP] [Info] ==> {"command":"initialize","arguments":{"clientID":"vscode","clientName":"Visual Studio Code","adapterID":"dart","pathFormat":"path","linesStartAt1":true,"columnsStartAt1":true,"supportsVariableType":true,"supportsVariablePaging":true,"supportsRunInTerminalRequest":true,"locale":"en","supportsProgressReporting":true,"supportsInvalidatedEvent":true,"supportsMemoryReferences":true,"supportsArgsCanBeInterpretedByShell":true,"supportsMemoryEvent":true,"supportsStartDebuggingRequest":true},"type":"request","seq":1}
[12:58:15 PM] [DAP] [Info] <== {"seq":1,"type":"response","body":{"exceptionBreakpointFilters":[{"default":false,"filter":"All","label":"All Exceptions"},{"default":true,"filter":"Unhandled","label":"Uncaught Exceptions"}],"supportsClipboardContext":true,"supportsConditionalBreakpoints":true,"supportsConfigurationDoneRequest":true,"supportsDelayedStackTraceLoading":true,"supportsEvaluateForHovers":true,"supportsLogPoints":true,"supportsRestartRequest":false,"supportsTerminateRequest":true,"supportsValueFormattingOptions":true},"command":"initialize","request_seq":1,"success":true}
[12:58:15 PM] [DAP] [Info] ==> {"command":"launch","arguments":{"dartCodeDebugSessionID":"session-4a544","type":"dart","request":"launch","program":"D:\\Flutter\\tintuc\\lib\\main.dart","projectRootPath":"D:\\Flutter\\tintuc","cwd":"D:\\Flutter\\tintuc","name":"Flutter (Pixel 6 Pro API 33)","deviceId":"emulator-5554","deviceName":"Pixel 6 Pro API 33 (android-x64)","toolEnv":{"FLUTTER_HOST":"VSCode","PUB_ENVIRONMENT":"vscode.dart-code","FLUTTER_ROOT":"C:\\src\\flutter"},"sendLogsToClient":false,"sendCustomProgressEvents":true,"allowAnsiColorOutput":true,"additionalProjectPaths":["D:\\Flutter\\tintuc"],"args":[],"vmAdditionalArgs":[],"toolArgs":["-d","emulator-5554","--devtools-server-address","http://127.0.0.1:9100/"],"vmServicePort":0,"dartSdkPath":"C:\\src\\flutter\\bin\\cache\\dart-sdk","vmServiceLogFile":"D:\\Flutter\\tintuc\\logs\\observatory.txt","maxLogLineLength":2000,"dartTestLogFile":"D:\\Flutter\\tintuc\\logs\\dart_test.txt","debugSdkLibraries":false,"debugExternalPackageLibraries":false,"showDartDeveloperLogs":true,"evaluateGettersInDebugViews":true,"showGettersInDebugViews":true,"evaluateToStringInDebugViews":true,"flutterSdkPath":"C:\\src\\flutter","useInspectorNotificationsForWidgetErrors":true,"flutterRunLogFile":"D:\\Flutter\\tintuc\\logs\\flutter_run.txt","flutterTestLogFile":"D:\\Flutter\\tintuc\\logs\\flutter_test.txt","showMemoryUsage":false,"debuggerType":2,"__sessionId":"087877e3-c3ed-4ad8-b9e7-d10d626f1deb"},"type":"request","seq":2}
[12:58:15 PM] [DAP] [Info] <== {"seq":2,"type":"event","body":{},"event":"initialized"}
[12:58:15 PM] [DAP] [Info] ==> {"command":"setBreakpoints","arguments":{"source":{"name":"c:\\src\\flutter\\bin\\cache\\pkg\\sky_engine\\lib\\_internal\\vm\\bin\\socket_patch.dart","path":"C:\\src\\flutter\\bin\\cache\\pkg\\sky_engine\\lib\\_internal\\vm\\bin\\socket_patch.dart","sourceReference":3},"lines":[520],"breakpoints":[{"line":520}],"sourceModified":false},"type":"request","seq":3}
[12:58:15 PM] [DAP] [Info] ==> {"command":"setBreakpoints","arguments":{"source":{"name":"taobaivieta.dart","path":"d:\\Flutter\\tintuc\\lib\\danhsachbaiviet\\taobaivieta.dart"},"lines":[107],"breakpoints":[{"line":107}],"sourceModified":false},"type":"request","seq":4}
[12:58:15 PM] [DAP] [Info] ==> {"command":"setExceptionBreakpoints","arguments":{"filters":["All","Unhandled"]},"type":"request","seq":5}
[12:58:15 PM] [DAP] [Info] <== {"seq":3,"type":"response","body":{"breakpoints":[{"id":100000,"verified":false}]},"command":"setBreakpoints","request_seq":3,"success":true}
[12:58:15 PM] [DAP] [Info] <== {"seq":4,"type":"response","body":{"breakpoints":[{"id":100001,"verified":false}]},"command":"setBreakpoints","request_seq":4,"success":true}
[12:58:15 PM] [DAP] [Info] <== {"seq":5,"type":"response","body":{},"command":"setExceptionBreakpoints","request_seq":5,"success":true}
[12:58:15 PM] [DAP] [Info] ==> {"command":"configurationDone","type":"request","seq":6}
[12:58:15 PM] [DAP] [Info] <== {"seq":6,"type":"response","command":"configurationDone","request_seq":6,"success":true}
[12:58:15 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":7}
[12:58:15 PM] [DAP] [Info] <== {"seq":7,"type":"event","body":{"message":"Launching…","progressId":"launch_1","title":"Flutter"},"event":"dart.progressStart"}
[12:58:15 PM] [DAP] [Info] <== {"seq":8,"type":"response","command":"launch","request_seq":2,"success":true}
[12:58:15 PM] [DAP] [Info] <== {"seq":9,"type":"response","body":{"threads":[]},"command":"threads","request_seq":7,"success":true}
[12:58:17 PM] [DAP] [Info] <== {"seq":10,"type":"event","body":{"capabilities":{"supportsRestartRequest":true}},"event":"capabilities"}
[12:58:17 PM] [DAP] [Info] <== {"seq":11,"type":"event","body":{"appId":"9783b036-bfd3-4737-b75b-beb45fab416e","deviceId":"emulator-5554","directory":"D:\\Flutter\\tintuc","supportsRestart":true,"launchMode":"run","mode":"debug"},"event":"flutter.appStart"}
[12:58:17 PM] [DAP] [Info] <== {"seq":12,"type":"event","body":{"category":"console","output":"Launching lib\\main.dart on sdk gphone x86 64 in debug mode...\n"},"event":"output"}
[12:58:17 PM] [DAP] [Info] <== {"seq":13,"type":"event","body":{"category":"console","output":"Building with Flutter multidex support enabled.\n"},"event":"output"}
[12:58:26 PM] [DAP] [Info] <== {"seq":14,"type":"event","body":{"category":"console","output":"√  Built build\\app\\outputs\\flutter-apk\\app-debug.apk.\n"},"event":"output"}
[12:58:33 PM] [DAP] [Info] <== {"seq":15,"type":"event","body":{"progressId":"launch_1"},"event":"dart.progressEnd"}
[12:58:33 PM] [DAP] [Info] <== {"seq":16,"type":"event","body":{"output":"Connecting to VM Service at ws://127.0.0.1:64094/JW16YMBk4As=/ws\n"},"event":"output"}
[12:58:33 PM] [DAP] [Info] <== {"seq":17,"type":"event","body":{"vmServiceUri":"ws://127.0.0.1:64094/JW16YMBk4As=/ws"},"event":"dart.debuggerUris"}
[12:58:33 PM] [DAP] [Info] <== {"seq":18,"type":"event","body":{"reason":"started","threadId":1},"event":"thread"}
[12:58:33 PM] [DAP] [Info] <== {"seq":19,"type":"event","body":{"category":"stdout","output":"I/.example.tintuc(12131): Compiler allocated 4533KB to compile void android.view.ViewRootImpl.performTraversals()\n"},"event":"output"}
[12:58:33 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":8}
[12:58:33 PM] [DAP] [Info] <== {"seq":20,"type":"response","body":{"threads":[{"id":1,"name":"main"}]},"command":"threads","request_seq":8,"success":true}
[12:58:35 PM] [DAP] [Info] <== {"seq":21,"type":"event","body":{},"event":"flutter.appStarted"}
[12:58:35 PM] [DAP] [Info] <== {"seq":22,"type":"event","body":{"service":"reloadSources","method":"s0.reloadSources"},"event":"dart.serviceRegistered"}
[12:58:35 PM] [DAP] [Info] <== {"seq":23,"type":"event","body":{"service":"hotRestart","method":"s0.hotRestart"},"event":"dart.serviceRegistered"}
[12:58:35 PM] [DAP] [Info] <== {"seq":24,"type":"event","body":{"service":"flutterVersion","method":"s0.flutterVersion"},"event":"dart.serviceRegistered"}
[12:58:35 PM] [DAP] [Info] <== {"seq":25,"type":"event","body":{"service":"compileExpression","method":"s0.compileExpression"},"event":"dart.serviceRegistered"}
[12:58:35 PM] [DAP] [Info] <== {"seq":26,"type":"event","body":{"service":"flutterMemoryInfo","method":"s0.flutterMemoryInfo"},"event":"dart.serviceRegistered"}
[12:58:35 PM] [DAP] [Info] <== {"seq":27,"type":"event","body":{"service":"flutterGetSkSL","method":"s0.flutterGetSkSL"},"event":"dart.serviceRegistered"}
[12:58:35 PM] [DAP] [Info] <== {"seq":28,"type":"event","body":{"service":"launchDevTools","method":"s2.launchDevTools"},"event":"dart.serviceRegistered"}
[12:58:35 PM] [DAP] [Info] <== {"seq":29,"type":"event","body":{"extensionRPC":"ext.flutter.reassemble","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":30,"type":"event","body":{"extensionRPC":"ext.flutter.exit","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":31,"type":"event","body":{"extensionRPC":"ext.flutter.connectedVmServiceUri","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":32,"type":"event","body":{"extensionRPC":"ext.flutter.activeDevToolsServerAddress","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":33,"type":"event","body":{"extensionRPC":"ext.flutter.platformOverride","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":34,"type":"event","body":{"extensionRPC":"ext.flutter.brightnessOverride","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":35,"type":"event","body":{"extensionRPC":"ext.flutter.timeDilation","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":36,"type":"event","body":{"extensionRPC":"ext.flutter.evict","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":37,"type":"event","body":{"extensionRPC":"ext.flutter.invertOversizedImages","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":38,"type":"event","body":{"extensionRPC":"ext.flutter.debugPaint","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":39,"type":"event","body":{"extensionRPC":"ext.flutter.debugPaintBaselinesEnabled","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":40,"type":"event","body":{"extensionRPC":"ext.flutter.repaintRainbow","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":41,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpLayerTree","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":42,"type":"event","body":{"extensionRPC":"ext.flutter.debugDisableClipLayers","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":43,"type":"event","body":{"extensionRPC":"ext.flutter.debugDisablePhysicalShapeLayers","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":44,"type":"event","body":{"extensionRPC":"ext.flutter.debugDisableOpacityLayers","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":45,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpRenderTree","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":46,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpSemanticsTreeInTraversalOrder","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":47,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpSemanticsTreeInInverseHitTestOrder","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":48,"type":"event","body":{"extensionRPC":"ext.flutter.profileRenderObjectPaints","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":49,"type":"event","body":{"extensionRPC":"ext.flutter.profileRenderObjectLayouts","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":50,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpApp","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":51,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpFocusTree","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":52,"type":"event","body":{"extensionRPC":"ext.flutter.showPerformanceOverlay","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":53,"type":"event","body":{"extensionRPC":"ext.flutter.didSendFirstFrameEvent","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":54,"type":"event","body":{"extensionRPC":"ext.flutter.didSendFirstFrameRasterizedEvent","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":55,"type":"event","body":{"extensionRPC":"ext.flutter.profileWidgetBuilds","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":56,"type":"event","body":{"extensionRPC":"ext.flutter.profileUserWidgetBuilds","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":57,"type":"event","body":{"extensionRPC":"ext.flutter.debugAllowBanner","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":58,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.structuredErrors","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":59,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.show","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":60,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.trackRebuildDirtyWidgets","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":61,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.trackRepaintWidgets","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":62,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.disposeAllGroups","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":63,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.disposeGroup","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":64,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.isWidgetTreeReady","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":65,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.disposeId","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":66,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setPubRootDirectories","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":67,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.addPubRootDirectories","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":68,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.removePubRootDirectories","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":69,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getPubRootDirectories","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] ==> {"command":"callService","arguments":{"method":"ext.flutter.inspector.setPubRootDirectories","params":{"isolateId":"isolates/3812844463778603","arg0":"file:///D:/Flutter/tintuc"}},"type":"request","seq":9}
[12:58:35 PM] [DAP] [Info] <== {"seq":70,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setSelectionById","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":71,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getParentChain","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":72,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getProperties","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":73,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getChildren","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":74,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getChildrenSummaryTree","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":75,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getChildrenDetailsSubtree","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":76,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getRootWidget","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":77,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getRootWidgetSummaryTree","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":78,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getRootWidgetSummaryTreeWithPreviews","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":79,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getDetailsSubtree","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":80,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getSelectedWidget","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":81,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getSelectedSummaryWidget","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":82,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.isWidgetCreationTracked","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":83,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.screenshot","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":84,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getLayoutExplorerNode","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":85,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setFlexFit","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":86,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setFlexFactor","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":87,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setFlexProperties","isolateId":"isolates/3812844463778603"},"event":"dart.serviceExtensionAdded"}
[12:58:35 PM] [DAP] [Info] <== {"seq":88,"type":"event","body":{"extension":"ext.flutter.activeDevToolsServerAddress","value":"http://127.0.0.1:9100"},"event":"flutter.serviceExtensionStateChanged"}
[12:58:35 PM] [DAP] [Info] <== {"seq":89,"type":"event","body":{"extension":"ext.flutter.connectedVmServiceUri","value":"http://127.0.0.1:64094/JW16YMBk4As=/"},"event":"flutter.serviceExtensionStateChanged"}
[12:58:35 PM] [DAP] [Info] <== {"seq":90,"type":"event","body":{"extension":"ext.flutter.inspector.structuredErrors","value":true},"event":"flutter.serviceExtensionStateChanged"}
[12:58:35 PM] [DAP] [Info] <== {"seq":91,"type":"response","body":{"result":null,"type":"_extensionType","method":"ext.flutter.inspector.setPubRootDirectories"},"command":"callService","request_seq":9,"success":true}
[12:58:35 PM] [DAP] [Info] <== {"seq":92,"type":"event","body":{"category":"stdout","output":"D/CompatibilityChangeReporter(12131): Compat change id reported: 183155436; UID 10171; state: ENABLED\n"},"event":"output"}
[12:58:36 PM] [DAP] [Info] <== {"seq":93,"type":"event","body":{"category":"stdout","output":"I/FirebaseApp(12131): Device unlocked: initializing all Firebase APIs for app [DEFAULT]\n"},"event":"output"}
[12:58:36 PM] [DAP] [Info] <== {"seq":94,"type":"event","body":{"category":"stdout","output":"D/FirebaseAuth(12131): Notifying id token listeners about user ( dlQUShZwTNauBaiAC73oiPtacgZ2 ).\n"},"event":"output"}
[12:58:37 PM] [DAP] [Info] <== {"seq":95,"type":"event","body":{"category":"stdout","output":"D/ProfileInstaller(12131): Installing profile for com.example.tintuc\n"},"event":"output"}
[12:58:37 PM] [DAP] [Info] <== {"seq":96,"type":"event","body":{"category":"stdout","output":"I/ExoPlayerImpl(12131): Init 7ef6527 [ExoPlayerLib/2.18.7] [emu64xa, sdk_gphone_x86_64, Google, 33]\n"},"event":"output"}
[12:58:37 PM] [DAP] [Info] <== {"seq":97,"type":"event","body":{"category":"stdout","output":"W/.example.tintuc(12131): Accessing hidden method Landroid/media/AudioTrack;->getLatency()I (unsupported, reflection, allowed)\n"},"event":"output"}
[12:58:37 PM] [DAP] [Info] <== {"seq":98,"type":"event","body":{"category":"stdout","output":"D/TrafficStats(12131): tagSocket(131) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:58:37 PM] [DAP] [Info] <== {"seq":99,"type":"event","body":{"category":"stdout","output":"W/DynamiteModule(12131): Local module descriptor class for com.google.android.gms.providerinstaller.dynamite not found.\n"},"event":"output"}
[12:58:37 PM] [DAP] [Info] <== {"seq":100,"type":"event","body":{"category":"stdout","output":"I/DynamiteModule(12131): Considering local module com.google.android.gms.providerinstaller.dynamite:0 and remote module com.google.android.gms.providerinstaller.dynamite:0\n"},"event":"output"}
[12:58:37 PM] [DAP] [Info] <== {"seq":101,"type":"event","body":{"category":"stdout","output":"W/ProviderInstaller(12131): Failed to load providerinstaller module: No acceptable module com.google.android.gms.providerinstaller.dynamite found. Local version is 0 and remote version is 0.\n"},"event":"output"}
[12:58:37 PM] [DAP] [Info] <== {"seq":102,"type":"event","body":{"category":"stdout","output":"D/nativeloader(12131): Configuring classloader-namespace for other apk /system/framework/org.apache.http.legacy.jar. target_sdk_version=33, uses_libraries=ALL, library_path=/product/priv-app/PrebuiltGmsCore/lib/x86_64:/product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk!/lib/x86_64, permitted_path=/data:/mnt/expand:/data/user/0/com.google.android.gms\n"},"event":"output"}
[12:58:37 PM] [DAP] [Info] <== {"seq":103,"type":"event","body":{"category":"stdout","output":"D/nativeloader(12131): Configuring classloader-namespace for other apk /system/framework/com.android.media.remotedisplay.jar. target_sdk_version=33, uses_libraries=ALL, library_path=/product/priv-app/PrebuiltGmsCore/lib/x86_64:/product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk!/lib/x86_64, permitted_path=/data:/mnt/expand:/data/user/0/com.google.android.gms\n"},"event":"output"}
[12:58:37 PM] [DAP] [Info] <== {"seq":104,"type":"event","body":{"category":"stdout","output":"D/nativeloader(12131): Configuring classloader-namespace for other apk /system/framework/com.android.location.provider.jar. target_sdk_version=33, uses_libraries=ALL, library_path=/product/priv-app/PrebuiltGmsCore/lib/x86_64:/product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk!/lib/x86_64, permitted_path=/data:/mnt/expand:/data/user/0/com.google.android.gms\n"},"event":"output"}
[12:58:37 PM] [DAP] [Info] <== {"seq":105,"type":"event","body":{"category":"stdout","output":"D/nativeloader(12131): Configuring vendor-classloader-namespace for unbundled product apk /product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk. target_sdk_version=33, uses_libraries=, library_path=/product/priv-app/PrebuiltGmsCore/lib/x86_64:/product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk!/lib/x86_64:/product/lib64:/system/product/lib64, permitted_path=/data:/mnt/expand:/data/user/0/com.google.android.gms:/product/lib64:/system/product/lib64\n"},"event":"output"}
[12:58:38 PM] [DAP] [Info] <== {"seq":106,"type":"event","body":{"category":"stdout","output":"V/NativeCrypto(12131): Registering com/google/android/gms/org/conscrypt/NativeCrypto's 295 native methods...\n"},"event":"output"}
[12:58:38 PM] [DAP] [Info] <== {"seq":107,"type":"event","body":{"category":"stdout","output":"W/.example.tintuc(12131): Accessing hidden method Ljava/security/spec/ECParameterSpec;->getCurveName()Ljava/lang/String; (unsupported, reflection, allowed)\n"},"event":"output"}
[12:58:38 PM] [DAP] [Info] <== {"seq":108,"type":"event","body":{"category":"stdout","output":"I/ProviderInstaller(12131): Installed default security provider GmsCore_OpenSSL\n"},"event":"output"}
[12:58:38 PM] [DAP] [Info] <== {"seq":109,"type":"event","body":{"reason":"exception","text":"SocketException (SocketException: Failed host lookup: '6579676ff08799dc8046d2e5.mockapi.io' (OS Error: No address associated with hostname, errno = 7))","threadId":1},"event":"stopped"}
[12:58:38 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":10}
[12:58:38 PM] [DAP] [Info] <== {"seq":110,"type":"response","body":{"threads":[{"id":1,"name":"main"}]},"command":"threads","request_seq":10,"success":true}
[12:58:38 PM] [DAP] [Info] ==> {"command":"stackTrace","arguments":{"threadId":1,"startFrame":0,"levels":1},"type":"request","seq":11}
[12:58:38 PM] [DAP] [Info] <== {"seq":111,"type":"response","body":{"stackFrames":[{"canRestart":false,"column":9,"id":2,"line":520,"name":"_NativeSocket.lookup.<anonymous closure>","source":{"adapterData":{"type":"@Script","id":"libraries/@13069316/scripts/dart%3Aio-patch%2Fsocket_patch.dart/0","fixedId":true,"uri":"dart:io-patch/socket_patch.dart"},"name":"dart:io-patch/socket_patch.dart","origin":"from the SDK","path":"C:\\src\\flutter\\bin\\cache\\pkg\\sky_engine\\lib\\_internal\\vm\\bin\\socket_patch.dart","presentationHint":"deemphasize","sourceReference":3}}],"totalFrames":21},"command":"stackTrace","request_seq":11,"success":true}
[12:58:38 PM] [DAP] [Info] <== {"seq":112,"type":"event","body":{"category":"stdout","output":"W/Parcel  (12131): Expecting binder but got null!\n"},"event":"output"}
[12:58:38 PM] [DAP] [Info] <== {"seq":113,"type":"event","body":{"category":"stdout","output":"D/TrafficStats(12131): tagSocket(146) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:58:38 PM] [DAP] [Info] <== {"seq":114,"type":"event","body":{"category":"stdout","output":"W/.example.tintuc(12131): Accessing hidden field Ljava/net/Socket;->impl:Ljava/net/SocketImpl; (unsupported, reflection, allowed)\n"},"event":"output"}
[12:58:38 PM] [DAP] [Info] ==> {"command":"stackTrace","arguments":{"threadId":1,"startFrame":1,"levels":19},"type":"request","seq":12}
[12:58:38 PM] [DAP] [Info] <== {"seq":115,"type":"event","body":{"category":"stdout","output":"W/.example.tintuc(12131): Accessing hidden method Ljava/security/spec/ECParameterSpec;->setCurveName(Ljava/lang/String;)V (unsupported, reflection, allowed)\n"},"event":"output"}
[12:58:39 PM] [DAP] [Info] <== {"seq":116,"type":"event","body":{"category":"stdout","output":"D/TrafficStats(12131): tagSocket(131) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:58:39 PM] [DAP] [Info] <== {"seq":117,"type":"response","body":{"stackFrames":[{"column":0,"id":4,"line":0,"name":"<asynchronous gap>","presentationHint":"label"},{"canRestart":false,"column":29,"id":5,"line":633,"name":"_NativeSocket.staggeredLookup.<anonymous closure>.lookupAddresses","source":{"adapterData":{"type":"@Script","id":"libraries/@13069316/scripts/dart%3Aio-patch%2Fsocket_patch.dart/0","fixedId":true,"uri":"dart:io-patch/socket_patch.dart"},"name":"dart:io-patch/socket_patch.dart","origin":"from the SDK","path":"C:\\src\\flutter\\bin\\cache\\pkg\\sky_engine\\lib\\_internal\\vm\\bin\\socket_patch.dart","presentationHint":"deemphasize","sourceReference":7}},{"column":0,"id":6,"line":0,"name":"<asynchronous gap>","presentationHint":"label"}],"totalFrames":4},"command":"stackTrace","request_seq":12,"success":true}
[12:58:39 PM] [DAP] [Info] <== {"seq":118,"type":"event","body":{"category":"stdout","output":"I/.example.tintuc(12131): Background concurrent copying GC freed 105878(6690KB) AllocSpace objects, 23(892KB) LOS objects, 49% free, 5737KB/11MB, paused 1.547ms,102us total 219.064ms\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":119,"type":"event","body":{"category":"stdout","output":"I/DMCodecAdapterFactory(12131): Creating an asynchronous MediaCodec adapter for track type video\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":120,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131): allocate(c2.goldfish.h264.decoder)\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":121,"type":"event","body":{"category":"stdout","output":"I/Codec2Client(12131): Available Codec2 services: \"default\" \"software\"\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":122,"type":"event","body":{"category":"stdout","output":"I/CCodec  (12131): setting up 'default' as default (vendor) store\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":123,"type":"event","body":{"category":"stdout","output":"I/CCodec  (12131): Created component [c2.goldfish.h264.decoder]\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":124,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131): read media type: video/avc\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":125,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12131): extent() != 1 for single value type: algo.buffers.max-count.values\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":126,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12131): extent() != 1 for single value type: output.subscribed-indices.values\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":127,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12131): extent() != 1 for single value type: input.buffers.allocator-ids.values\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":128,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12131): extent() != 1 for single value type: output.buffers.allocator-ids.values\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":129,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12131): extent() != 1 for single value type: algo.buffers.allocator-ids.values\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":130,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12131): extent() != 1 for single value type: output.buffers.pool-ids.values\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":131,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12131): extent() != 1 for single value type: algo.buffers.pool-ids.values\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":132,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12131): ignored struct field coded.color-format.locations\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":133,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131): ignoring local param raw.size (0xd2001800) as it is already supported\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":134,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131): ignoring local param default.color (0x5200180b) as it is already supported\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":135,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12131): ignored struct field raw.hdr-static-info.mastering\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":136,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig(12131): query failed after returning 12 values (BAD_INDEX)\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":137,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131): c2 config diff is Dict {\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":138,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 coded.pl.level = 20496\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":139,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 coded.pl.profile = 20481\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":140,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 coded.vui.color.matrix = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":141,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 coded.vui.color.primaries = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":142,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 coded.vui.color.range = 2\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":143,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 coded.vui.color.transfer = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":144,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 default.color.matrix = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":145,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 default.color.primaries = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":146,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 default.color.range = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":147,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 default.color.transfer = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":148,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 input.buffers.max-size.value = 6291456\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":149,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 input.delay.value = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":150,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   string input.media-type.value = \"video/avc\"\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":151,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 output.delay.value = 8\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":152,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   string output.media-type.value = \"video/raw\"\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":153,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.color.matrix = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":154,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.color.primaries = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":155,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.color.range = 2\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":156,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.color.transfer = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":157,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.max-size.height = 240\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":158,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.max-size.width = 320\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":159,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.pixel-format.value = 35\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":160,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::i32 raw.rotation.flip = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":161,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::i32 raw.rotation.value = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":162,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.sar.height = 1\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":163,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.sar.width = 1\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":164,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.size.height = 240\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":165,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.size.width = 320\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":166,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2:\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":167,"type":"event","body":{"category":"stdout","output":"W/ColorUtils(12131): expected specified color aspects (2:0:0:0)\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":168,"type":"event","body":{"category":"stdout","output":"I/MediaCodec(12131): MediaCodec will operate in async mode\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":169,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils(12131): connecting to surface 0x734a3dde7530, reason connectToSurface\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":170,"type":"event","body":{"category":"stdout","output":"I/MediaCodec(12131): [c2.goldfish.h264.decoder] setting surface generation to 12422145\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":171,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils(12131): disconnecting from surface 0x734a3dde7530, reason connectToSurface(reconnect)\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":172,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils(12131): connecting to surface 0x734a3dde7530, reason connectToSurface(reconnect)\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":173,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131): [c2.goldfish.h264.decoder] buffers are bound to CCodec for this session\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":174,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131): no c2 equivalents for csd-1\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":175,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131): no c2 equivalents for log-session-id\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":176,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131): no c2 equivalents for native-window\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":177,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131): no c2 equivalents for flags\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":178,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131): config failed => CORRUPTED\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":179,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131): c2 config diff is   c2::u32 raw.max-size.height = 720\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":180,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.max-size.width = 1280\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":181,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.size.height = 720\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":182,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.size.width = 1280\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":183,"type":"event","body":{"category":"stdout","output":"W/Codec2Client(12131): query -- param skipped: index = 1107298332.\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":184,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131): client requested max input size 219813, which is smaller than what component recommended (6291456); overriding with component recommendation.\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":185,"type":"event","body":{"category":"stdout","output":"W/CCodec  (12131): This behavior is subject to change. It is recommended that app developers double check whether the requested max input size is in reasonable range.\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":186,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131): encoding statistics level = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":187,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131): setup formats input: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":188,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t height = 720\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":189,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t level = 65536\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":190,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t max-input-size = 6291456\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":191,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   string mime = \"video/avc\"\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":192,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t profile = 65536\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":193,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t width = 1280\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":194,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   Rect crop(0, 0, 1279, 719)\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":195,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131): }\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":196,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131): setup formats output: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":197,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t android._color-format = 2135033992\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":198,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t android._video-scaling = 1\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":199,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t rotation-degrees = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":200,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t color-standard = 1\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":201,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t color-range = 2\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":202,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t color-transfer = 3\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":203,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t sar-height = 1\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":204,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t sar-width = 1\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":205,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   Rect crop(0, 0, 1279, 719)\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":206,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t width = 1280\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":207,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t height = 720\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":208,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t max-height = 720\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":209,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t max-width = 1280\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":210,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   string mime = \"video/raw\"\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":211,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t android._dataspace = 260\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":212,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t color-format = 2130708361\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":213,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131): }\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":214,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig(12131): query failed after returning 12 values (BAD_INDEX)\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":215,"type":"event","body":{"category":"stdout","output":"D/MediaCodec(12131): keep callback message for reclaim\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":216,"type":"event","body":{"category":"stdout","output":"W/Codec2Client(12131): query -- param skipped: index = 1342179345.\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":217,"type":"event","body":{"category":"stdout","output":"W/Codec2Client(12131): query -- param skipped: index = 2415921170.\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":218,"type":"event","body":{"category":"stdout","output":"W/Codec2Client(12131): query -- param skipped: index = 1610614798.\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":219,"type":"event","body":{"category":"stdout","output":"W/Codec2Client(12131): query -- param skipped: index = 2684356609.\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":220,"type":"event","body":{"category":"stdout","output":"D/C2Store (12131): Using DMABUF Heaps\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":221,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel(12131): [c2.goldfish.h264.decoder#614] Created input block pool with allocatorID 16 => poolID 17 - OK (0)\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":222,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel(12131): [c2.goldfish.h264.decoder#614] Query output surface allocator returned 0 params => BAD_INDEX (6)\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":223,"type":"event","body":{"category":"stdout","output":"I/CCodecBufferChannel(12131): [c2.goldfish.h264.decoder#614] Created output block pool with allocatorID 18 => poolID 23 - OK\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":224,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel(12131): [c2.goldfish.h264.decoder#614] Configured output block pool ids 23 => OK\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":225,"type":"event","body":{"category":"stdout","output":"D/Codec2-OutputBufferQueue(12131): remote graphic buffer migration 0/0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":226,"type":"event","body":{"category":"stdout","output":"D/Codec2Client(12131): setOutputSurface -- failed to set consumer usage (6/BAD_INDEX)\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":227,"type":"event","body":{"category":"stdout","output":"D/Codec2Client(12131): setOutputSurface -- generation=12422145 consumer usage=0x900\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":228,"type":"event","body":{"category":"stdout","output":"D/Codec2Client(12131): Surface configure completed\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":229,"type":"event","body":{"category":"stdout","output":"I/DMABUFHEAPS(12131): Using DMA-BUF heap named: system\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":230,"type":"event","body":{"category":"stdout","output":"I/DMCodecAdapterFactory(12131): Creating an asynchronous MediaCodec adapter for track type audio\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":231,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131): allocate(c2.android.aac.decoder)\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":232,"type":"event","body":{"category":"stdout","output":"I/CCodec  (12131): setting up 'default' as default (vendor) store\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":233,"type":"event","body":{"category":"stdout","output":"I/CCodec  (12131): Created component [c2.android.aac.decoder]\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":234,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131): read media type: audio/mp4a-latm\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":235,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12131): extent() != 1 for single value type: algo.buffers.max-count.values\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":236,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12131): extent() != 1 for single value type: output.subscribed-indices.values\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":237,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12131): extent() != 1 for single value type: input.buffers.allocator-ids.values\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":238,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12131): extent() != 1 for single value type: output.buffers.allocator-ids.values\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":239,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12131): extent() != 1 for single value type: algo.buffers.allocator-ids.values\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":240,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12131): extent() != 1 for single value type: output.buffers.pool-ids.values\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":241,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12131): extent() != 1 for single value type: algo.buffers.pool-ids.values\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":242,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig(12131): query failed after returning 20 values (BAD_INDEX)\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":243,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131): c2 config diff is Dict {\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":244,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 coded.aac-packaging.value = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":245,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 coded.bitrate.value = 64000\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":246,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 coded.pl.level = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":247,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 coded.pl.profile = 8192\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":248,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::i32 coding.drc.album-mode.value = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":249,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::float coding.drc.attenuation-factor.value = 1\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":250,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::float coding.drc.boost-factor.value = 1\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":251,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::i32 coding.drc.compression-mode.value = 3\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":252,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::i32 coding.drc.effect-type.value = 3\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":253,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::float coding.drc.encoded-level.value = 0.25\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":254,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::float coding.drc.reference-level.value = -16\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":255,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 input.buffers.max-size.value = 8192\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":256,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 input.delay.value = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":257,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   string input.media-type.value = \"audio/mp4a-latm\"\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":258,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 output.delay.value = 2\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":259,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::float output.drc.output-loudness.value = 0.25\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":260,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   string output.media-type.value = \"audio/raw\"\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":261,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.channel-count.value = 1\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":262,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.channel-mask.value = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":263,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.max-channel-count.value = 8\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":264,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.sample-rate.value = 44100\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":265,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131): }\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":266,"type":"event","body":{"category":"stdout","output":"I/MediaCodec(12131): MediaCodec will operate in async mode\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":267,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131): [c2.android.aac.decoder] buffers are bound to CCodec for this session\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":268,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131): no c2 equivalents for log-session-id\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":269,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131): no c2 equivalents for flags\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":270,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131): config failed => CORRUPTED\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":271,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131): c2 config diff is   c2::u32 raw.channel-count.value = 2\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":272,"type":"event","body":{"category":"stdout","output":"W/Codec2Client(12131): query -- param skipped: index = 1107298332.\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":273,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131): client requested max input size 623, which is smaller than what component recommended (8192); overriding with component recommendation.\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":274,"type":"event","body":{"category":"stdout","output":"W/CCodec  (12131): This behavior is subject to change. It is recommended that app developers double check whether the requested max input size is in reasonable range.\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":275,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131): encoding statistics level = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":276,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131): setup formats input: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":277,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t aac-drc-album-mode = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":278,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t aac-drc-boost-level = 127\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":279,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t aac-drc-cut-level = 127\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":280,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t aac-drc-effect-type = 3\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":281,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t aac-encoded-target-level = -1\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":282,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t aac-max-output-channel_count = 8\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":283,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t aac-target-ref-level = 64\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":284,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t bitrate = 64000\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":285,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t channel-count = 2\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":286,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t channel-mask = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":287,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t level = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":288,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t max-input-size = 8192\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":289,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t max-output-channel-count = 8\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":290,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   string mime = \"audio/mp4a-latm\"\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":291,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t profile = 2\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":292,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t sample-rate = 44100\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":293,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131): }\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":294,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131): setup formats output: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":295,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t aac-drc-album-mode = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":296,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t aac-drc-boost-level = 127\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":297,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t aac-drc-cut-level = 127\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":298,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t aac-drc-effect-type = 3\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":299,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t aac-drc-output-loudness = -1\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":300,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t aac-encoded-target-level = -1\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":301,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t aac-max-output-channel_count = 8\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":302,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t aac-target-ref-level = 64\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":303,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t channel-count = 2\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":304,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t channel-mask = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":305,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t max-output-channel-count = 8\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":306,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   string mime = \"audio/raw\"\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":307,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t sample-rate = 44100\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":308,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131):   int32_t android._config-pcm-encoding = 2\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":309,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12131): }\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":310,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig(12131): query failed after returning 20 values (BAD_INDEX)\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":311,"type":"event","body":{"category":"stdout","output":"D/MediaCodec(12131): keep callback message for reclaim\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":312,"type":"event","body":{"category":"stdout","output":"W/Codec2Client(12131): query -- param skipped: index = 1342179345.\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":313,"type":"event","body":{"category":"stdout","output":"W/Codec2Client(12131): query -- param skipped: index = 2415921170.\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":314,"type":"event","body":{"category":"stdout","output":"W/Codec2Client(12131): query -- param skipped: index = 1610614798.\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":315,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel(12131): [c2.android.aac.decoder#661] Created input block pool with allocatorID 16 => poolID 18 - OK (0)\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":316,"type":"event","body":{"category":"stdout","output":"I/CCodecBufferChannel(12131): [c2.android.aac.decoder#661] Created output block pool with allocatorID 16 => poolID 32 - OK\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":317,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel(12131): [c2.android.aac.decoder#661] Configured output block pool ids 32 => OK\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":318,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131): c2 config diff is   c2::u32 raw.channel-mask.value = 12\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":319,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12131): [c2.android.aac.decoder#661:Output[N]] popFromStashAndRegister: at 1000000000000us, output format changed to AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":320,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12131):   int32_t aac-drc-album-mode = 0\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":321,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12131):   int32_t aac-drc-boost-level = 127\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":322,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12131):   int32_t aac-drc-cut-level = 127\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":323,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12131):   int32_t aac-drc-effect-type = 3\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":324,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12131):   int32_t aac-drc-output-loudness = -1\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":325,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12131):   int32_t aac-encoded-target-level = -1\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":326,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12131):   int32_t aac-max-output-channel_count = 8\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":327,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12131):   int32_t aac-target-ref-level = 64\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":328,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12131):   int32_t channel-count = 2\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":329,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12131):   int32_t channel-mask = 12\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":330,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12131):   int32_t max-output-channel-count = 8\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":331,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12131):   string mime = \"audio/raw\"\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":332,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12131):   int32_t sample-rate = 44100\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":333,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12131):   int32_t android._config-pcm-encoding = 2\n"},"event":"output"}
[12:58:40 PM] [DAP] [Info] <== {"seq":334,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12131): }\n"},"event":"output"}
[12:58:41 PM] [DAP] [Info] <== {"seq":335,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131): c2 config diff is   c2::u32 raw.color.matrix = 1\n"},"event":"output"}
[12:58:41 PM] [DAP] [Info] <== {"seq":336,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.color.primaries = 1\n"},"event":"output"}
[12:58:41 PM] [DAP] [Info] <== {"seq":337,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.color.transfer = 3\n"},"event":"output"}
[12:58:41 PM] [DAP] [Info] <== {"seq":338,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.crop.height = 720\n"},"event":"output"}
[12:58:41 PM] [DAP] [Info] <== {"seq":339,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.crop.left = 0\n"},"event":"output"}
[12:58:41 PM] [DAP] [Info] <== {"seq":340,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.crop.top = 0\n"},"event":"output"}
[12:58:41 PM] [DAP] [Info] <== {"seq":341,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12131):   c2::u32 raw.crop.width = 1280\n"},"event":"output"}
[12:58:44 PM] [DAP] [Info] <== {"seq":14,"type":"event","body":{"category":"console","output":"√  Built build\\app\\outputs\\flutter-apk\\app-debug.apk.\n"},"event":"output"}
[12:58:44 PM] [DAP] [Info] <== {"seq":342,"type":"event","body":{"category":"stdout","output":"Lost connection to device.\n"},"event":"output"}
[12:58:45 PM] [DAP] [Info] <== {"seq":343,"type":"event","body":{"output":"\nExited.\n"},"event":"output"}
[12:58:45 PM] [DAP] [Info] <== {"seq":344,"type":"event","body":{},"event":"terminated"}
[12:58:45 PM] [DAP] [Info] ==> {"command":"disconnect","arguments":{"restart":false},"type":"request","seq":13}
[12:58:45 PM] [DAP] [Info] <== {"seq":345,"type":"response","command":"disconnect","request_seq":13,"success":true}
[12:58:45 PM] [DAP] [Info] Stopping debug session f94d973d-7640-403a-be64-a8a308789e5f
[12:58:45 PM] [DAP] [Info] Debug session f94d973d-7640-403a-be64-a8a308789e5f errored: {}
[12:58:45 PM] [DAP] [Info] Debug session f94d973d-7640-403a-be64-a8a308789e5f exit: code: 1, signal: undefined
[12:58:47 PM] [DAP] [Info] <== {"seq":15,"type":"event","body":{"progressId":"launch_1"},"event":"dart.progressEnd"}
[12:58:47 PM] [DAP] [Info] <== {"seq":16,"type":"event","body":{"output":"Connecting to VM Service at ws://127.0.0.1:64152/3gI9lKwouWw=/ws\n"},"event":"output"}
[12:58:47 PM] [DAP] [Info] <== {"seq":17,"type":"event","body":{"vmServiceUri":"ws://127.0.0.1:64152/3gI9lKwouWw=/ws"},"event":"dart.debuggerUris"}
[12:58:47 PM] [DAP] [Info] <== {"seq":18,"type":"event","body":{"reason":"started","threadId":1},"event":"thread"}
[12:58:47 PM] [DAP] [Info] <== {"seq":19,"type":"event","body":{"category":"stdout","output":"I/.example.tintuc(12296): Compiler allocated 4533KB to compile void android.view.ViewRootImpl.performTraversals()\n"},"event":"output"}
[12:58:47 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":8}
[12:58:47 PM] [DAP] [Info] <== {"seq":20,"type":"response","body":{"threads":[{"id":1,"name":"main"}]},"command":"threads","request_seq":8,"success":true}
[12:58:49 PM] [DAP] [Info] <== {"seq":21,"type":"event","body":{},"event":"flutter.appStarted"}
[12:58:49 PM] [DAP] [Info] <== {"seq":22,"type":"event","body":{"service":"reloadSources","method":"s0.reloadSources"},"event":"dart.serviceRegistered"}
[12:58:49 PM] [DAP] [Info] <== {"seq":23,"type":"event","body":{"service":"hotRestart","method":"s0.hotRestart"},"event":"dart.serviceRegistered"}
[12:58:49 PM] [DAP] [Info] <== {"seq":24,"type":"event","body":{"service":"flutterVersion","method":"s0.flutterVersion"},"event":"dart.serviceRegistered"}
[12:58:49 PM] [DAP] [Info] <== {"seq":25,"type":"event","body":{"service":"compileExpression","method":"s0.compileExpression"},"event":"dart.serviceRegistered"}
[12:58:49 PM] [DAP] [Info] <== {"seq":26,"type":"event","body":{"service":"flutterMemoryInfo","method":"s0.flutterMemoryInfo"},"event":"dart.serviceRegistered"}
[12:58:49 PM] [DAP] [Info] <== {"seq":27,"type":"event","body":{"service":"flutterGetSkSL","method":"s0.flutterGetSkSL"},"event":"dart.serviceRegistered"}
[12:58:49 PM] [DAP] [Info] <== {"seq":28,"type":"event","body":{"service":"launchDevTools","method":"s2.launchDevTools"},"event":"dart.serviceRegistered"}
[12:58:49 PM] [DAP] [Info] <== {"seq":29,"type":"event","body":{"extensionRPC":"ext.flutter.reassemble","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":30,"type":"event","body":{"extensionRPC":"ext.flutter.exit","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":31,"type":"event","body":{"extensionRPC":"ext.flutter.connectedVmServiceUri","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":32,"type":"event","body":{"extensionRPC":"ext.flutter.activeDevToolsServerAddress","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":33,"type":"event","body":{"extensionRPC":"ext.flutter.platformOverride","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":34,"type":"event","body":{"extensionRPC":"ext.flutter.brightnessOverride","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":35,"type":"event","body":{"extensionRPC":"ext.flutter.timeDilation","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":36,"type":"event","body":{"extensionRPC":"ext.flutter.evict","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":37,"type":"event","body":{"extensionRPC":"ext.flutter.invertOversizedImages","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":38,"type":"event","body":{"extensionRPC":"ext.flutter.debugPaint","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":39,"type":"event","body":{"extensionRPC":"ext.flutter.debugPaintBaselinesEnabled","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":40,"type":"event","body":{"extensionRPC":"ext.flutter.repaintRainbow","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":41,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpLayerTree","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":42,"type":"event","body":{"extensionRPC":"ext.flutter.debugDisableClipLayers","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":43,"type":"event","body":{"extensionRPC":"ext.flutter.debugDisablePhysicalShapeLayers","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":44,"type":"event","body":{"extensionRPC":"ext.flutter.debugDisableOpacityLayers","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":45,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpRenderTree","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":46,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpSemanticsTreeInTraversalOrder","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":47,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpSemanticsTreeInInverseHitTestOrder","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":48,"type":"event","body":{"extensionRPC":"ext.flutter.profileRenderObjectPaints","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":49,"type":"event","body":{"extensionRPC":"ext.flutter.profileRenderObjectLayouts","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":50,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpApp","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":51,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpFocusTree","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":52,"type":"event","body":{"extensionRPC":"ext.flutter.showPerformanceOverlay","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":53,"type":"event","body":{"extensionRPC":"ext.flutter.didSendFirstFrameEvent","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":54,"type":"event","body":{"extensionRPC":"ext.flutter.didSendFirstFrameRasterizedEvent","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":55,"type":"event","body":{"extensionRPC":"ext.flutter.profileWidgetBuilds","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":56,"type":"event","body":{"extensionRPC":"ext.flutter.profileUserWidgetBuilds","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":57,"type":"event","body":{"extensionRPC":"ext.flutter.debugAllowBanner","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":58,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.structuredErrors","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":59,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.show","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":60,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.trackRebuildDirtyWidgets","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":61,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.trackRepaintWidgets","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":62,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.disposeAllGroups","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":63,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.disposeGroup","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":64,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.isWidgetTreeReady","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":65,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.disposeId","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":66,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setPubRootDirectories","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] ==> {"command":"callService","arguments":{"method":"ext.flutter.inspector.setPubRootDirectories","params":{"isolateId":"isolates/336448736559663","arg0":"file:///D:/Flutter/tintuc"}},"type":"request","seq":9}
[12:58:49 PM] [DAP] [Info] <== {"seq":67,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.addPubRootDirectories","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":68,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.removePubRootDirectories","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":69,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getPubRootDirectories","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":70,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setSelectionById","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":71,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getParentChain","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":72,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getProperties","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":73,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getChildren","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":74,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getChildrenSummaryTree","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":75,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getChildrenDetailsSubtree","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":76,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getRootWidget","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":77,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getRootWidgetSummaryTree","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":78,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getRootWidgetSummaryTreeWithPreviews","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":79,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getDetailsSubtree","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":80,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getSelectedWidget","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":81,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getSelectedSummaryWidget","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":82,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.isWidgetCreationTracked","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":83,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.screenshot","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":84,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getLayoutExplorerNode","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":85,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setFlexFit","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":86,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setFlexFactor","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":87,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setFlexProperties","isolateId":"isolates/336448736559663"},"event":"dart.serviceExtensionAdded"}
[12:58:49 PM] [DAP] [Info] <== {"seq":88,"type":"event","body":{"extension":"ext.flutter.inspector.structuredErrors","value":true},"event":"flutter.serviceExtensionStateChanged"}
[12:58:49 PM] [DAP] [Info] <== {"seq":89,"type":"response","body":{"result":null,"type":"_extensionType","method":"ext.flutter.inspector.setPubRootDirectories"},"command":"callService","request_seq":9,"success":true}
[12:58:49 PM] [DAP] [Info] <== {"seq":90,"type":"event","body":{"extension":"ext.flutter.activeDevToolsServerAddress","value":"http://127.0.0.1:9100"},"event":"flutter.serviceExtensionStateChanged"}
[12:58:49 PM] [DAP] [Info] <== {"seq":91,"type":"event","body":{"extension":"ext.flutter.connectedVmServiceUri","value":"http://127.0.0.1:64152/3gI9lKwouWw=/"},"event":"flutter.serviceExtensionStateChanged"}
[12:58:49 PM] [DAP] [Info] <== {"seq":92,"type":"event","body":{"category":"stdout","output":"D/CompatibilityChangeReporter(12296): Compat change id reported: 183155436; UID 10171; state: ENABLED\n"},"event":"output"}
[12:58:49 PM] [DAP] [Info] <== {"seq":93,"type":"event","body":{"category":"stdout","output":"I/FirebaseApp(12296): Device unlocked: initializing all Firebase APIs for app [DEFAULT]\n"},"event":"output"}
[12:58:49 PM] [DAP] [Info] <== {"seq":94,"type":"event","body":{"category":"stdout","output":"D/FirebaseAuth(12296): Notifying id token listeners about user ( dlQUShZwTNauBaiAC73oiPtacgZ2 ).\n"},"event":"output"}
[12:58:50 PM] [DAP] [Info] <== {"seq":95,"type":"event","body":{"category":"stdout","output":"I/ExoPlayerImpl(12296): Init baa0309 [ExoPlayerLib/2.18.7] [emu64xa, sdk_gphone_x86_64, Google, 33]\n"},"event":"output"}
[12:58:50 PM] [DAP] [Info] <== {"seq":96,"type":"event","body":{"category":"stdout","output":"W/.example.tintuc(12296): Accessing hidden method Landroid/media/AudioTrack;->getLatency()I (unsupported, reflection, allowed)\n"},"event":"output"}
[12:58:51 PM] [DAP] [Info] <== {"seq":97,"type":"event","body":{"category":"stdout","output":"D/TrafficStats(12296): tagSocket(131) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:58:51 PM] [DAP] [Info] <== {"seq":98,"type":"event","body":{"category":"stdout","output":"W/DynamiteModule(12296): Local module descriptor class for com.google.android.gms.providerinstaller.dynamite not found.\n"},"event":"output"}
[12:58:51 PM] [DAP] [Info] <== {"seq":99,"type":"event","body":{"category":"stdout","output":"I/DynamiteModule(12296): Considering local module com.google.android.gms.providerinstaller.dynamite:0 and remote module com.google.android.gms.providerinstaller.dynamite:0\n"},"event":"output"}
[12:58:51 PM] [DAP] [Info] <== {"seq":100,"type":"event","body":{"category":"stdout","output":"W/ProviderInstaller(12296): Failed to load providerinstaller module: No acceptable module com.google.android.gms.providerinstaller.dynamite found. Local version is 0 and remote version is 0.\n"},"event":"output"}
[12:58:51 PM] [DAP] [Info] <== {"seq":101,"type":"event","body":{"category":"stdout","output":"D/nativeloader(12296): Configuring classloader-namespace for other apk /system/framework/org.apache.http.legacy.jar. target_sdk_version=33, uses_libraries=ALL, library_path=/product/priv-app/PrebuiltGmsCore/lib/x86_64:/product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk!/lib/x86_64, permitted_path=/data:/mnt/expand:/data/user/0/com.google.android.gms\n"},"event":"output"}
[12:58:51 PM] [DAP] [Info] <== {"seq":102,"type":"event","body":{"category":"stdout","output":"D/nativeloader(12296): Configuring classloader-namespace for other apk /system/framework/com.android.media.remotedisplay.jar. target_sdk_version=33, uses_libraries=ALL, library_path=/product/priv-app/PrebuiltGmsCore/lib/x86_64:/product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk!/lib/x86_64, permitted_path=/data:/mnt/expand:/data/user/0/com.google.android.gms\n"},"event":"output"}
[12:58:51 PM] [DAP] [Info] <== {"seq":103,"type":"event","body":{"category":"stdout","output":"D/nativeloader(12296): Configuring classloader-namespace for other apk /system/framework/com.android.location.provider.jar. target_sdk_version=33, uses_libraries=ALL, library_path=/product/priv-app/PrebuiltGmsCore/lib/x86_64:/product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk!/lib/x86_64, permitted_path=/data:/mnt/expand:/data/user/0/com.google.android.gms\n"},"event":"output"}
[12:58:51 PM] [DAP] [Info] <== {"seq":104,"type":"event","body":{"category":"stdout","output":"D/nativeloader(12296): Configuring vendor-classloader-namespace for unbundled product apk /product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk. target_sdk_version=33, uses_libraries=, library_path=/product/priv-app/PrebuiltGmsCore/lib/x86_64:/product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk!/lib/x86_64:/product/lib64:/system/product/lib64, permitted_path=/data:/mnt/expand:/data/user/0/com.google.android.gms:/product/lib64:/system/product/lib64\n"},"event":"output"}
[12:58:51 PM] [DAP] [Info] <== {"seq":105,"type":"event","body":{"category":"stdout","output":"V/NativeCrypto(12296): Registering com/google/android/gms/org/conscrypt/NativeCrypto's 295 native methods...\n"},"event":"output"}
[12:58:51 PM] [DAP] [Info] <== {"seq":106,"type":"event","body":{"category":"stdout","output":"W/.example.tintuc(12296): Accessing hidden method Ljava/security/spec/ECParameterSpec;->getCurveName()Ljava/lang/String; (unsupported, reflection, allowed)\n"},"event":"output"}
[12:58:51 PM] [DAP] [Info] <== {"seq":107,"type":"event","body":{"category":"stdout","output":"I/ProviderInstaller(12296): Installed default security provider GmsCore_OpenSSL\n"},"event":"output"}
[12:58:51 PM] [DAP] [Info] <== {"seq":108,"type":"event","body":{"category":"stdout","output":"D/ProfileInstaller(12296): Installing profile for com.example.tintuc\n"},"event":"output"}
[12:58:51 PM] [DAP] [Info] <== {"seq":109,"type":"event","body":{"reason":"exception","text":"SocketException (SocketException: Failed host lookup: '6579676ff08799dc8046d2e5.mockapi.io' (OS Error: No address associated with hostname, errno = 7))","threadId":1},"event":"stopped"}
[12:58:51 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":10}
[12:58:51 PM] [DAP] [Info] <== {"seq":110,"type":"response","body":{"threads":[{"id":1,"name":"main"}]},"command":"threads","request_seq":10,"success":true}
[12:58:51 PM] [DAP] [Info] ==> {"command":"stackTrace","arguments":{"threadId":1,"startFrame":0,"levels":1},"type":"request","seq":11}
[12:58:51 PM] [DAP] [Info] <== {"seq":111,"type":"response","body":{"stackFrames":[{"canRestart":false,"column":9,"id":2,"line":520,"name":"_NativeSocket.lookup.<anonymous closure>","source":{"adapterData":{"type":"@Script","id":"libraries/@13069316/scripts/dart%3Aio-patch%2Fsocket_patch.dart/0","fixedId":true,"uri":"dart:io-patch/socket_patch.dart"},"name":"dart:io-patch/socket_patch.dart","origin":"from the SDK","path":"C:\\src\\flutter\\bin\\cache\\pkg\\sky_engine\\lib\\_internal\\vm\\bin\\socket_patch.dart","presentationHint":"deemphasize","sourceReference":3}}],"totalFrames":21},"command":"stackTrace","request_seq":11,"success":true}
[12:58:51 PM] [DAP] [Info] <== {"seq":112,"type":"event","body":{"category":"stdout","output":"W/Parcel  (12296): Expecting binder but got null!\n"},"event":"output"}
[12:58:51 PM] [DAP] [Info] <== {"seq":113,"type":"event","body":{"category":"stdout","output":"D/TrafficStats(12296): tagSocket(152) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:58:51 PM] [DAP] [Info] <== {"seq":114,"type":"event","body":{"category":"stdout","output":"W/.example.tintuc(12296): Accessing hidden field Ljava/net/Socket;->impl:Ljava/net/SocketImpl; (unsupported, reflection, allowed)\n"},"event":"output"}
[12:58:52 PM] [DAP] [Info] <== {"seq":115,"type":"event","body":{"category":"stdout","output":"W/.example.tintuc(12296): Accessing hidden method Ljava/security/spec/ECParameterSpec;->setCurveName(Ljava/lang/String;)V (unsupported, reflection, allowed)\n"},"event":"output"}
[12:58:52 PM] [DAP] [Info] ==> {"command":"stackTrace","arguments":{"threadId":1,"startFrame":1,"levels":19},"type":"request","seq":12}
[12:58:52 PM] [DAP] [Info] <== {"seq":116,"type":"response","body":{"stackFrames":[{"column":0,"id":4,"line":0,"name":"<asynchronous gap>","presentationHint":"label"},{"canRestart":false,"column":29,"id":5,"line":633,"name":"_NativeSocket.staggeredLookup.<anonymous closure>.lookupAddresses","source":{"adapterData":{"type":"@Script","id":"libraries/@13069316/scripts/dart%3Aio-patch%2Fsocket_patch.dart/0","fixedId":true,"uri":"dart:io-patch/socket_patch.dart"},"name":"dart:io-patch/socket_patch.dart","origin":"from the SDK","path":"C:\\src\\flutter\\bin\\cache\\pkg\\sky_engine\\lib\\_internal\\vm\\bin\\socket_patch.dart","presentationHint":"deemphasize","sourceReference":7}},{"column":0,"id":6,"line":0,"name":"<asynchronous gap>","presentationHint":"label"}],"totalFrames":4},"command":"stackTrace","request_seq":12,"success":true}
[12:58:52 PM] [DAP] [Info] <== {"seq":117,"type":"event","body":{"category":"stdout","output":"D/TrafficStats(12296): tagSocket(131) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":118,"type":"event","body":{"category":"stdout","output":"I/DMCodecAdapterFactory(12296): Creating an asynchronous MediaCodec adapter for track type video\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":119,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296): allocate(c2.goldfish.h264.decoder)\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":120,"type":"event","body":{"category":"stdout","output":"I/Codec2Client(12296): Available Codec2 services: \"default\" \"software\"\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":121,"type":"event","body":{"category":"stdout","output":"I/CCodec  (12296): setting up 'default' as default (vendor) store\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":122,"type":"event","body":{"category":"stdout","output":"I/CCodec  (12296): Created component [c2.goldfish.h264.decoder]\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":123,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296): read media type: video/avc\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":124,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12296): extent() != 1 for single value type: algo.buffers.max-count.values\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":125,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12296): extent() != 1 for single value type: output.subscribed-indices.values\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":126,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12296): extent() != 1 for single value type: input.buffers.allocator-ids.values\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":127,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12296): extent() != 1 for single value type: output.buffers.allocator-ids.values\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":128,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12296): extent() != 1 for single value type: algo.buffers.allocator-ids.values\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":129,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12296): extent() != 1 for single value type: output.buffers.pool-ids.values\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":130,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12296): extent() != 1 for single value type: algo.buffers.pool-ids.values\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":131,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12296): ignored struct field coded.color-format.locations\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":132,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296): ignoring local param raw.size (0xd2001800) as it is already supported\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":133,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296): ignoring local param default.color (0x5200180b) as it is already supported\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":134,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12296): ignored struct field raw.hdr-static-info.mastering\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":135,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig(12296): query failed after returning 12 values (BAD_INDEX)\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":136,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296): c2 config diff is Dict {\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":137,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 coded.pl.level = 20496\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":138,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 coded.pl.profile = 20481\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":139,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 coded.vui.color.matrix = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":140,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 coded.vui.color.primaries = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":141,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 coded.vui.color.range = 2\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":142,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 coded.vui.color.transfer = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":143,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 default.color.matrix = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":144,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 default.color.primaries = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":145,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 default.color.range = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":146,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 default.color.transfer = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":147,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 input.buffers.max-size.value = 6291456\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":148,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 input.delay.value = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":149,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   string input.media-type.value = \"video/avc\"\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":150,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 output.delay.value = 8\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":151,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   string output.media-type.value = \"video/raw\"\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":152,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.color.matrix = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":153,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.color.primaries = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":154,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.color.range = 2\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":155,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.color.transfer = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":156,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.max-size.height = 240\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":157,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.max-size.width = 320\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":158,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.pixel-format.value = 35\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":159,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::i32 raw.rotation.flip = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":160,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::i32 raw.rotation.value = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":161,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.sar.height = 1\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":162,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.sar.width = 1\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":163,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.size.height = 240\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":164,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.size.width = 320\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":165,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2:\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":166,"type":"event","body":{"category":"stdout","output":"W/ColorUtils(12296): expected specified color aspects (2:0:0:0)\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":167,"type":"event","body":{"category":"stdout","output":"I/MediaCodec(12296): MediaCodec will operate in async mode\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":168,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils(12296): connecting to surface 0x734a3ddda8d0, reason connectToSurface\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":169,"type":"event","body":{"category":"stdout","output":"I/MediaCodec(12296): [c2.goldfish.h264.decoder] setting surface generation to 12591105\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":170,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils(12296): disconnecting from surface 0x734a3ddda8d0, reason connectToSurface(reconnect)\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":171,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils(12296): connecting to surface 0x734a3ddda8d0, reason connectToSurface(reconnect)\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":172,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296): [c2.goldfish.h264.decoder] buffers are bound to CCodec for this session\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":173,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296): no c2 equivalents for csd-1\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":174,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296): no c2 equivalents for log-session-id\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":175,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296): no c2 equivalents for native-window\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":176,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296): no c2 equivalents for flags\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":177,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296): config failed => CORRUPTED\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":178,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296): c2 config diff is   c2::u32 raw.max-size.height = 720\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":179,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.max-size.width = 1280\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":180,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.size.height = 720\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":181,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.size.width = 1280\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":182,"type":"event","body":{"category":"stdout","output":"W/Codec2Client(12296): query -- param skipped: index = 1107298332.\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":183,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296): client requested max input size 219813, which is smaller than what component recommended (6291456); overriding with component recommendation.\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":184,"type":"event","body":{"category":"stdout","output":"W/CCodec  (12296): This behavior is subject to change. It is recommended that app developers double check whether the requested max input size is in reasonable range.\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":185,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296): encoding statistics level = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":186,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296): setup formats input: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":187,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t height = 720\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":188,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t level = 65536\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":189,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t max-input-size = 6291456\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":190,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   string mime = \"video/avc\"\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":191,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t profile = 65536\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":192,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t width = 1280\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":193,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   Rect crop(0, 0, 1279, 719)\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":194,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296): }\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":195,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296): setup formats output: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":196,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t android._color-format = 2135033992\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":197,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t android._video-scaling = 1\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":198,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t rotation-degrees = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":199,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t color-standard = 1\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":200,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t color-range = 2\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":201,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t color-transfer = 3\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":202,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t sar-height = 1\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":203,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t sar-width = 1\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":204,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   Rect crop(0, 0, 1279, 719)\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":205,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t width = 1280\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":206,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t height = 720\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":207,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t max-height = 720\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":208,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t max-width = 1280\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":209,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   string mime = \"video/raw\"\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":210,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t android._dataspace = 260\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":211,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t color-format = 2130708361\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":212,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296): }\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":213,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig(12296): query failed after returning 12 values (BAD_INDEX)\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":214,"type":"event","body":{"category":"stdout","output":"D/MediaCodec(12296): keep callback message for reclaim\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":215,"type":"event","body":{"category":"stdout","output":"W/Codec2Client(12296): query -- param skipped: index = 1342179345.\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":216,"type":"event","body":{"category":"stdout","output":"W/Codec2Client(12296): query -- param skipped: index = 2415921170.\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":217,"type":"event","body":{"category":"stdout","output":"W/Codec2Client(12296): query -- param skipped: index = 1610614798.\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":218,"type":"event","body":{"category":"stdout","output":"W/Codec2Client(12296): query -- param skipped: index = 2684356609.\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":219,"type":"event","body":{"category":"stdout","output":"D/C2Store (12296): Using DMABUF Heaps\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":220,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel(12296): [c2.goldfish.h264.decoder#918] Created input block pool with allocatorID 16 => poolID 17 - OK (0)\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":221,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel(12296): [c2.goldfish.h264.decoder#918] Query output surface allocator returned 0 params => BAD_INDEX (6)\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":222,"type":"event","body":{"category":"stdout","output":"I/CCodecBufferChannel(12296): [c2.goldfish.h264.decoder#918] Created output block pool with allocatorID 18 => poolID 24 - OK\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":223,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel(12296): [c2.goldfish.h264.decoder#918] Configured output block pool ids 24 => OK\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":224,"type":"event","body":{"category":"stdout","output":"D/Codec2-OutputBufferQueue(12296): remote graphic buffer migration 0/0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":225,"type":"event","body":{"category":"stdout","output":"D/Codec2Client(12296): setOutputSurface -- failed to set consumer usage (6/BAD_INDEX)\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":226,"type":"event","body":{"category":"stdout","output":"D/Codec2Client(12296): setOutputSurface -- generation=12591105 consumer usage=0x900\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":227,"type":"event","body":{"category":"stdout","output":"D/Codec2Client(12296): Surface configure completed\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":228,"type":"event","body":{"category":"stdout","output":"I/DMABUFHEAPS(12296): Using DMA-BUF heap named: system\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":229,"type":"event","body":{"category":"stdout","output":"I/DMCodecAdapterFactory(12296): Creating an asynchronous MediaCodec adapter for track type audio\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":230,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296): allocate(c2.android.aac.decoder)\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":231,"type":"event","body":{"category":"stdout","output":"I/CCodec  (12296): setting up 'default' as default (vendor) store\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":232,"type":"event","body":{"category":"stdout","output":"I/CCodec  (12296): Created component [c2.android.aac.decoder]\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":233,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296): read media type: audio/mp4a-latm\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":234,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12296): extent() != 1 for single value type: algo.buffers.max-count.values\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":235,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12296): extent() != 1 for single value type: output.subscribed-indices.values\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":236,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12296): extent() != 1 for single value type: input.buffers.allocator-ids.values\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":237,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12296): extent() != 1 for single value type: output.buffers.allocator-ids.values\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":238,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12296): extent() != 1 for single value type: algo.buffers.allocator-ids.values\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":239,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12296): extent() != 1 for single value type: output.buffers.pool-ids.values\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":240,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater(12296): extent() != 1 for single value type: algo.buffers.pool-ids.values\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":241,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig(12296): query failed after returning 20 values (BAD_INDEX)\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":242,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296): c2 config diff is Dict {\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":243,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 coded.aac-packaging.value = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":244,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 coded.bitrate.value = 64000\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":245,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 coded.pl.level = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":246,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 coded.pl.profile = 8192\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":247,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::i32 coding.drc.album-mode.value = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":248,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::float coding.drc.attenuation-factor.value = 1\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":249,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::float coding.drc.boost-factor.value = 1\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":250,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::i32 coding.drc.compression-mode.value = 3\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":251,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::i32 coding.drc.effect-type.value = 3\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":252,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::float coding.drc.encoded-level.value = 0.25\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":253,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::float coding.drc.reference-level.value = -16\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":254,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 input.buffers.max-size.value = 8192\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":255,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 input.delay.value = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":256,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   string input.media-type.value = \"audio/mp4a-latm\"\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":257,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 output.delay.value = 2\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":258,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::float output.drc.output-loudness.value = 0.25\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":259,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   string output.media-type.value = \"audio/raw\"\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":260,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.channel-count.value = 1\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":261,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.channel-mask.value = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":262,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.max-channel-count.value = 8\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":263,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.sample-rate.value = 44100\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":264,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296): }\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":265,"type":"event","body":{"category":"stdout","output":"I/MediaCodec(12296): MediaCodec will operate in async mode\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":266,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296): [c2.android.aac.decoder] buffers are bound to CCodec for this session\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":267,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296): no c2 equivalents for log-session-id\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":268,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296): no c2 equivalents for flags\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":269,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296): config failed => CORRUPTED\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":270,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296): c2 config diff is   c2::u32 raw.channel-count.value = 2\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":271,"type":"event","body":{"category":"stdout","output":"W/Codec2Client(12296): query -- param skipped: index = 1107298332.\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":272,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296): client requested max input size 623, which is smaller than what component recommended (8192); overriding with component recommendation.\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":273,"type":"event","body":{"category":"stdout","output":"W/CCodec  (12296): This behavior is subject to change. It is recommended that app developers double check whether the requested max input size is in reasonable range.\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":274,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296): encoding statistics level = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":275,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296): setup formats input: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":276,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t aac-drc-album-mode = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":277,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t aac-drc-boost-level = 127\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":278,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t aac-drc-cut-level = 127\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":279,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t aac-drc-effect-type = 3\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":280,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t aac-encoded-target-level = -1\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":281,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t aac-max-output-channel_count = 8\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":282,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t aac-target-ref-level = 64\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":283,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t bitrate = 64000\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":284,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t channel-count = 2\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":285,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t channel-mask = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":286,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t level = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":287,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t max-input-size = 8192\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":288,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t max-output-channel-count = 8\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":289,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   string mime = \"audio/mp4a-latm\"\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":290,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t profile = 2\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":291,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t sample-rate = 44100\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":292,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296): }\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":293,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296): setup formats output: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":294,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t aac-drc-album-mode = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":295,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t aac-drc-boost-level = 127\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":296,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t aac-drc-cut-level = 127\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":297,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t aac-drc-effect-type = 3\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":298,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t aac-drc-output-loudness = -1\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":299,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t aac-encoded-target-level = -1\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":300,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t aac-max-output-channel_count = 8\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":301,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t aac-target-ref-level = 64\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":302,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t channel-count = 2\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":303,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t channel-mask = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":304,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t max-output-channel-count = 8\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":305,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   string mime = \"audio/raw\"\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":306,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t sample-rate = 44100\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":307,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296):   int32_t android._config-pcm-encoding = 2\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":308,"type":"event","body":{"category":"stdout","output":"D/CCodec  (12296): }\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":309,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig(12296): query failed after returning 20 values (BAD_INDEX)\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":310,"type":"event","body":{"category":"stdout","output":"D/MediaCodec(12296): keep callback message for reclaim\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":311,"type":"event","body":{"category":"stdout","output":"W/Codec2Client(12296): query -- param skipped: index = 1342179345.\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":312,"type":"event","body":{"category":"stdout","output":"W/Codec2Client(12296): query -- param skipped: index = 2415921170.\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":313,"type":"event","body":{"category":"stdout","output":"W/Codec2Client(12296): query -- param skipped: index = 1610614798.\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":314,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel(12296): [c2.android.aac.decoder#683] Created input block pool with allocatorID 16 => poolID 18 - OK (0)\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":315,"type":"event","body":{"category":"stdout","output":"I/CCodecBufferChannel(12296): [c2.android.aac.decoder#683] Created output block pool with allocatorID 16 => poolID 33 - OK\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":316,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel(12296): [c2.android.aac.decoder#683] Configured output block pool ids 33 => OK\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":317,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296): c2 config diff is   c2::u32 raw.channel-mask.value = 12\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":318,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12296): [c2.android.aac.decoder#683:Output[N]] popFromStashAndRegister: at 1000000000000us, output format changed to AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":319,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12296):   int32_t aac-drc-album-mode = 0\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":320,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12296):   int32_t aac-drc-boost-level = 127\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":321,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12296):   int32_t aac-drc-cut-level = 127\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":322,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12296):   int32_t aac-drc-effect-type = 3\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":323,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12296):   int32_t aac-drc-output-loudness = -1\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":324,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12296):   int32_t aac-encoded-target-level = -1\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":325,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12296):   int32_t aac-max-output-channel_count = 8\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":326,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12296):   int32_t aac-target-ref-level = 64\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":327,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12296):   int32_t channel-count = 2\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":328,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12296):   int32_t channel-mask = 12\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":329,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12296):   int32_t max-output-channel-count = 8\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":330,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12296):   string mime = \"audio/raw\"\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":331,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12296):   int32_t sample-rate = 44100\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":332,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12296):   int32_t android._config-pcm-encoding = 2\n"},"event":"output"}
[12:58:53 PM] [DAP] [Info] <== {"seq":333,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers(12296): }\n"},"event":"output"}
[12:58:54 PM] [DAP] [Info] <== {"seq":334,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296): c2 config diff is   c2::u32 raw.color.matrix = 1\n"},"event":"output"}
[12:58:54 PM] [DAP] [Info] <== {"seq":335,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.color.primaries = 1\n"},"event":"output"}
[12:58:54 PM] [DAP] [Info] <== {"seq":336,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.color.transfer = 3\n"},"event":"output"}
[12:58:54 PM] [DAP] [Info] <== {"seq":337,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.crop.height = 720\n"},"event":"output"}
[12:58:54 PM] [DAP] [Info] <== {"seq":338,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.crop.left = 0\n"},"event":"output"}
[12:58:54 PM] [DAP] [Info] <== {"seq":339,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.crop.top = 0\n"},"event":"output"}
[12:58:54 PM] [DAP] [Info] <== {"seq":340,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig(12296):   c2::u32 raw.crop.width = 1280\n"},"event":"output"}
[12:58:59 PM] [DAP] [Info] <== {"seq":341,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0(12296): bufferpool2 0x73499dde2448 : 5(40960 size) total buffers - 0(0 size) used buffers - 22/27 (recycle/alloc) - 5/27 (fetch/transfer)\n"},"event":"output"}
[12:58:59 PM] [DAP] [Info] <== {"seq":342,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0(12296): evictor expired: 1, evicted: 1\n"},"event":"output"}
[12:59:00 PM] [DAP] [Info] <== {"seq":343,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0(12296): bufferpool2 0x73499dde28e8 : 5(31457280 size) total buffers - 0(0 size) used buffers - 14/19 (recycle/alloc) - 5/19 (fetch/transfer)\n"},"event":"output"}
[12:59:00 PM] [DAP] [Info] <== {"seq":344,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0(12296): evictor expired: 1, evicted: 1\n"},"event":"output"}
[12:59:09 PM] [DAP] [Info] ==> {"command":"source","arguments":{"sourceReference":3,"source":{"adapterData":{"type":"@Script","id":"libraries/@13069316/scripts/dart%3Aio-patch%2Fsocket_patch.dart/0","fixedId":true,"uri":"dart:io-patch/socket_patch.dart"},"name":"dart:io-patch/socket_patch.dart","origin":"from the SDK","path":"C:\\src\\flutter\\bin\\cache\\pkg\\sky_engine\\lib\\_internal\\vm\\bin\\socket_patch.dart","presentationHint":"deemphasize","sourceReference":3}},"type":"request","seq":13}
[12:59:09 PM] [DAP] [Info] <== {"seq":345,"type":"response","body":{"content":"// Copyright (c) 2013, the Dart project authors.  Please see the AUTHORS file\n// for details. All rights reserved. Use of this source code is governed by a\n// BSD-style license that can be found in the LICENSE file.\n\npart of \"common_patch.dart\";\n\n@patch\nclass RawServerSocket {\n  @patch\n  static Future<RawServerSocket> bind(address, int port,\n      {int backlog = 0, bool v6Only = false, bool shared = false}) {\n    return _RawServerSocket.bind(address, port, backlog, v6Only, shared);\n  }\n}\n\n@patch\nclass RawSocket {\n  @patch\n  static Future<RawSocket> connect(dynamic host, int port,\n      {dynamic sourceAddress, int sourcePort = 0, Duration? timeout}) {\n    return _RawSocket.connect(host, port, sourceAddress, sourcePort, timeout);\n  }\n\n  @patch\n  static Future<ConnectionTask<RawSocket>> startConnect(dynamic host, int port,\n      {dynamic sourceAddress, int sourcePort = 0}) {\n    return _RawSocket.startConnect(host, port, sourceAddress, sourcePort);\n  }\n}\n\n@patch\nclass RawSocketOption {\n  static final List<int?> _optionsCache =\n      List<int?>.filled(_RawSocketOptions.values.length, null);\n\n  @patch\n  static int _getOptionValue(int key) {\n    if (key > _RawSocketOptions.values.length) {\n      throw ArgumentError.value(key, 'key');\n    }\n    return _optionsCache[key] ??= _getNativeOptionValue(key);\n  }\n\n  @pragma(\"vm:external-name\", \"RawSocketOption_GetOptionValue\")\n  external static int _getNativeOptionValue(int key);\n}\n\n@patch\nclass InternetAddress {\n  @patch\n  static InternetAddress get loopbackIPv4 {\n    return _InternetAddress.loopbackIPv4;\n  }\n\n  @patch\n  static InternetAddress get loopbackIPv6 {\n    return _InternetAddress.loopbackIPv6;\n  }\n\n  @patch\n  static InternetAddress get anyIPv4 {\n    return _InternetAddress.anyIPv4;\n  }\n\n  @patch\n  static InternetAddress get anyIPv6 {\n    return _InternetAddress.anyIPv6;\n  }\n\n  @patch\n  factory …
[12:59:09 PM] [DAP] [Info] ==> {"command":"scopes","arguments":{"frameId":2},"type":"request","seq":14}
[12:59:09 PM] [DAP] [Info] <== {"seq":346,"type":"response","body":{"scopes":[{"expensive":false,"name":"Locals","presentationHint":"locals","variablesReference":8},{"expensive":false,"name":"Globals","presentationHint":"globals","variablesReference":9},{"expensive":false,"name":"Exceptions","variablesReference":1}]},"command":"scopes","request_seq":14,"success":true}
[12:59:09 PM] [DAP] [Info] ==> {"command":"variables","arguments":{"variablesReference":8},"type":"request","seq":15}
[12:59:09 PM] [DAP] [Info] <== {"seq":347,"type":"response","body":{"variables":[{"evaluateName":"host","name":"host","value":"\"6579676ff08799dc8046d2e5.mockapi.io\"","variablesReference":0},{"evaluateName":"response","indexedVariables":3,"name":"response","value":"List (3 items)","variablesReference":10}]},"command":"variables","request_seq":15,"success":true}
[12:59:11 PM] [DAP] [Info] ==> {"command":"scopes","arguments":{"frameId":4},"type":"request","seq":16}
[12:59:11 PM] [DAP] [Info] <== {"seq":348,"type":"response","body":{"scopes":[{"expensive":false,"name":"Locals","presentationHint":"locals","variablesReference":11},{"expensive":false,"name":"Globals","presentationHint":"globals","variablesReference":12},{"expensive":false,"name":"Exceptions","variablesReference":1}]},"command":"scopes","request_seq":16,"success":true}
[12:59:11 PM] [DAP] [Info] ==> {"command":"variables","arguments":{"variablesReference":11},"type":"request","seq":17}
[12:59:11 PM] [DAP] [Info] <== {"seq":349,"type":"response","body":{"variables":[]},"command":"variables","request_seq":17,"success":true}
[12:59:12 PM] [DAP] [Info] ==> {"command":"source","arguments":{"sourceReference":7,"source":{"adapterData":{"type":"@Script","id":"libraries/@13069316/scripts/dart%3Aio-patch%2Fsocket_patch.dart/0","fixedId":true,"uri":"dart:io-patch/socket_patch.dart"},"name":"dart:io-patch/socket_patch.dart","origin":"from the SDK","path":"C:\\src\\flutter\\bin\\cache\\pkg\\sky_engine\\lib\\_internal\\vm\\bin\\socket_patch.dart","presentationHint":"deemphasize","sourceReference":7}},"type":"request","seq":18}
[12:59:12 PM] [DAP] [Info] <== {"seq":350,"type":"response","body":{"content":"// Copyright (c) 2013, the Dart project authors.  Please see the AUTHORS file\n// for details. All rights reserved. Use of this source code is governed by a\n// BSD-style license that can be found in the LICENSE file.\n\npart of \"common_patch.dart\";\n\n@patch\nclass RawServerSocket {\n  @patch\n  static Future<RawServerSocket> bind(address, int port,\n      {int backlog = 0, bool v6Only = false, bool shared = false}) {\n    return _RawServerSocket.bind(address, port, backlog, v6Only, shared);\n  }\n}\n\n@patch\nclass RawSocket {\n  @patch\n  static Future<RawSocket> connect(dynamic host, int port,\n      {dynamic sourceAddress, int sourcePort = 0, Duration? timeout}) {\n    return _RawSocket.connect(host, port, sourceAddress, sourcePort, timeout);\n  }\n\n  @patch\n  static Future<ConnectionTask<RawSocket>> startConnect(dynamic host, int port,\n      {dynamic sourceAddress, int sourcePort = 0}) {\n    return _RawSocket.startConnect(host, port, sourceAddress, sourcePort);\n  }\n}\n\n@patch\nclass RawSocketOption {\n  static final List<int?> _optionsCache =\n      List<int?>.filled(_RawSocketOptions.values.length, null);\n\n  @patch\n  static int _getOptionValue(int key) {\n    if (key > _RawSocketOptions.values.length) {\n      throw ArgumentError.value(key, 'key');\n    }\n    return _optionsCache[key] ??= _getNativeOptionValue(key);\n  }\n\n  @pragma(\"vm:external-name\", \"RawSocketOption_GetOptionValue\")\n  external static int _getNativeOptionValue(int key);\n}\n\n@patch\nclass InternetAddress {\n  @patch\n  static InternetAddress get loopbackIPv4 {\n    return _InternetAddress.loopbackIPv4;\n  }\n\n  @patch\n  static InternetAddress get loopbackIPv6 {\n    return _InternetAddress.loopbackIPv6;\n  }\n\n  @patch\n  static InternetAddress get anyIPv4 {\n    return _InternetAddress.anyIPv4;\n  }\n\n  @patch\n  static InternetAddress get anyIPv6 {\n    return _InternetAddress.anyIPv6;\n  }\n\n  @patch\n  factory …
[12:59:12 PM] [DAP] [Info] ==> {"command":"scopes","arguments":{"frameId":5},"type":"request","seq":19}
[12:59:12 PM] [DAP] [Info] <== {"seq":351,"type":"response","body":{"scopes":[{"expensive":false,"name":"Locals","presentationHint":"locals","variablesReference":13},{"expensive":false,"name":"Globals","presentationHint":"globals","variablesReference":14},{"expensive":false,"name":"Exceptions","variablesReference":1}]},"command":"scopes","request_seq":19,"success":true}
[12:59:12 PM] [DAP] [Info] ==> {"command":"variables","arguments":{"variablesReference":13},"type":"request","seq":20}
[12:59:12 PM] [DAP] [Info] <== {"seq":352,"type":"response","body":{"variables":[]},"command":"variables","request_seq":20,"success":true}
[12:59:13 PM] [DAP] [Info] ==> {"command":"scopes","arguments":{"frameId":6},"type":"request","seq":21}
[12:59:13 PM] [DAP] [Info] <== {"seq":353,"type":"response","body":{"scopes":[{"expensive":false,"name":"Locals","presentationHint":"locals","variablesReference":15},{"expensive":false,"name":"Globals","presentationHint":"globals","variablesReference":16},{"expensive":false,"name":"Exceptions","variablesReference":1}]},"command":"scopes","request_seq":21,"success":true}
[12:59:13 PM] [DAP] [Info] ==> {"command":"variables","arguments":{"variablesReference":15},"type":"request","seq":22}
[12:59:13 PM] [DAP] [Info] <== {"seq":354,"type":"response","body":{"variables":[]},"command":"variables","request_seq":22,"success":true}
[12:59:30 PM] [DAP] [Info] ==> {"command":"continue","arguments":{"threadId":1},"type":"request","seq":23}
[12:59:30 PM] [DAP] [Info] <== {"seq":355,"type":"response","body":{"allThreadsContinued":false},"command":"continue","request_seq":23,"success":true}
[12:59:30 PM] [DAP] [Info] <== {"seq":356,"type":"event","body":{"reason":"exception","text":"SocketException (SocketException: Failed host lookup: '6579676ff08799dc8046d2e5.mockapi.io' (OS Error: No address associated with hostname, errno = 7))","threadId":1},"event":"stopped"}
[12:59:30 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":24}
[12:59:30 PM] [DAP] [Info] <== {"seq":357,"type":"response","body":{"threads":[{"id":1,"name":"main"}]},"command":"threads","request_seq":24,"success":true}
[12:59:30 PM] [DAP] [Info] ==> {"command":"stackTrace","arguments":{"threadId":1,"startFrame":0,"levels":1},"type":"request","seq":25}
[12:59:30 PM] [DAP] [Info] <== {"seq":358,"type":"response","body":{"stackFrames":[{"canRestart":false,"column":29,"id":18,"line":633,"name":"_NativeSocket.staggeredLookup.<anonymous closure>.lookupAddresses","source":{"adapterData":{"type":"@Script","id":"libraries/@13069316/scripts/dart%3Aio-patch%2Fsocket_patch.dart/0","fixedId":true,"uri":"dart:io-patch/socket_patch.dart"},"name":"dart:io-patch/socket_patch.dart","origin":"from the SDK","path":"C:\\src\\flutter\\bin\\cache\\pkg\\sky_engine\\lib\\_internal\\vm\\bin\\socket_patch.dart","presentationHint":"deemphasize","sourceReference":19}}],"totalFrames":21},"command":"stackTrace","request_seq":25,"success":true}
[12:59:30 PM] [DAP] [Info] ==> {"command":"stackTrace","arguments":{"threadId":1,"startFrame":1,"levels":19},"type":"request","seq":26}
[12:59:30 PM] [DAP] [Info] <== {"seq":359,"type":"response","body":{"stackFrames":[{"column":0,"id":20,"line":0,"name":"<asynchronous gap>","presentationHint":"label"}],"totalFrames":2},"command":"stackTrace","request_seq":26,"success":true}
[12:59:35 PM] [DAP] [Info] ==> {"command":"continue","arguments":{"threadId":1},"type":"request","seq":27}
[12:59:35 PM] [DAP] [Info] <== {"seq":360,"type":"response","body":{"allThreadsContinued":false},"command":"continue","request_seq":27,"success":true}
[12:59:35 PM] [DAP] [Info] <== {"seq":361,"type":"event","body":{"reason":"exception","text":"SocketException (SocketException: Failed host lookup: '6579676ff08799dc8046d2e5.mockapi.io' (OS Error: No address associated with hostname, errno = 7))","threadId":1},"event":"stopped"}
[12:59:35 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":28}
[12:59:35 PM] [DAP] [Info] <== {"seq":362,"type":"response","body":{"threads":[{"id":1,"name":"main"}]},"command":"threads","request_seq":28,"success":true}
[12:59:35 PM] [DAP] [Info] ==> {"command":"stackTrace","arguments":{"threadId":1,"startFrame":0,"levels":1},"type":"request","seq":29}
[12:59:35 PM] [DAP] [Info] <== {"seq":363,"type":"response","body":{"stackFrames":[{"canRestart":false,"column":9,"id":22,"line":520,"name":"_NativeSocket.lookup.<anonymous closure>","source":{"adapterData":{"type":"@Script","id":"libraries/@13069316/scripts/dart%3Aio-patch%2Fsocket_patch.dart/0","fixedId":true,"uri":"dart:io-patch/socket_patch.dart"},"name":"dart:io-patch/socket_patch.dart","origin":"from the SDK","path":"C:\\src\\flutter\\bin\\cache\\pkg\\sky_engine\\lib\\_internal\\vm\\bin\\socket_patch.dart","presentationHint":"deemphasize","sourceReference":23}}],"totalFrames":21},"command":"stackTrace","request_seq":29,"success":true}
[12:59:35 PM] [DAP] [Info] ==> {"command":"stackTrace","arguments":{"threadId":1,"startFrame":1,"levels":19},"type":"request","seq":30}
[12:59:35 PM] [DAP] [Info] <== {"seq":364,"type":"response","body":{"stackFrames":[{"column":0,"id":24,"line":0,"name":"<asynchronous gap>","presentationHint":"label"},{"canRestart":false,"column":29,"id":25,"line":633,"name":"_NativeSocket.staggeredLookup.<anonymous closure>.lookupAddresses","source":{"adapterData":{"type":"@Script","id":"libraries/@13069316/scripts/dart%3Aio-patch%2Fsocket_patch.dart/0","fixedId":true,"uri":"dart:io-patch/socket_patch.dart"},"name":"dart:io-patch/socket_patch.dart","origin":"from the SDK","path":"C:\\src\\flutter\\bin\\cache\\pkg\\sky_engine\\lib\\_internal\\vm\\bin\\socket_patch.dart","presentationHint":"deemphasize","sourceReference":27}},{"column":0,"id":26,"line":0,"name":"<asynchronous gap>","presentationHint":"label"}],"totalFrames":4},"command":"stackTrace","request_seq":30,"success":true}
[12:59:36 PM] [DAP] [Info] ==> {"command":"continue","arguments":{"threadId":1},"type":"request","seq":31}
[12:59:36 PM] [DAP] [Info] <== {"seq":365,"type":"response","body":{"allThreadsContinued":false},"command":"continue","request_seq":31,"success":true}
[12:59:36 PM] [DAP] [Info] <== {"seq":366,"type":"event","body":{"reason":"exception","text":"SocketException (SocketException: Failed host lookup: '6579676ff08799dc8046d2e5.mockapi.io' (OS Error: No address associated with hostname, errno = 7))","threadId":1},"event":"stopped"}
[12:59:36 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":32}
[12:59:36 PM] [DAP] [Info] <== {"seq":367,"type":"response","body":{"threads":[{"id":1,"name":"main"}]},"command":"threads","request_seq":32,"success":true}
[12:59:36 PM] [DAP] [Info] ==> {"command":"stackTrace","arguments":{"threadId":1,"startFrame":0,"levels":1},"type":"request","seq":33}
[12:59:36 PM] [DAP] [Info] <== {"seq":368,"type":"response","body":{"stackFrames":[{"canRestart":false,"column":29,"id":29,"line":633,"name":"_NativeSocket.staggeredLookup.<anonymous closure>.lookupAddresses","source":{"adapterData":{"type":"@Script","id":"libraries/@13069316/scripts/dart%3Aio-patch%2Fsocket_patch.dart/0","fixedId":true,"uri":"dart:io-patch/socket_patch.dart"},"name":"dart:io-patch/socket_patch.dart","origin":"from the SDK","path":"C:\\src\\flutter\\bin\\cache\\pkg\\sky_engine\\lib\\_internal\\vm\\bin\\socket_patch.dart","presentationHint":"deemphasize","sourceReference":30}}],"totalFrames":21},"command":"stackTrace","request_seq":33,"success":true}
[12:59:37 PM] [DAP] [Info] ==> {"command":"stackTrace","arguments":{"threadId":1,"startFrame":1,"levels":19},"type":"request","seq":34}
[12:59:37 PM] [DAP] [Info] <== {"seq":369,"type":"response","body":{"stackFrames":[{"column":0,"id":31,"line":0,"name":"<asynchronous gap>","presentationHint":"label"}],"totalFrames":2},"command":"stackTrace","request_seq":34,"success":true}
[12:59:37 PM] [DAP] [Info] ==> {"command":"continue","arguments":{"threadId":1},"type":"request","seq":35}
[12:59:37 PM] [DAP] [Info] <== {"seq":370,"type":"response","body":{"allThreadsContinued":false},"command":"continue","request_seq":35,"success":true}
[12:59:37 PM] [DAP] [Info] <== {"seq":371,"type":"event","body":{"reason":"exception","text":"SocketException (SocketException: Failed host lookup: '6579676ff08799dc8046d2e5.mockapi.io' (OS Error: No address associated with hostname, errno = 7))","threadId":1},"event":"stopped"}
[12:59:37 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":36}
[12:59:37 PM] [DAP] [Info] <== {"seq":372,"type":"response","body":{"threads":[{"id":1,"name":"main"}]},"command":"threads","request_seq":36,"success":true}
[12:59:37 PM] [DAP] [Info] ==> {"command":"stackTrace","arguments":{"threadId":1,"startFrame":0,"levels":1},"type":"request","seq":37}
[12:59:37 PM] [DAP] [Info] <== {"seq":373,"type":"response","body":{"stackFrames":[{"canRestart":false,"column":9,"id":33,"line":520,"name":"_NativeSocket.lookup.<anonymous closure>","source":{"adapterData":{"type":"@Script","id":"libraries/@13069316/scripts/dart%3Aio-patch%2Fsocket_patch.dart/0","fixedId":true,"uri":"dart:io-patch/socket_patch.dart"},"name":"dart:io-patch/socket_patch.dart","origin":"from the SDK","path":"C:\\src\\flutter\\bin\\cache\\pkg\\sky_engine\\lib\\_internal\\vm\\bin\\socket_patch.dart","presentationHint":"deemphasize","sourceReference":34}}],"totalFrames":21},"command":"stackTrace","request_seq":37,"success":true}
[12:59:38 PM] [DAP] [Info] ==> {"command":"stackTrace","arguments":{"threadId":1,"startFrame":1,"levels":19},"type":"request","seq":38}
[12:59:38 PM] [DAP] [Info] <== {"seq":374,"type":"response","body":{"stackFrames":[{"column":0,"id":35,"line":0,"name":"<asynchronous gap>","presentationHint":"label"},{"canRestart":false,"column":29,"id":36,"line":633,"name":"_NativeSocket.staggeredLookup.<anonymous closure>.lookupAddresses","source":{"adapterData":{"type":"@Script","id":"libraries/@13069316/scripts/dart%3Aio-patch%2Fsocket_patch.dart/0","fixedId":true,"uri":"dart:io-patch/socket_patch.dart"},"name":"dart:io-patch/socket_patch.dart","origin":"from the SDK","path":"C:\\src\\flutter\\bin\\cache\\pkg\\sky_engine\\lib\\_internal\\vm\\bin\\socket_patch.dart","presentationHint":"deemphasize","sourceReference":38}},{"column":0,"id":37,"line":0,"name":"<asynchronous gap>","presentationHint":"label"}],"totalFrames":4},"command":"stackTrace","request_seq":38,"success":true}
[12:59:56 PM] [DAP] [Info] ==> {"command":"terminate","arguments":{"restart":false},"type":"request","seq":39}
[12:59:56 PM] [DAP] [Info] <== {"seq":375,"type":"event","body":{"category":"stdout","output":"Application finished.\n"},"event":"output"}
[12:59:56 PM] [DAP] [Info] <== {"seq":376,"type":"event","body":{"output":"\nExited (-1).\n"},"event":"output"}
[12:59:56 PM] [DAP] [Info] <== {"seq":377,"type":"event","body":{},"event":"terminated"}
[12:59:56 PM] [DAP] [Info] <== {"seq":378,"type":"response","command":"terminate","request_seq":39,"success":true}
[12:59:56 PM] [DAP] [Info] ==> {"command":"disconnect","arguments":{"restart":false},"type":"request","seq":40}
[12:59:56 PM] [DAP] [Info] <== {"seq":379,"type":"response","command":"disconnect","request_seq":40,"success":true}
[12:59:56 PM] [DAP] [Info] Stopping debug session 087877e3-c3ed-4ad8-b9e7-d10d626f1deb
[12:59:56 PM] [DAP] [Info] Debug session 087877e3-c3ed-4ad8-b9e7-d10d626f1deb exit: code: 1, signal: undefined
[12:59:56 PM] [DAP] [Info] Debug session 087877e3-c3ed-4ad8-b9e7-d10d626f1deb errored: {}
