!! ⚠️ PLEASE REVIEW THIS LOG FOR SENSITIVE INFORMATION BEFORE SHARING ⚠️ !!
Dart Code extension: 3.78.0
Flutter extension: 3.79.20231130 (not activated)

App: Visual Studio Code
App Host: desktop
Version: win 1.84.2


Logging Categories:
    DAP

Wed Dec 06 2023 [11:58:56 GMT+0700 (Indochina Time)] Log file started
[12:02:29 PM] [DAP] [Info] Starting debug session 454e343a-54f3-4faf-a91b-9ec4fc428a33
[12:02:29 PM] [DAP] [Info] ==> {"command":"initialize","arguments":{"clientID":"vscode","clientName":"Visual Studio Code","adapterID":"dart","pathFormat":"path","linesStartAt1":true,"columnsStartAt1":true,"supportsVariableType":true,"supportsVariablePaging":true,"supportsRunInTerminalRequest":true,"locale":"en","supportsProgressReporting":true,"supportsInvalidatedEvent":true,"supportsMemoryReferences":true,"supportsArgsCanBeInterpretedByShell":true,"supportsMemoryEvent":true,"supportsStartDebuggingRequest":true},"type":"request","seq":1}
[12:02:30 PM] [DAP] [Info] <== {"seq":1,"type":"response","body":{"exceptionBreakpointFilters":[{"default":false,"filter":"All","label":"All Exceptions"},{"default":true,"filter":"Unhandled","label":"Uncaught Exceptions"}],"supportsClipboardContext":true,"supportsConditionalBreakpoints":true,"supportsConfigurationDoneRequest":true,"supportsDelayedStackTraceLoading":true,"supportsEvaluateForHovers":true,"supportsLogPoints":true,"supportsRestartRequest":false,"supportsTerminateRequest":true,"supportsValueFormattingOptions":true},"command":"initialize","request_seq":1,"success":true}
[12:02:30 PM] [DAP] [Info] <== {"seq":2,"type":"event","body":{},"event":"initialized"}
[12:02:30 PM] [DAP] [Info] ==> {"command":"launch","arguments":{"dartCodeDebugSessionID":"session-2402c","type":"dart","request":"launch","program":"D:\\Flutter\\tintuc\\lib\\main.dart","projectRootPath":"D:\\Flutter\\tintuc","cwd":"D:\\Flutter\\tintuc","name":"Flutter (Pixel 6 Pro API 33)","deviceId":"emulator-5554","deviceName":"Pixel 6 Pro API 33 (android-x64)","toolEnv":{"FLUTTER_HOST":"VSCode","PUB_ENVIRONMENT":"vscode.dart-code","FLUTTER_ROOT":"C:\\src\\flutter"},"sendLogsToClient":false,"sendCustomProgressEvents":true,"allowAnsiColorOutput":true,"additionalProjectPaths":["D:\\Flutter\\tintuc"],"args":[],"vmAdditionalArgs":[],"toolArgs":["-d","emulator-5554","--devtools-server-address","http://127.0.0.1:9100/"],"vmServicePort":0,"dartSdkPath":"C:\\src\\flutter\\bin\\cache\\dart-sdk","vmServiceLogFile":"D:\\Flutter\\tintuc\\logs\\observatory.txt","maxLogLineLength":2000,"dartTestLogFile":"D:\\Flutter\\tintuc\\logs\\dart_test.txt","debugSdkLibraries":true,"debugExternalPackageLibraries":true,"showDartDeveloperLogs":true,"evaluateGettersInDebugViews":true,"showGettersInDebugViews":true,"evaluateToStringInDebugViews":true,"flutterSdkPath":"C:\\src\\flutter","useInspectorNotificationsForWidgetErrors":true,"flutterRunLogFile":"D:\\Flutter\\tintuc\\logs\\flutter_run.txt","flutterTestLogFile":"D:\\Flutter\\tintuc\\logs\\flutter_test.txt","showMemoryUsage":false,"debuggerType":2,"__sessionId":"454e343a-54f3-4faf-a91b-9ec4fc428a33"},"type":"request","seq":2}
[12:02:30 PM] [DAP] [Info] ==> {"command":"setBreakpoints","arguments":{"source":{"name":"postcats.dart","path":"d:\\Flutter\\tintuc\\lib\\media\\postcats.dart"},"lines":[86],"breakpoints":[{"line":86}],"sourceModified":false},"type":"request","seq":3}
[12:02:30 PM] [DAP] [Info] ==> {"command":"setExceptionBreakpoints","arguments":{"filters":["Unhandled"]},"type":"request","seq":4}
[12:02:30 PM] [DAP] [Info] <== {"seq":3,"type":"response","body":{"breakpoints":[{"id":100000,"verified":false}]},"command":"setBreakpoints","request_seq":3,"success":true}
[12:02:30 PM] [DAP] [Info] <== {"seq":4,"type":"response","body":{},"command":"setExceptionBreakpoints","request_seq":4,"success":true}
[12:02:30 PM] [DAP] [Info] ==> {"command":"configurationDone","type":"request","seq":5}
[12:02:30 PM] [DAP] [Info] <== {"seq":5,"type":"response","command":"configurationDone","request_seq":5,"success":true}
[12:02:30 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":6}
[12:02:30 PM] [DAP] [Info] <== {"seq":6,"type":"event","body":{"message":"Launching…","progressId":"launch_1","title":"Flutter"},"event":"dart.progressStart"}
[12:02:30 PM] [DAP] [Info] <== {"seq":7,"type":"response","command":"launch","request_seq":2,"success":true}
[12:02:30 PM] [DAP] [Info] <== {"seq":8,"type":"response","body":{"threads":[]},"command":"threads","request_seq":6,"success":true}
[12:02:32 PM] [DAP] [Info] <== {"seq":9,"type":"event","body":{"capabilities":{"supportsRestartRequest":true}},"event":"capabilities"}
[12:02:32 PM] [DAP] [Info] <== {"seq":10,"type":"event","body":{"appId":"63394330-be4d-4ff0-a1f5-cb5f07faf182","deviceId":"emulator-5554","directory":"D:\\Flutter\\tintuc","supportsRestart":true,"launchMode":"run","mode":"debug"},"event":"flutter.appStart"}
[12:02:33 PM] [DAP] [Info] <== {"seq":11,"type":"event","body":{"category":"console","output":"Launching lib\\main.dart on sdk gphone x86 64 in debug mode...\n"},"event":"output"}
[12:02:33 PM] [DAP] [Info] <== {"seq":12,"type":"event","body":{"category":"console","output":"Building with Flutter multidex support enabled.\n"},"event":"output"}
[12:03:03 PM] [DAP] [Info] <== {"seq":13,"type":"event","body":{"category":"console","output":"√  Built build\\app\\outputs\\flutter-apk\\app-debug.apk.\n"},"event":"output"}
[12:03:09 PM] [DAP] [Info] <== {"seq":14,"type":"event","body":{"progressId":"launch_1"},"event":"dart.progressEnd"}
[12:03:09 PM] [DAP] [Info] <== {"seq":15,"type":"event","body":{"output":"Connecting to VM Service at ws://127.0.0.1:53603/cU7S4XWchKU=/ws\n"},"event":"output"}
[12:03:09 PM] [DAP] [Info] <== {"seq":16,"type":"event","body":{"vmServiceUri":"ws://127.0.0.1:53603/cU7S4XWchKU=/ws"},"event":"dart.debuggerUris"}
[12:03:09 PM] [DAP] [Info] <== {"seq":17,"type":"event","body":{"reason":"started","threadId":1997853505607347},"event":"thread"}
[12:03:09 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":7}
[12:03:09 PM] [DAP] [Info] <== {"seq":18,"type":"response","body":{"threads":[{"id":1997853505607347,"name":"main"}]},"command":"threads","request_seq":7,"success":true}
[12:03:09 PM] [DAP] [Info] <== {"seq":19,"type":"event","body":{"category":"stdout","output":"I/.example.tintuc( 4955): Compiler allocated 4533KB to compile void android.view.ViewRootImpl.performTraversals()\n"},"event":"output"}
[12:03:09 PM] [DAP] [Info] <== {"seq":20,"type":"event","body":{},"event":"flutter.appStarted"}
[12:03:09 PM] [DAP] [Info] <== {"seq":21,"type":"event","body":{"service":"reloadSources","method":"s0.reloadSources"},"event":"dart.serviceRegistered"}
[12:03:09 PM] [DAP] [Info] <== {"seq":22,"type":"event","body":{"service":"hotRestart","method":"s0.hotRestart"},"event":"dart.serviceRegistered"}
[12:03:09 PM] [DAP] [Info] <== {"seq":23,"type":"event","body":{"service":"flutterVersion","method":"s0.flutterVersion"},"event":"dart.serviceRegistered"}
[12:03:09 PM] [DAP] [Info] <== {"seq":24,"type":"event","body":{"service":"compileExpression","method":"s0.compileExpression"},"event":"dart.serviceRegistered"}
[12:03:09 PM] [DAP] [Info] <== {"seq":25,"type":"event","body":{"service":"flutterMemoryInfo","method":"s0.flutterMemoryInfo"},"event":"dart.serviceRegistered"}
[12:03:09 PM] [DAP] [Info] <== {"seq":26,"type":"event","body":{"service":"flutterGetSkSL","method":"s0.flutterGetSkSL"},"event":"dart.serviceRegistered"}
[12:03:09 PM] [DAP] [Info] <== {"seq":27,"type":"event","body":{"service":"launchDevTools","method":"s2.launchDevTools"},"event":"dart.serviceRegistered"}
[12:03:09 PM] [DAP] [Info] <== {"seq":28,"type":"event","body":{"extensionRPC":"ext.flutter.reassemble","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":29,"type":"event","body":{"extensionRPC":"ext.flutter.exit","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":30,"type":"event","body":{"extensionRPC":"ext.flutter.connectedVmServiceUri","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":31,"type":"event","body":{"extensionRPC":"ext.flutter.activeDevToolsServerAddress","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":32,"type":"event","body":{"extensionRPC":"ext.flutter.platformOverride","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":33,"type":"event","body":{"extensionRPC":"ext.flutter.brightnessOverride","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":34,"type":"event","body":{"extensionRPC":"ext.flutter.timeDilation","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":35,"type":"event","body":{"extensionRPC":"ext.flutter.evict","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":36,"type":"event","body":{"extensionRPC":"ext.flutter.invertOversizedImages","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":37,"type":"event","body":{"extensionRPC":"ext.flutter.debugPaint","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":38,"type":"event","body":{"extensionRPC":"ext.flutter.debugPaintBaselinesEnabled","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":39,"type":"event","body":{"extensionRPC":"ext.flutter.repaintRainbow","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":40,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpLayerTree","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":41,"type":"event","body":{"extensionRPC":"ext.flutter.debugDisableClipLayers","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":42,"type":"event","body":{"extensionRPC":"ext.flutter.debugDisablePhysicalShapeLayers","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":43,"type":"event","body":{"extensionRPC":"ext.flutter.debugDisableOpacityLayers","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":44,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpRenderTree","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":45,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpSemanticsTreeInTraversalOrder","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":46,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpSemanticsTreeInInverseHitTestOrder","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":47,"type":"event","body":{"extensionRPC":"ext.flutter.profileRenderObjectPaints","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":48,"type":"event","body":{"extensionRPC":"ext.flutter.profileRenderObjectLayouts","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":49,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpApp","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":50,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpFocusTree","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":51,"type":"event","body":{"extensionRPC":"ext.flutter.showPerformanceOverlay","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":52,"type":"event","body":{"extensionRPC":"ext.flutter.didSendFirstFrameEvent","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":53,"type":"event","body":{"extensionRPC":"ext.flutter.didSendFirstFrameRasterizedEvent","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":54,"type":"event","body":{"extensionRPC":"ext.flutter.profileWidgetBuilds","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":55,"type":"event","body":{"extensionRPC":"ext.flutter.profileUserWidgetBuilds","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":56,"type":"event","body":{"extensionRPC":"ext.flutter.debugAllowBanner","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":57,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.structuredErrors","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":58,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.show","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":59,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.trackRebuildDirtyWidgets","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":60,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.trackRepaintWidgets","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":61,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.disposeAllGroups","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":62,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.disposeGroup","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":63,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.isWidgetTreeReady","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":64,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.disposeId","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":65,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setPubRootDirectories","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":66,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.addPubRootDirectories","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":67,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.removePubRootDirectories","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":68,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getPubRootDirectories","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":69,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setSelectionById","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":70,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getParentChain","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":71,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getProperties","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":72,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getChildren","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] ==> {"command":"callService","arguments":{"method":"ext.flutter.inspector.setPubRootDirectories","params":{"isolateId":"isolates/1997853505607347","arg0":"file:///D:/Flutter/tintuc"}},"type":"request","seq":8}
[12:03:09 PM] [DAP] [Info] <== {"seq":73,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getChildrenSummaryTree","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":74,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getChildrenDetailsSubtree","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":75,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getRootWidget","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":76,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getRootWidgetSummaryTree","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":77,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getRootWidgetSummaryTreeWithPreviews","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":78,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getDetailsSubtree","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":79,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getSelectedWidget","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":80,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getSelectedSummaryWidget","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":81,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.isWidgetCreationTracked","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":82,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.screenshot","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":83,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getLayoutExplorerNode","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":84,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setFlexFit","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":85,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setFlexFactor","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":86,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setFlexProperties","isolateId":"isolates/1997853505607347"},"event":"dart.serviceExtensionAdded"}
[12:03:09 PM] [DAP] [Info] <== {"seq":87,"type":"event","body":{"extension":"ext.flutter.activeDevToolsServerAddress","value":"http://127.0.0.1:9100"},"event":"flutter.serviceExtensionStateChanged"}
[12:03:09 PM] [DAP] [Info] <== {"seq":88,"type":"event","body":{"extension":"ext.flutter.connectedVmServiceUri","value":"http://127.0.0.1:53603/cU7S4XWchKU=/"},"event":"flutter.serviceExtensionStateChanged"}
[12:03:09 PM] [DAP] [Info] <== {"seq":89,"type":"response","body":{"result":null,"type":"_extensionType","method":"ext.flutter.inspector.setPubRootDirectories"},"command":"callService","request_seq":8,"success":true}
[12:03:09 PM] [DAP] [Info] <== {"seq":90,"type":"event","body":{"category":"stdout","output":"D/CompatibilityChangeReporter( 4955): Compat change id reported: 183155436; UID 10172; state: ENABLED\n"},"event":"output"}
[12:03:10 PM] [DAP] [Info] <== {"seq":91,"type":"event","body":{"category":"stdout","output":"D/SessionsDependencies( 4955): Dependency to CRASHLYTICS added.\n"},"event":"output"}
[12:03:10 PM] [DAP] [Info] <== {"seq":92,"type":"event","body":{"category":"stdout","output":"I/FirebaseApp( 4955): Device unlocked: initializing all Firebase APIs for app [DEFAULT]\n"},"event":"output"}
[12:03:10 PM] [DAP] [Info] <== {"seq":93,"type":"event","body":{"category":"stdout","output":"I/FIAM.Headless( 4955): Starting InAppMessaging runtime with Installation ID fIRDsylTRuW7ng8S4568Wf\n"},"event":"output"}
[12:03:10 PM] [DAP] [Info] <== {"seq":94,"type":"event","body":{"category":"stdout","output":"W/Glide   ( 4955): Failed to find GeneratedAppGlideModule. You should include an annotationProcessor compile dependency on com.github.bumptech.glide:compiler in your application and a @GlideModule annotated AppGlideModule implementation or LibraryGlideModules will be silently ignored\n"},"event":"output"}
[12:03:10 PM] [DAP] [Info] <== {"seq":95,"type":"event","body":{"category":"stdout","output":"I/FirebaseCrashlytics( 4955): Initializing Firebase Crashlytics 18.6.0 for com.example.tintuc\n"},"event":"output"}
[12:03:10 PM] [DAP] [Info] <== {"seq":96,"type":"event","body":{"category":"stdout","output":"D/SessionsDependencies( 4955): Subscriber CRASHLYTICS registered.\n"},"event":"output"}
[12:03:10 PM] [DAP] [Info] <== {"seq":97,"type":"event","body":{"category":"stdout","output":"I/FirebaseCrashlytics( 4955): No version control information found\n"},"event":"output"}
[12:03:10 PM] [DAP] [Info] <== {"seq":98,"type":"event","body":{"category":"stdout","output":"D/FirebaseSessions( 4955): Initializing Firebase Sessions SDK.\n"},"event":"output"}
[12:03:10 PM] [DAP] [Info] <== {"seq":99,"type":"event","body":{"category":"stdout","output":"D/LifecycleServiceBinder( 4955): Binding service to application.\n"},"event":"output"}
[12:03:10 PM] [DAP] [Info] <== {"seq":100,"type":"event","body":{"category":"stdout","output":"D/SessionLifecycleService( 4955): Service bound to new client on process 4955\n"},"event":"output"}
[12:03:10 PM] [DAP] [Info] <== {"seq":101,"type":"event","body":{"category":"stdout","output":"D/SessionLifecycleService( 4955): App has not yet foregrounded. Using previously stored session: null\n"},"event":"output"}
[12:03:10 PM] [DAP] [Info] <== {"seq":102,"type":"event","body":{"category":"stdout","output":"D/SessionLifecycleService( 4955): Client android.os.Messenger@600f318 bound at 228619. Clients: 1\n"},"event":"output"}
[12:03:10 PM] [DAP] [Info] <== {"seq":103,"type":"event","body":{"category":"stdout","output":"D/SessionLifecycleClient( 4955): Connected to SessionLifecycleService. Queue size 0\n"},"event":"output"}
[12:03:10 PM] [DAP] [Info] <== {"seq":104,"type":"event","body":{"category":"stdout","output":"D/FirebaseAuth( 4955): Notifying id token listeners about user ( dlQUShZwTNauBaiAC73oiPtacgZ2 ).\n"},"event":"output"}
[12:03:10 PM] [DAP] [Info] <== {"seq":105,"type":"event","body":{"category":"stdout","output":"D/FRCPlugin( 4955): Sending fetchTimeout: 60\n"},"event":"output"}
[12:03:12 PM] [DAP] [Info] <== {"seq":106,"type":"event","body":{"category":"stdout","output":"I/ExoPlayerImpl( 4955): Init 87734eb [ExoPlayerLib/2.18.7] [emu64xa, sdk_gphone_x86_64, Google, 33]\n"},"event":"output"}
[12:03:12 PM] [DAP] [Info] <== {"seq":107,"type":"event","body":{"category":"stdout","output":"W/.example.tintuc( 4955): Accessing hidden method Landroid/media/AudioTrack;->getLatency()I (unsupported, reflection, allowed)\n"},"event":"output"}
[12:03:12 PM] [DAP] [Info] <== {"seq":108,"type":"event","body":{"category":"stdout","output":"W/System  ( 4955): Ignoring header X-Firebase-Locale because its value was null.\n"},"event":"output"}
[12:03:12 PM] [DAP] [Info] <== {"seq":109,"type":"event","body":{"category":"stdout","output":"W/LocalRequestInterceptor( 4955): Error getting App Check token; using placeholder token instead. Error: com.google.firebase.FirebaseException: No AppCheckProvider installed.\n"},"event":"output"}
[12:03:12 PM] [DAP] [Info] <== {"seq":110,"type":"event","body":{"category":"stdout","output":"W/DynamiteModule( 4955): Local module descriptor class for com.google.android.gms.providerinstaller.dynamite not found.\n"},"event":"output"}
[12:03:12 PM] [DAP] [Info] <== {"seq":111,"type":"event","body":{"category":"stdout","output":"I/DynamiteModule( 4955): Considering local module com.google.android.gms.providerinstaller.dynamite:0 and remote module com.google.android.gms.providerinstaller.dynamite:0\n"},"event":"output"}
[12:03:12 PM] [DAP] [Info] <== {"seq":112,"type":"event","body":{"category":"stdout","output":"W/ProviderInstaller( 4955): Failed to load providerinstaller module: No acceptable module com.google.android.gms.providerinstaller.dynamite found. Local version is 0 and remote version is 0.\n"},"event":"output"}
[12:03:12 PM] [DAP] [Info] <== {"seq":113,"type":"event","body":{"category":"stdout","output":"D/nativeloader( 4955): Configuring classloader-namespace for other apk /system/framework/org.apache.http.legacy.jar. target_sdk_version=33, uses_libraries=ALL, library_path=/product/priv-app/PrebuiltGmsCore/lib/x86_64:/product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk!/lib/x86_64, permitted_path=/data:/mnt/expand:/data/user/0/com.google.android.gms\n"},"event":"output"}
[12:03:12 PM] [DAP] [Info] <== {"seq":114,"type":"event","body":{"category":"stdout","output":"D/nativeloader( 4955): Configuring classloader-namespace for other apk /system/framework/com.android.media.remotedisplay.jar. target_sdk_version=33, uses_libraries=ALL, library_path=/product/priv-app/PrebuiltGmsCore/lib/x86_64:/product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk!/lib/x86_64, permitted_path=/data:/mnt/expand:/data/user/0/com.google.android.gms\n"},"event":"output"}
[12:03:12 PM] [DAP] [Info] <== {"seq":115,"type":"event","body":{"category":"stdout","output":"D/nativeloader( 4955): Configuring classloader-namespace for other apk /system/framework/com.android.location.provider.jar. target_sdk_version=33, uses_libraries=ALL, library_path=/product/priv-app/PrebuiltGmsCore/lib/x86_64:/product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk!/lib/x86_64, permitted_path=/data:/mnt/expand:/data/user/0/com.google.android.gms\n"},"event":"output"}
[12:03:12 PM] [DAP] [Info] <== {"seq":116,"type":"event","body":{"category":"stdout","output":"D/nativeloader( 4955): Configuring vendor-classloader-namespace for unbundled product apk /product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk. target_sdk_version=33, uses_libraries=, library_path=/product/priv-app/PrebuiltGmsCore/lib/x86_64:/product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk!/lib/x86_64:/product/lib64:/system/product/lib64, permitted_path=/data:/mnt/expand:/data/user/0/com.google.android.gms:/product/lib64:/system/product/lib64\n"},"event":"output"}
[12:03:12 PM] [DAP] [Info] <== {"seq":117,"type":"event","body":{"category":"stdout","output":"D/TrafficStats( 4955): tagSocket(136) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:03:12 PM] [DAP] [Info] <== {"seq":118,"type":"event","body":{"category":"stdout","output":"D/TrafficStats( 4955): tagSocket(137) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:03:12 PM] [DAP] [Info] <== {"seq":119,"type":"event","body":{"category":"stdout","output":"V/NativeCrypto( 4955): Registering com/google/android/gms/org/conscrypt/NativeCrypto's 295 native methods...\n"},"event":"output"}
[12:03:12 PM] [DAP] [Info] <== {"seq":120,"type":"event","body":{"category":"stdout","output":"W/.example.tintuc( 4955): Accessing hidden method Ljava/security/spec/ECParameterSpec;->getCurveName()Ljava/lang/String; (unsupported, reflection, allowed)\n"},"event":"output"}
[12:03:12 PM] [DAP] [Info] <== {"seq":121,"type":"event","body":{"category":"stdout","output":"I/ProviderInstaller( 4955): Installed default security provider GmsCore_OpenSSL\n"},"event":"output"}
[12:03:13 PM] [DAP] [Info] <== {"seq":122,"type":"event","body":{"extension":"ext.flutter.inspector.structuredErrors","value":true},"event":"flutter.serviceExtensionStateChanged"}
[12:03:13 PM] [DAP] [Info] <== {"seq":123,"type":"event","body":{"category":"stdout","output":"W/.example.tintuc( 4955): Accessing hidden method Ljava/security/spec/ECParameterSpec;->setCurveName(Ljava/lang/String;)V (unsupported, reflection, allowed)\n"},"event":"output"}
[12:03:13 PM] [DAP] [Info] <== {"seq":124,"type":"event","body":{"category":"stdout","output":"D/ProfileInstaller( 4955): Installing profile for com.example.tintuc\n"},"event":"output"}
[12:03:13 PM] [DAP] [Info] <== {"seq":125,"type":"event","body":{"category":"stdout","output":"D/TrafficStats( 4955): tagSocket(155) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:03:13 PM] [DAP] [Info] <== {"seq":126,"type":"event","body":{"category":"stdout","output":"W/Parcel  ( 4955): Expecting binder but got null!\n"},"event":"output"}
[12:03:13 PM] [DAP] [Info] <== {"seq":127,"type":"event","body":{"category":"stdout","output":"W/.example.tintuc( 4955): Accessing hidden field Ljava/net/Socket;->impl:Ljava/net/SocketImpl; (unsupported, reflection, allowed)\n"},"event":"output"}
[12:03:13 PM] [DAP] [Info] <== {"seq":128,"type":"event","body":{"category":"stdout","output":"D/FirebaseAuth( 4955): Notifying id token listeners about user ( dlQUShZwTNauBaiAC73oiPtacgZ2 ).\n"},"event":"output"}
[12:03:14 PM] [DAP] [Info] <== {"seq":129,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=23.89ms min=4.15ms max=176.25ms count=25\n"},"event":"output"}
[12:03:15 PM] [DAP] [Info] <== {"seq":130,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:03:15 PM] [DAP] [Info] <== {"seq":131,"type":"event","body":{"category":"stdout","output":"D/TrafficStats( 4955): tagSocket(136) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:03:15 PM] [DAP] [Info] <== {"seq":132,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=13.44ms min=3.86ms max=56.35ms count=30\n"},"event":"output"}
[12:03:16 PM] [DAP] [Info] <== {"seq":133,"type":"event","body":{"reason":"started","threadId":5659963795281243},"event":"thread"}
[12:03:16 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":9}
[12:03:16 PM] [DAP] [Info] <== {"seq":134,"type":"event","body":{"reason":"started","threadId":5001402511924307},"event":"thread"}
[12:03:16 PM] [DAP] [Info] <== {"seq":135,"type":"response","body":{"threads":[{"id":1997853505607347,"name":"main"},{"id":5659963795281243,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."},{"id":5001402511924307,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."}]},"command":"threads","request_seq":9,"success":true}
[12:03:16 PM] [DAP] [Info] <== {"seq":136,"type":"event","body":{"category":"stdout","output":"I/.example.tintuc( 4955): Background concurrent copying GC freed 124236(9810KB) AllocSpace objects, 48(1752KB) LOS objects, 49% free, 7849KB/15MB, paused 762us,2.322ms total 138.045ms\n"},"event":"output"}
[12:03:16 PM] [DAP] [Info] <== {"seq":137,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpEnableTimelineLogging","isolateId":"isolates/5659963795281243"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":138,"type":"event","body":{"extensionRPC":"ext.dart.io.setHttpEnableTimelineLogging","isolateId":"isolates/5659963795281243"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":139,"type":"event","body":{"extensionRPC":"ext.dart.io.httpEnableTimelineLogging","isolateId":"isolates/5659963795281243"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":140,"type":"event","body":{"extensionRPC":"ext.dart.io.getSocketProfile","isolateId":"isolates/5659963795281243"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":141,"type":"event","body":{"extensionRPC":"ext.dart.io.startSocketProfiling","isolateId":"isolates/5659963795281243"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":142,"type":"event","body":{"extensionRPC":"ext.dart.io.pauseSocketProfiling","isolateId":"isolates/5659963795281243"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":143,"type":"event","body":{"extensionRPC":"ext.dart.io.socketProfilingEnabled","isolateId":"isolates/5659963795281243"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":144,"type":"event","body":{"extensionRPC":"ext.dart.io.clearSocketProfile","isolateId":"isolates/5659963795281243"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":145,"type":"event","body":{"extensionRPC":"ext.dart.io.getVersion","isolateId":"isolates/5659963795281243"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":146,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfile","isolateId":"isolates/5659963795281243"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":147,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfileRequest","isolateId":"isolates/5659963795281243"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":148,"type":"event","body":{"extensionRPC":"ext.dart.io.clearHttpProfile","isolateId":"isolates/5659963795281243"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":10}
[12:03:16 PM] [DAP] [Info] <== {"seq":149,"type":"event","body":{"reason":"started","threadId":4565232364311275},"event":"thread"}
[12:03:16 PM] [DAP] [Info] <== {"seq":150,"type":"event","body":{"reason":"started","threadId":1356375608937515},"event":"thread"}
[12:03:16 PM] [DAP] [Info] <== {"seq":151,"type":"response","body":{"threads":[{"id":1997853505607347,"name":"main"},{"id":5659963795281243,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."},{"id":5001402511924307,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."},{"id":4565232364311275,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."},{"id":1356375608937515,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."}]},"command":"threads","request_seq":10,"success":true}
[12:03:16 PM] [DAP] [Info] <== {"seq":152,"type":"event","body":{"reason":"exited","threadId":5659963795281243},"event":"thread"}
[12:03:16 PM] [DAP] [Info] <== {"seq":153,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpEnableTimelineLogging","isolateId":"isolates/5001402511924307"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":154,"type":"event","body":{"extensionRPC":"ext.dart.io.setHttpEnableTimelineLogging","isolateId":"isolates/5001402511924307"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":155,"type":"event","body":{"extensionRPC":"ext.dart.io.httpEnableTimelineLogging","isolateId":"isolates/5001402511924307"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":156,"type":"event","body":{"extensionRPC":"ext.dart.io.getSocketProfile","isolateId":"isolates/5001402511924307"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":157,"type":"event","body":{"extensionRPC":"ext.dart.io.startSocketProfiling","isolateId":"isolates/5001402511924307"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":158,"type":"event","body":{"extensionRPC":"ext.dart.io.pauseSocketProfiling","isolateId":"isolates/5001402511924307"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":159,"type":"event","body":{"extensionRPC":"ext.dart.io.socketProfilingEnabled","isolateId":"isolates/5001402511924307"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":160,"type":"event","body":{"extensionRPC":"ext.dart.io.clearSocketProfile","isolateId":"isolates/5001402511924307"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":161,"type":"event","body":{"extensionRPC":"ext.dart.io.getVersion","isolateId":"isolates/5001402511924307"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":162,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfile","isolateId":"isolates/5001402511924307"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":163,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfileRequest","isolateId":"isolates/5001402511924307"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":164,"type":"event","body":{"extensionRPC":"ext.dart.io.clearHttpProfile","isolateId":"isolates/5001402511924307"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":11}
[12:03:16 PM] [DAP] [Info] <== {"seq":165,"type":"event","body":{"reason":"exited","threadId":5001402511924307},"event":"thread"}
[12:03:16 PM] [DAP] [Info] <== {"seq":166,"type":"response","body":{"threads":[{"id":1997853505607347,"name":"main"},{"id":4565232364311275,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."},{"id":1356375608937515,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."}]},"command":"threads","request_seq":11,"success":true}
[12:03:16 PM] [DAP] [Info] <== {"seq":167,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpEnableTimelineLogging","isolateId":"isolates/4565232364311275"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":168,"type":"event","body":{"extensionRPC":"ext.dart.io.setHttpEnableTimelineLogging","isolateId":"isolates/4565232364311275"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":169,"type":"event","body":{"extensionRPC":"ext.dart.io.httpEnableTimelineLogging","isolateId":"isolates/4565232364311275"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":170,"type":"event","body":{"extensionRPC":"ext.dart.io.getSocketProfile","isolateId":"isolates/4565232364311275"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":171,"type":"event","body":{"extensionRPC":"ext.dart.io.startSocketProfiling","isolateId":"isolates/4565232364311275"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":172,"type":"event","body":{"extensionRPC":"ext.dart.io.pauseSocketProfiling","isolateId":"isolates/4565232364311275"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":173,"type":"event","body":{"extensionRPC":"ext.dart.io.socketProfilingEnabled","isolateId":"isolates/4565232364311275"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":174,"type":"event","body":{"extensionRPC":"ext.dart.io.clearSocketProfile","isolateId":"isolates/4565232364311275"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":175,"type":"event","body":{"extensionRPC":"ext.dart.io.getVersion","isolateId":"isolates/4565232364311275"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":176,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfile","isolateId":"isolates/4565232364311275"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":177,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfileRequest","isolateId":"isolates/4565232364311275"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":178,"type":"event","body":{"extensionRPC":"ext.dart.io.clearHttpProfile","isolateId":"isolates/4565232364311275"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":179,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpEnableTimelineLogging","isolateId":"isolates/1356375608937515"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":180,"type":"event","body":{"extensionRPC":"ext.dart.io.setHttpEnableTimelineLogging","isolateId":"isolates/1356375608937515"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":181,"type":"event","body":{"extensionRPC":"ext.dart.io.httpEnableTimelineLogging","isolateId":"isolates/1356375608937515"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":182,"type":"event","body":{"extensionRPC":"ext.dart.io.getSocketProfile","isolateId":"isolates/1356375608937515"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":183,"type":"event","body":{"extensionRPC":"ext.dart.io.startSocketProfiling","isolateId":"isolates/1356375608937515"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":184,"type":"event","body":{"extensionRPC":"ext.dart.io.pauseSocketProfiling","isolateId":"isolates/1356375608937515"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":185,"type":"event","body":{"extensionRPC":"ext.dart.io.socketProfilingEnabled","isolateId":"isolates/1356375608937515"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":186,"type":"event","body":{"extensionRPC":"ext.dart.io.clearSocketProfile","isolateId":"isolates/1356375608937515"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":187,"type":"event","body":{"extensionRPC":"ext.dart.io.getVersion","isolateId":"isolates/1356375608937515"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":188,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfile","isolateId":"isolates/1356375608937515"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":189,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfileRequest","isolateId":"isolates/1356375608937515"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":190,"type":"event","body":{"extensionRPC":"ext.dart.io.clearHttpProfile","isolateId":"isolates/1356375608937515"},"event":"dart.serviceExtensionAdded"}
[12:03:16 PM] [DAP] [Info] <== {"seq":191,"type":"event","body":{"reason":"exited","threadId":4565232364311275},"event":"thread"}
[12:03:16 PM] [DAP] [Info] <== {"seq":192,"type":"event","body":{"reason":"exited","threadId":1356375608937515},"event":"thread"}
[12:03:16 PM] [DAP] [Info] <== {"seq":193,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=34.46ms min=2.89ms max=355.15ms count=22\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":194,"type":"event","body":{"category":"stdout","output":"I/DMCodecAdapterFactory( 4955): Creating an asynchronous MediaCodec adapter for track type video\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":195,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): allocate(c2.goldfish.h264.decoder)\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":196,"type":"event","body":{"category":"stdout","output":"I/Codec2Client( 4955): Available Codec2 services: \"default\" \"software\"\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":197,"type":"event","body":{"category":"stdout","output":"I/CCodec  ( 4955): setting up 'default' as default (vendor) store\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":198,"type":"event","body":{"category":"stdout","output":"I/CCodec  ( 4955): Created component [c2.goldfish.h264.decoder]\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":199,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): read media type: video/avc\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":200,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: algo.buffers.max-count.values\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":201,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: output.subscribed-indices.values\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":202,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: input.buffers.allocator-ids.values\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":203,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: output.buffers.allocator-ids.values\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":204,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: algo.buffers.allocator-ids.values\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":205,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: output.buffers.pool-ids.values\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":206,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: algo.buffers.pool-ids.values\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":207,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): ignored struct field coded.color-format.locations\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":208,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): ignoring local param raw.size (0xd2001800) as it is already supported\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":209,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): ignoring local param default.color (0x5200180b) as it is already supported\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":210,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): ignored struct field raw.hdr-static-info.mastering\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":211,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 4955): query failed after returning 12 values (BAD_INDEX)\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":212,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is Dict {\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":213,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.pl.level = 20496\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":214,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.pl.profile = 20481\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":215,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.vui.color.matrix = 0\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":216,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.vui.color.primaries = 0\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":217,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.vui.color.range = 2\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":218,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.vui.color.transfer = 0\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":219,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 default.color.matrix = 0\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":220,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 default.color.primaries = 0\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":221,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 default.color.range = 0\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":222,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 default.color.transfer = 0\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":223,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 input.buffers.max-size.value = 6291456\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":224,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 input.delay.value = 0\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":225,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   string input.media-type.value = \"video/avc\"\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":226,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 output.delay.value = 8\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":227,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   string output.media-type.value = \"video/raw\"\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":228,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.color.matrix = 0\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":229,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.color.primaries = 0\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":230,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.color.range = 2\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":231,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.color.transfer = 0\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":232,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.max-size.height = 240\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":233,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.max-size.width = 320\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":234,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.pixel-format.value = 35\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":235,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::i32 raw.rotation.flip = 0\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":236,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::i32 raw.rotation.value = 0\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":237,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.sar.height = 1\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":238,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.sar.width = 1\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":239,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.size.height = 240\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":240,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.size.width = 320\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":241,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2:\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":242,"type":"event","body":{"category":"stdout","output":"W/ColorUtils( 4955): expected specified color aspects (2:0:0:0)\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":243,"type":"event","body":{"category":"stdout","output":"I/MediaCodec( 4955): MediaCodec will operate in async mode\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":244,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 4955): connecting to surface 0x7dc3b4440830, reason connectToSurface\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":245,"type":"event","body":{"category":"stdout","output":"I/MediaCodec( 4955): [c2.goldfish.h264.decoder] setting surface generation to 5073921\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":246,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 4955): disconnecting from surface 0x7dc3b4440830, reason connectToSurface(reconnect)\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":247,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 4955): connecting to surface 0x7dc3b4440830, reason connectToSurface(reconnect)\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":248,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): [c2.goldfish.h264.decoder] buffers are bound to CCodec for this session\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":249,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): no c2 equivalents for csd-1\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":250,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): no c2 equivalents for log-session-id\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":251,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): no c2 equivalents for native-window\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":252,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): no c2 equivalents for flags\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":253,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): config failed => CORRUPTED\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":254,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is   c2::u32 raw.max-size.height = 720\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":255,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.max-size.width = 1280\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":256,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.size.height = 720\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":257,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.size.width = 1280\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":258,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1107298332.\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":259,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): client requested max input size 219813, which is smaller than what component recommended (6291456); overriding with component recommendation.\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":260,"type":"event","body":{"category":"stdout","output":"W/CCodec  ( 4955): This behavior is subject to change. It is recommended that app developers double check whether the requested max input size is in reasonable range.\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":261,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): encoding statistics level = 0\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":262,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): setup formats input: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":263,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t height = 720\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":264,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t level = 65536\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":265,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t max-input-size = 6291456\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":266,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   string mime = \"video/avc\"\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":267,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t profile = 65536\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":268,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t width = 1280\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":269,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   Rect crop(0, 0, 1279, 719)\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":270,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): }\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":271,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): setup formats output: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":272,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t android._color-format = 2135033992\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":273,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t android._video-scaling = 1\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":274,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t rotation-degrees = 0\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":275,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t color-standard = 1\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":276,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t color-range = 2\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":277,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t color-transfer = 3\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":278,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t sar-height = 1\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":279,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t sar-width = 1\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":280,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   Rect crop(0, 0, 1279, 719)\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":281,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t width = 1280\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":282,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t height = 720\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":283,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t max-height = 720\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":284,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t max-width = 1280\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":285,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   string mime = \"video/raw\"\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":286,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t android._dataspace = 260\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":287,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t color-format = 2130708361\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":288,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): }\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":289,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 4955): query failed after returning 12 values (BAD_INDEX)\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":290,"type":"event","body":{"category":"stdout","output":"D/MediaCodec( 4955): keep callback message for reclaim\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":291,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1342179345.\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":292,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 2415921170.\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":293,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1610614798.\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":294,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 2684356609.\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":295,"type":"event","body":{"category":"stdout","output":"D/C2Store ( 4955): Using DMABUF Heaps\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":296,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#908] Created input block pool with allocatorID 16 => poolID 17 - OK (0)\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":297,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#908] Query output surface allocator returned 0 params => BAD_INDEX (6)\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":298,"type":"event","body":{"category":"stdout","output":"I/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#908] Created output block pool with allocatorID 18 => poolID 17 - OK\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":299,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#908] Configured output block pool ids 17 => OK\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":300,"type":"event","body":{"category":"stdout","output":"D/Codec2-OutputBufferQueue( 4955): remote graphic buffer migration 0/0\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":301,"type":"event","body":{"category":"stdout","output":"D/Codec2Client( 4955): setOutputSurface -- failed to set consumer usage (6/BAD_INDEX)\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":302,"type":"event","body":{"category":"stdout","output":"D/Codec2Client( 4955): setOutputSurface -- generation=5073921 consumer usage=0x900\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":303,"type":"event","body":{"category":"stdout","output":"D/Codec2Client( 4955): Surface configure completed\n"},"event":"output"}
[12:03:18 PM] [DAP] [Info] <== {"seq":304,"type":"event","body":{"category":"stdout","output":"I/DMABUFHEAPS( 4955): Using DMA-BUF heap named: system\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":305,"type":"event","body":{"category":"stdout","output":"I/DMCodecAdapterFactory( 4955): Creating an asynchronous MediaCodec adapter for track type audio\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":306,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): allocate(c2.android.aac.decoder)\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":307,"type":"event","body":{"category":"stdout","output":"I/CCodec  ( 4955): setting up 'default' as default (vendor) store\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":308,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#908] Ignoring stale input buffer done callback: last flush index = 0, frameIndex = 0\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":309,"type":"event","body":{"category":"stdout","output":"I/CCodec  ( 4955): Created component [c2.android.aac.decoder]\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":310,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): read media type: audio/mp4a-latm\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":311,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: algo.buffers.max-count.values\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":312,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: output.subscribed-indices.values\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":313,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: input.buffers.allocator-ids.values\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":314,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: output.buffers.allocator-ids.values\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":315,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: algo.buffers.allocator-ids.values\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":316,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: output.buffers.pool-ids.values\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":317,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: algo.buffers.pool-ids.values\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":318,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 4955): query failed after returning 20 values (BAD_INDEX)\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":319,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is Dict {\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":320,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.aac-packaging.value = 0\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":321,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.bitrate.value = 64000\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":322,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.pl.level = 0\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":323,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.pl.profile = 8192\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":324,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::i32 coding.drc.album-mode.value = 0\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":325,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::float coding.drc.attenuation-factor.value = 1\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":326,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::float coding.drc.boost-factor.value = 1\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":327,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::i32 coding.drc.compression-mode.value = 3\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":328,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::i32 coding.drc.effect-type.value = 3\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":329,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::float coding.drc.encoded-level.value = 0.25\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":330,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::float coding.drc.reference-level.value = -16\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":331,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 input.buffers.max-size.value = 8192\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":332,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 input.delay.value = 0\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":333,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   string input.media-type.value = \"audio/mp4a-latm\"\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":334,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 output.delay.value = 2\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":335,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::float output.drc.output-loudness.value = 0.25\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":336,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   string output.media-type.value = \"audio/raw\"\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":337,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.channel-count.value = 1\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":338,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.channel-mask.value = 0\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":339,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.max-channel-count.value = 8\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":340,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.sample-rate.value = 44100\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":341,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): }\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":342,"type":"event","body":{"category":"stdout","output":"I/MediaCodec( 4955): MediaCodec will operate in async mode\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":343,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): [c2.android.aac.decoder] buffers are bound to CCodec for this session\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":344,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): no c2 equivalents for log-session-id\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":345,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): no c2 equivalents for flags\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":346,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): config failed => CORRUPTED\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":347,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is   c2::u32 raw.channel-count.value = 2\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":348,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1107298332.\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":349,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): client requested max input size 623, which is smaller than what component recommended (8192); overriding with component recommendation.\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":350,"type":"event","body":{"category":"stdout","output":"W/CCodec  ( 4955): This behavior is subject to change. It is recommended that app developers double check whether the requested max input size is in reasonable range.\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":351,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): encoding statistics level = 0\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":352,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): setup formats input: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":353,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-album-mode = 0\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":354,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-boost-level = 127\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":355,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-cut-level = 127\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":356,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-effect-type = 3\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":357,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-encoded-target-level = -1\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":358,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-max-output-channel_count = 8\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":359,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-target-ref-level = 64\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":360,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t bitrate = 64000\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":361,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t channel-count = 2\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":362,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t channel-mask = 0\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":363,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t level = 0\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":364,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t max-input-size = 8192\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":365,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t max-output-channel-count = 8\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":366,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   string mime = \"audio/mp4a-latm\"\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":367,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t profile = 2\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":368,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t sample-rate = 44100\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":369,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): }\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":370,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): setup formats output: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":371,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-album-mode = 0\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":372,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-boost-level = 127\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":373,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-cut-level = 127\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":374,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-effect-type = 3\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":375,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-output-loudness = -1\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":376,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-encoded-target-level = -1\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":377,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-max-output-channel_count = 8\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":378,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-target-ref-level = 64\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":379,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t channel-count = 2\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":380,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t channel-mask = 0\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":381,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t max-output-channel-count = 8\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":382,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   string mime = \"audio/raw\"\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":383,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t sample-rate = 44100\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":384,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t android._config-pcm-encoding = 2\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":385,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): }\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":386,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 4955): query failed after returning 20 values (BAD_INDEX)\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":387,"type":"event","body":{"category":"stdout","output":"D/MediaCodec( 4955): keep callback message for reclaim\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":388,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1342179345.\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":389,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 2415921170.\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":390,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1610614798.\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":391,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.android.aac.decoder#707] Created input block pool with allocatorID 16 => poolID 18 - OK (0)\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":392,"type":"event","body":{"category":"stdout","output":"I/CCodecBufferChannel( 4955): [c2.android.aac.decoder#707] Created output block pool with allocatorID 16 => poolID 26 - OK\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":393,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.android.aac.decoder#707] Configured output block pool ids 26 => OK\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":394,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is   c2::u32 raw.channel-mask.value = 12\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":395,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955): [c2.android.aac.decoder#707:Output[N]] popFromStashAndRegister: at 1000000000000us, output format changed to AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":396,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-drc-album-mode = 0\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":397,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-drc-boost-level = 127\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":398,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-drc-cut-level = 127\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":399,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-drc-effect-type = 3\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":400,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-drc-output-loudness = -1\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":401,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-encoded-target-level = -1\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":402,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-max-output-channel_count = 8\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":403,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-target-ref-level = 64\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":404,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t channel-count = 2\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":405,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t channel-mask = 12\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":406,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t max-output-channel-count = 8\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":407,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   string mime = \"audio/raw\"\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":408,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t sample-rate = 44100\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":409,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t android._config-pcm-encoding = 2\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":410,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955): }\n"},"event":"output"}
[12:03:19 PM] [DAP] [Info] <== {"seq":411,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=1002.23ms min=15.53ms max=2761.76ms count=3\n"},"event":"output"}
[12:03:20 PM] [DAP] [Info] <== {"seq":412,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is   c2::u32 raw.color.matrix = 1\n"},"event":"output"}
[12:03:20 PM] [DAP] [Info] <== {"seq":413,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.color.primaries = 1\n"},"event":"output"}
[12:03:20 PM] [DAP] [Info] <== {"seq":414,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.color.transfer = 3\n"},"event":"output"}
[12:03:20 PM] [DAP] [Info] <== {"seq":415,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.crop.height = 720\n"},"event":"output"}
[12:03:20 PM] [DAP] [Info] <== {"seq":416,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.crop.left = 0\n"},"event":"output"}
[12:03:20 PM] [DAP] [Info] <== {"seq":417,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.crop.top = 0\n"},"event":"output"}
[12:03:20 PM] [DAP] [Info] <== {"seq":418,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.crop.width = 1280\n"},"event":"output"}
[12:03:21 PM] [DAP] [Info] <== {"seq":419,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=292.76ms min=169.91ms max=502.42ms count=4\n"},"event":"output"}
[12:03:22 PM] [DAP] [Info] <== {"seq":420,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=522.74ms min=437.72ms max=607.76ms count=2\n"},"event":"output"}
[12:03:23 PM] [DAP] [Info] <== {"seq":421,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=203.49ms min=18.98ms max=894.76ms count=5\n"},"event":"output"}
[12:03:24 PM] [DAP] [Info] <== {"seq":422,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=73.86ms min=1.87ms max=901.41ms count=13\n"},"event":"output"}
[12:03:24 PM] [DAP] [Info] <== {"seq":423,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): bufferpool2 0x7dc314442c08 : 5(40960 size) total buffers - 0(0 size) used buffers - 22/27 (recycle/alloc) - 5/27 (fetch/transfer)\n"},"event":"output"}
[12:03:24 PM] [DAP] [Info] <== {"seq":424,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): evictor expired: 1, evicted: 1\n"},"event":"output"}
[12:03:25 PM] [DAP] [Info] <== {"seq":425,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): bufferpool2 0x7dc3144001f8 : 5(31457280 size) total buffers - 0(0 size) used buffers - 13/19 (recycle/alloc) - 6/19 (fetch/transfer)\n"},"event":"output"}
[12:03:25 PM] [DAP] [Info] <== {"seq":426,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): evictor expired: 1, evicted: 1\n"},"event":"output"}
[12:03:25 PM] [DAP] [Info] <== {"seq":427,"type":"event","body":{"category":"stdout","output":"W/OnBackInvokedCallback( 4955): OnBackInvokedCallback is not enabled for the application.\n"},"event":"output"}
[12:03:25 PM] [DAP] [Info] <== {"seq":428,"type":"event","body":{"category":"stdout","output":"W/OnBackInvokedCallback( 4955): Set 'android:enableOnBackInvokedCallback=\"true\"' in the application manifest.\n"},"event":"output"}
[12:03:25 PM] [DAP] [Info] <== {"seq":429,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=42.88ms min=1.97ms max=813.10ms count=22\n"},"event":"output"}
[12:03:28 PM] [DAP] [Info] <== {"seq":430,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=270.92ms min=1.73ms max=2317.85ms count=9\n"},"event":"output"}
[12:04:44 PM] [DAP] [Info] <== {"seq":431,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [WatchStream]: (6341c59) Stream closed with status: Status{code=CANCELLED, description=Disconnecting idle stream. Timed out waiting for new targets., cause=null}.\n"},"event":"output"}
[12:05:14 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":12}
[12:05:14 PM] [DAP] [Info] <== {"seq":432,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_2","title":"Flutter"},"event":"dart.progressStart"}
[12:05:15 PM] [DAP] [Info] <== {"seq":433,"type":"event","body":{"category":"stdout","output":"Reloaded 1 of 1166 libraries in 1.320ms (compile: 55 ms, reload: 311 ms, reassemble: 773 ms).\n"},"event":"output"}
[12:05:15 PM] [DAP] [Info] <== {"seq":434,"type":"event","body":{"progressId":"hotReload_2"},"event":"dart.progressEnd"}
[12:05:15 PM] [DAP] [Info] <== {"seq":435,"type":"response","command":"hotReload","request_seq":12,"success":true}
[12:05:15 PM] [DAP] [Info] <== {"seq":436,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=7113.01ms min=1.78ms max=106559.45ms count=15\n"},"event":"output"}
[12:05:15 PM] [DAP] [Info] <== {"seq":437,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:06:45 PM] [DAP] [Info] <== {"seq":438,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [WatchStream]: (6341c59) Stream closed with status: Status{code=CANCELLED, description=Disconnecting idle stream. Timed out waiting for new targets., cause=null}.\n"},"event":"output"}
[12:09:10 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":13}
[12:09:10 PM] [DAP] [Info] <== {"seq":439,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_3","title":"Flutter"},"event":"dart.progressStart"}
[12:09:11 PM] [DAP] [Info] <== {"seq":440,"type":"event","body":{"category":"stdout","output":"Reloaded 1 of 1166 libraries in 931ms (compile: 45 ms, reload: 233 ms, reassemble: 577 ms).\n"},"event":"output"}
[12:09:11 PM] [DAP] [Info] <== {"seq":441,"type":"event","body":{"progressId":"hotReload_3"},"event":"dart.progressEnd"}
[12:09:11 PM] [DAP] [Info] <== {"seq":442,"type":"response","command":"hotReload","request_seq":13,"success":true}
[12:09:11 PM] [DAP] [Info] <== {"seq":443,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=117846.15ms min=417.42ms max=235274.88ms count=2\n"},"event":"output"}
[12:09:11 PM] [DAP] [Info] <== {"seq":444,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:10:41 PM] [DAP] [Info] <== {"seq":445,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [WatchStream]: (6341c59) Stream closed with status: Status{code=CANCELLED, description=Disconnecting idle stream. Timed out waiting for new targets., cause=null}.\n"},"event":"output"}
[12:12:59 PM] [DAP] [Info] <== {"seq":446,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=113978.05ms min=408.01ms max=227548.09ms count=2\n"},"event":"output"}
[12:13:28 PM] [DAP] [Info] <== {"seq":447,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=1696.68ms min=1.30ms max=28755.63ms count=17\n"},"event":"output"}
[12:14:41 PM] [DAP] [Info] <== {"seq":448,"type":"event","body":{"category":"stdout","output":"D/TrafficStats( 4955): tagSocket(149) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:14:41 PM] [DAP] [Info] <== {"seq":449,"type":"event","body":{"category":"stdout","output":"D/TrafficStats( 4955): tagSocket(151) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:15:13 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":14}
[12:15:13 PM] [DAP] [Info] <== {"seq":450,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_4","title":"Flutter"},"event":"dart.progressStart"}
[12:15:13 PM] [DAP] [Info] <== {"seq":451,"type":"event","body":{"category":"stderr","output":"Hot reload was rejected:\n"},"event":"output"}
[12:15:13 PM] [DAP] [Info] <== {"seq":452,"type":"event","body":{"category":"stderr","output":""},"event":"output"}
[12:15:13 PM] [DAP] [Info] <== {"seq":453,"type":"event","body":{"category":"stderr","output":"Const class cannot become non-const: Library:'package:tintuc/caidat/login/screen_sign.dart' Class: ScreenSign.\n","source":{"name":"Const","path":"D:\\Flutter\\tintuc\\Const"}},"event":"output"}
[12:15:13 PM] [DAP] [Info] <== {"seq":454,"type":"event","body":{"category":"stderr","output":"Try performing a hot restart instead.\n","source":{"name":"Try","path":"D:\\Flutter\\tintuc\\Try"}},"event":"output"}
[12:15:13 PM] [DAP] [Info] <== {"seq":455,"type":"event","body":{"category":"stderr","output":""},"event":"output"}
[12:15:13 PM] [DAP] [Info] <== {"seq":456,"type":"event","body":{"progressId":"hotReload_4"},"event":"dart.progressEnd"}
[12:15:13 PM] [DAP] [Info] <== {"seq":457,"type":"response","command":"hotReload","request_seq":14,"success":true}
[12:15:28 PM] [DAP] [Info] <== {"seq":458,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=6316.78ms min=1.34ms max=119764.88ms count=19\n"},"event":"output"}
[12:15:31 PM] [DAP] [Info] <== {"seq":459,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=213.07ms min=1.27ms max=2731.23ms count=13\n"},"event":"output"}
[12:15:32 PM] [DAP] [Info] <== {"seq":460,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=13.52ms min=1.55ms max=231.99ms count=26\n"},"event":"output"}
[12:15:34 PM] [DAP] [Info] <== {"seq":461,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=100.62ms min=1.58ms max=1767.91ms count=18\n"},"event":"output"}
[12:15:37 PM] [DAP] [Info] <== {"seq":462,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=118.74ms min=1.42ms max=2048.56ms count=18\n"},"event":"output"}
[12:15:51 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":15}
[12:15:51 PM] [DAP] [Info] <== {"seq":463,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_5","title":"Flutter"},"event":"dart.progressStart"}
[12:15:52 PM] [DAP] [Info] <== {"seq":464,"type":"event","body":{"category":"stderr","output":"Hot reload was rejected:\n"},"event":"output"}
[12:15:52 PM] [DAP] [Info] <== {"seq":465,"type":"event","body":{"category":"stderr","output":"Const class cannot become non-const: Library:'package:tintuc/caidat/login/screen_sign.dart' Class: ScreenSign.\n","source":{"name":"Const","path":"D:\\Flutter\\tintuc\\Const"}},"event":"output"}
[12:15:52 PM] [DAP] [Info] <== {"seq":466,"type":"event","body":{"category":"stderr","output":"Try performing a hot restart instead.\n","source":{"name":"Try","path":"D:\\Flutter\\tintuc\\Try"}},"event":"output"}
[12:15:52 PM] [DAP] [Info] <== {"seq":467,"type":"event","body":{"category":"stderr","output":""},"event":"output"}
[12:15:52 PM] [DAP] [Info] <== {"seq":468,"type":"event","body":{"progressId":"hotReload_5"},"event":"dart.progressEnd"}
[12:15:52 PM] [DAP] [Info] <== {"seq":469,"type":"response","command":"hotReload","request_seq":15,"success":true}
[12:16:07 PM] [DAP] [Info] <== {"seq":470,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=1332.07ms min=1.58ms max=29222.76ms count=22\n"},"event":"output"}
[12:16:10 PM] [DAP] [Info] <== {"seq":471,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=202.19ms min=1.30ms max=2779.96ms count=14\n"},"event":"output"}
[12:16:12 PM] [DAP] [Info] <== {"seq":472,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=50.14ms min=1.54ms max=1031.22ms count=22\n"},"event":"output"}
[12:16:38 PM] [DAP] [Info] <== {"seq":473,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=1423.69ms min=1.48ms max=25487.34ms count=18\n"},"event":"output"}
[12:17:55 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":16}
[12:17:55 PM] [DAP] [Info] <== {"seq":474,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_6","title":"Flutter"},"event":"dart.progressStart"}
[12:17:55 PM] [DAP] [Info] <== {"seq":475,"type":"event","body":{"category":"stderr","output":"Hot reload was rejected:\n"},"event":"output"}
[12:17:55 PM] [DAP] [Info] <== {"seq":476,"type":"event","body":{"category":"stderr","output":""},"event":"output"}
[12:17:55 PM] [DAP] [Info] <== {"seq":477,"type":"event","body":{"category":"stderr","output":"Const class cannot become non-const: Library:'package:tintuc/caidat/login/screen_sign.dart' Class: ScreenSign.\n","source":{"name":"Const","path":"D:\\Flutter\\tintuc\\Const"}},"event":"output"}
[12:17:55 PM] [DAP] [Info] <== {"seq":478,"type":"event","body":{"category":"stderr","output":"Try performing a hot restart instead.\n","source":{"name":"Try","path":"D:\\Flutter\\tintuc\\Try"}},"event":"output"}
[12:17:55 PM] [DAP] [Info] <== {"seq":479,"type":"event","body":{"category":"stderr","output":""},"event":"output"}
[12:17:55 PM] [DAP] [Info] <== {"seq":480,"type":"event","body":{"progressId":"hotReload_6"},"event":"dart.progressEnd"}
[12:17:55 PM] [DAP] [Info] <== {"seq":481,"type":"response","command":"hotReload","request_seq":16,"success":true}
[12:18:01 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":17}
[12:18:01 PM] [DAP] [Info] ==> {"command":"hotReload","type":"request","seq":18}
[12:18:01 PM] [DAP] [Info] <== {"seq":482,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_7","title":"Flutter"},"event":"dart.progressStart"}
[12:18:01 PM] [DAP] [Info] <== {"seq":483,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_8","title":"Flutter"},"event":"dart.progressStart"}
[12:18:02 PM] [DAP] [Info] <== {"seq":484,"type":"event","body":{"category":"stderr","output":"Hot reload was rejected:\n"},"event":"output"}
[12:18:02 PM] [DAP] [Info] <== {"seq":485,"type":"event","body":{"category":"stderr","output":"Const class cannot become non-const: Library:'package:tintuc/caidat/login/screen_sign.dart' Class: ScreenSign.\n","source":{"name":"Const","path":"D:\\Flutter\\tintuc\\Const"}},"event":"output"}
[12:18:02 PM] [DAP] [Info] <== {"seq":486,"type":"event","body":{"category":"stderr","output":"Try performing a hot restart instead.\n","source":{"name":"Try","path":"D:\\Flutter\\tintuc\\Try"}},"event":"output"}
[12:18:02 PM] [DAP] [Info] <== {"seq":487,"type":"event","body":{"category":"stderr","output":""},"event":"output"}
[12:18:02 PM] [DAP] [Info] <== {"seq":488,"type":"event","body":{"progressId":"hotReload_7"},"event":"dart.progressEnd"}
[12:18:02 PM] [DAP] [Info] <== {"seq":489,"type":"response","command":"hotReload","request_seq":17,"success":true}
[12:18:02 PM] [DAP] [Info] <== {"seq":490,"type":"event","body":{"progressId":"hotReload_8"},"event":"dart.progressEnd"}
[12:18:02 PM] [DAP] [Info] <== {"seq":491,"type":"response","command":"hotReload","request_seq":18,"success":true}
[12:18:07 PM] [DAP] [Info] <== {"seq":492,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=6834.30ms min=1.26ms max=88804.83ms count=13\n"},"event":"output"}
[12:18:10 PM] [DAP] [Info] ==> {"command":"restart","arguments":{"arguments":{"dartCodeDebugSessionID":"session-2402c","type":"dart","request":"launch","program":"D:\\Flutter\\tintuc\\lib\\main.dart","projectRootPath":"D:\\Flutter\\tintuc","cwd":"D:\\Flutter\\tintuc","name":"Flutter (Pixel 6 Pro API 33)","deviceId":"emulator-5554","deviceName":"Pixel 6 Pro API 33 (android-x64)","toolEnv":{"FLUTTER_HOST":"VSCode","PUB_ENVIRONMENT":"vscode.dart-code","FLUTTER_ROOT":"C:\\src\\flutter"},"sendLogsToClient":false,"sendCustomProgressEvents":true,"allowAnsiColorOutput":true,"additionalProjectPaths":["D:\\Flutter\\tintuc"],"args":[],"vmAdditionalArgs":[],"toolArgs":["-d","emulator-5554","--devtools-server-address","http://127.0.0.1:9100/"],"vmServicePort":0,"dartSdkPath":"C:\\src\\flutter\\bin\\cache\\dart-sdk","vmServiceLogFile":"D:\\Flutter\\tintuc\\logs\\observatory.txt","maxLogLineLength":2000,"dartTestLogFile":"D:\\Flutter\\tintuc\\logs\\dart_test.txt","debugSdkLibraries":true,"debugExternalPackageLibraries":true,"showDartDeveloperLogs":true,"evaluateGettersInDebugViews":true,"showGettersInDebugViews":true,"evaluateToStringInDebugViews":true,"flutterSdkPath":"C:\\src\\flutter","useInspectorNotificationsForWidgetErrors":true,"flutterRunLogFile":"D:\\Flutter\\tintuc\\logs\\flutter_run.txt","flutterTestLogFile":"D:\\Flutter\\tintuc\\logs\\flutter_test.txt","showMemoryUsage":false,"debuggerType":2,"__sessionId":"454e343a-54f3-4faf-a91b-9ec4fc428a33"}},"type":"request","seq":19}
[12:18:10 PM] [DAP] [Info] <== {"seq":493,"type":"event","body":{"message":"Hot restarting…","progressId":"hotRestart_9","title":"Flutter"},"event":"dart.progressStart"}
[12:18:12 PM] [DAP] [Info] <== {"seq":494,"type":"event","body":{"reason":"exited","threadId":1997853505607347},"event":"thread"}
[12:18:12 PM] [DAP] [Info] <== {"seq":495,"type":"event","body":{"reason":"started","threadId":1691770061380783},"event":"thread"}
[12:18:12 PM] [DAP] [Info] <== {"seq":496,"type":"event","body":{"category":"stdout","output":"Restarted application in 2.155ms.\n"},"event":"output"}
[12:18:12 PM] [DAP] [Info] <== {"seq":497,"type":"event","body":{"progressId":"hotRestart_9"},"event":"dart.progressEnd"}
[12:18:12 PM] [DAP] [Info] <== {"seq":498,"type":"response","command":"restart","request_seq":19,"success":true}
[12:18:12 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":20}
[12:18:12 PM] [DAP] [Info] <== {"seq":499,"type":"response","body":{"threads":[{"id":1691770061380783,"name":"main"}]},"command":"threads","request_seq":20,"success":true}
[12:18:12 PM] [DAP] [Info] <== {"seq":500,"type":"event","body":{"extensionRPC":"ext.ui.window.scheduleFrame","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":501,"type":"event","body":{"extensionRPC":"ext.ui.window.reinitializeShader","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":502,"type":"event","body":{"extensionRPC":"ext.ui.window.impellerEnabled","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":503,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpEnableTimelineLogging","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":504,"type":"event","body":{"extensionRPC":"ext.dart.io.setHttpEnableTimelineLogging","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":505,"type":"event","body":{"extensionRPC":"ext.dart.io.httpEnableTimelineLogging","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":506,"type":"event","body":{"extensionRPC":"ext.dart.io.getSocketProfile","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":507,"type":"event","body":{"extensionRPC":"ext.dart.io.startSocketProfiling","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":508,"type":"event","body":{"extensionRPC":"ext.dart.io.pauseSocketProfiling","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":509,"type":"event","body":{"extensionRPC":"ext.dart.io.socketProfilingEnabled","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":510,"type":"event","body":{"extensionRPC":"ext.dart.io.clearSocketProfile","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":511,"type":"event","body":{"extensionRPC":"ext.dart.io.getVersion","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":512,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfile","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":513,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfileRequest","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":514,"type":"event","body":{"extensionRPC":"ext.dart.io.clearHttpProfile","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":515,"type":"event","body":{"extensionRPC":"ext.flutter.reassemble","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":516,"type":"event","body":{"extensionRPC":"ext.flutter.exit","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":517,"type":"event","body":{"extensionRPC":"ext.flutter.connectedVmServiceUri","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":518,"type":"event","body":{"extensionRPC":"ext.flutter.activeDevToolsServerAddress","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":519,"type":"event","body":{"extensionRPC":"ext.flutter.platformOverride","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":520,"type":"event","body":{"extensionRPC":"ext.flutter.brightnessOverride","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":521,"type":"event","body":{"extensionRPC":"ext.flutter.timeDilation","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":522,"type":"event","body":{"extensionRPC":"ext.flutter.evict","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":523,"type":"event","body":{"extensionRPC":"ext.flutter.invertOversizedImages","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":524,"type":"event","body":{"extensionRPC":"ext.flutter.debugPaint","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":525,"type":"event","body":{"extensionRPC":"ext.flutter.debugPaintBaselinesEnabled","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":526,"type":"event","body":{"extensionRPC":"ext.flutter.repaintRainbow","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":527,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpLayerTree","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":528,"type":"event","body":{"extensionRPC":"ext.flutter.debugDisableClipLayers","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":529,"type":"event","body":{"extensionRPC":"ext.flutter.debugDisablePhysicalShapeLayers","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":530,"type":"event","body":{"extensionRPC":"ext.flutter.debugDisableOpacityLayers","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":531,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpRenderTree","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":532,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpSemanticsTreeInTraversalOrder","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":533,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpSemanticsTreeInInverseHitTestOrder","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":534,"type":"event","body":{"extensionRPC":"ext.flutter.profileRenderObjectPaints","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":535,"type":"event","body":{"extensionRPC":"ext.flutter.profileRenderObjectLayouts","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":536,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpApp","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":537,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpFocusTree","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":538,"type":"event","body":{"extensionRPC":"ext.flutter.showPerformanceOverlay","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":539,"type":"event","body":{"extensionRPC":"ext.flutter.didSendFirstFrameEvent","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":540,"type":"event","body":{"extensionRPC":"ext.flutter.didSendFirstFrameRasterizedEvent","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":541,"type":"event","body":{"extensionRPC":"ext.flutter.profileWidgetBuilds","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":542,"type":"event","body":{"extensionRPC":"ext.flutter.profileUserWidgetBuilds","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":543,"type":"event","body":{"extensionRPC":"ext.flutter.debugAllowBanner","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":544,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.structuredErrors","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":545,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.show","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":546,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.trackRebuildDirtyWidgets","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":547,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.trackRepaintWidgets","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":548,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.disposeAllGroups","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":549,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.disposeGroup","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":550,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.isWidgetTreeReady","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":551,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.disposeId","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":552,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setPubRootDirectories","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":553,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.addPubRootDirectories","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":554,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.removePubRootDirectories","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":555,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getPubRootDirectories","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":556,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setSelectionById","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":557,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getParentChain","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":558,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getProperties","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":559,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getChildren","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":560,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getChildrenSummaryTree","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":561,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getChildrenDetailsSubtree","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":562,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getRootWidget","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":563,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getRootWidgetSummaryTree","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":564,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getRootWidgetSummaryTreeWithPreviews","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":565,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getDetailsSubtree","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":566,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getSelectedWidget","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":567,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getSelectedSummaryWidget","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":568,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.isWidgetCreationTracked","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":569,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.screenshot","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":570,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getLayoutExplorerNode","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":571,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setFlexFit","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":572,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setFlexFactor","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:12 PM] [DAP] [Info] <== {"seq":573,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setFlexProperties","isolateId":"isolates/1691770061380783"},"event":"dart.serviceExtensionAdded"}
[12:18:13 PM] [DAP] [Info] <== {"seq":574,"type":"event","body":{"category":"stdout","output":"D/FRCPlugin( 4955): Sending fetchTimeout: 60\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":575,"type":"event","body":{"extension":"ext.flutter.activeDevToolsServerAddress","value":"http://127.0.0.1:9100"},"event":"flutter.serviceExtensionStateChanged"}
[12:18:13 PM] [DAP] [Info] <== {"seq":576,"type":"event","body":{"extension":"ext.flutter.connectedVmServiceUri","value":"http://127.0.0.1:53603/cU7S4XWchKU=/"},"event":"flutter.serviceExtensionStateChanged"}
[12:18:13 PM] [DAP] [Info] ==> {"command":"callService","arguments":{"method":"ext.flutter.inspector.setPubRootDirectories","params":{"isolateId":"isolates/1691770061380783","arg0":"file:///D:/Flutter/tintuc"}},"type":"request","seq":21}
[12:18:13 PM] [DAP] [Info] <== {"seq":577,"type":"event","body":{"category":"stdout","output":"I/ExoPlayerImpl( 4955): Release 87734eb [ExoPlayerLib/2.18.7] [emu64xa, sdk_gphone_x86_64, Google, 33] [goog.exo.core, goog.exo.exoplayer, goog.exo.decoder, goog.exo.datasource, goog.exo.extractor]\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":578,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-0](id:135b00000002,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":579,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-0](id:135b00000002,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":580,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-0](id:135b00000002,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":581,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-0](id:135b00000002,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":582,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-0](id:135b00000002,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":583,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-0](id:135b00000002,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":584,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-0](id:135b00000002,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":585,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-0](id:135b00000002,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":586,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-0](id:135b00000002,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":587,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-0](id:135b00000002,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":588,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-0](id:135b00000002,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":589,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-0](id:135b00000002,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":590,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-0](id:135b00000002,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":591,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-0](id:135b00000002,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":592,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-0](id:135b00000002,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":593,"type":"event","body":{"category":"stdout","output":"D/MediaCodec( 4955): keep callback message for reclaim\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":594,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 4955): query failed after returning 12 values (BAD_INDEX)\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":595,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is   c2::u32 coded.vui.color.matrix = 1\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":596,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.vui.color.primaries = 1\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":597,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.vui.color.transfer = 3\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":598,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1342179345.\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":599,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 2415921170.\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":600,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1610614798.\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":601,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): bufferpool2 0x7dc3144001f8 : 1(6291456 size) total buffers - 1(6291456 size) used buffers - 13/20 (recycle/alloc) - 6/19 (fetch/transfer)\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":602,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955): [c2.android.aac.decoder#707:1D-Output.Impl[N]] Client returned a buffer it does not own according to our record: 0\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":603,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955): [c2.android.aac.decoder#707:1D-Output.Impl[N]] Client returned a buffer it does not own according to our record: 1\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":604,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955): [c2.android.aac.decoder#707:1D-Output.Impl[N]] Client returned a buffer it does not own according to our record: 2\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":605,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955): [c2.android.aac.decoder#707:1D-Output.Impl[N]] Client returned a buffer it does not own according to our record: 3\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":606,"type":"event","body":{"category":"stdout","output":"D/MediaCodec( 4955): keep callback message for reclaim\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":607,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 4955): query failed after returning 20 values (BAD_INDEX)\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":608,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1342179345.\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":609,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 2415921170.\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":610,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1610614798.\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":611,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): bufferpool2 0x7dc314442c08 : 1(8192 size) total buffers - 1(8192 size) used buffers - 22/28 (recycle/alloc) - 5/27 (fetch/transfer)\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":612,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 4955): connecting to surface 0x7dc3b43b4010, reason connectToSurface\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":613,"type":"event","body":{"category":"stdout","output":"I/MediaCodec( 4955): [c2.goldfish.h264.decoder] setting surface generation to 5073922\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":614,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 4955): disconnecting from surface 0x7dc3b43b4010, reason connectToSurface(reconnect)\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":615,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 4955): connecting to surface 0x7dc3b43b4010, reason connectToSurface(reconnect)\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":616,"type":"event","body":{"category":"stdout","output":"D/Codec2-OutputBufferQueue( 4955): remote graphic buffer migration 0/0\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":617,"type":"event","body":{"category":"stdout","output":"D/Codec2Client( 4955): setOutputSurface -- failed to set consumer usage (6/BAD_INDEX)\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":618,"type":"event","body":{"category":"stdout","output":"D/Codec2Client( 4955): setOutputSurface -- generation=5073922 consumer usage=0x900\n"},"event":"output"}
[12:18:13 PM] [DAP] [Info] <== {"seq":619,"type":"event","body":{"category":"stdout","output":"D/Codec2Client( 4955): Surface configure completed\n"},"event":"output"}
[12:18:14 PM] [DAP] [Info] <== {"seq":620,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 4955): disconnecting from surface 0x7dc3b4440830, reason disconnectFromSurface\n"},"event":"output"}
[12:18:14 PM] [DAP] [Info] <== {"seq":621,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#908] MediaCodec discarded an unknown buffer\n"},"event":"output"}
[12:18:14 PM] [DAP] [Info] <== {"seq":622,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#908] MediaCodec discarded an unknown buffer\n"},"event":"output"}
[12:18:14 PM] [DAP] [Info] <== {"seq":623,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#908] MediaCodec discarded an unknown buffer\n"},"event":"output"}
[12:18:14 PM] [DAP] [Info] <== {"seq":624,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#908] MediaCodec discarded an unknown buffer\n"},"event":"output"}
[12:18:14 PM] [DAP] [Info] <== {"seq":625,"type":"event","body":{"category":"stdout","output":"I/hw-BpHwBinder( 4955): onLastStrongRef automatically unlinking death recipients\n"},"event":"output"}
[12:18:14 PM] [DAP] [Info] <== {"seq":626,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 4955): disconnecting from surface 0x7dc3b43b4010, reason disconnectFromSurface\n"},"event":"output"}
[12:18:14 PM] [DAP] [Info] <== {"seq":627,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.android.aac.decoder#707] MediaCodec discarded an unknown buffer\n"},"event":"output"}
[12:18:14 PM] [DAP] [Info] <== {"seq":628,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.android.aac.decoder#707] MediaCodec discarded an unknown buffer\n"},"event":"output"}
[12:18:14 PM] [DAP] [Info] <== {"seq":629,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.android.aac.decoder#707] MediaCodec discarded an unknown buffer\n"},"event":"output"}
[12:18:14 PM] [DAP] [Info] <== {"seq":630,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.android.aac.decoder#707] MediaCodec discarded an unknown buffer\n"},"event":"output"}
[12:18:14 PM] [DAP] [Info] <== {"seq":631,"type":"event","body":{"category":"stdout","output":"I/hw-BpHwBinder( 4955): onLastStrongRef automatically unlinking death recipients\n"},"event":"output"}
[12:18:14 PM] [DAP] [Info] <== {"seq":632,"type":"event","body":{"category":"stdout","output":"I/ExoPlayerImpl( 4955): Init 5bdfbb5 [ExoPlayerLib/2.18.7] [emu64xa, sdk_gphone_x86_64, Google, 33]\n"},"event":"output"}
[12:18:14 PM] [DAP] [Info] <== {"seq":633,"type":"event","body":{"category":"stdout","output":"W/DynamiteModule( 4955): Local module descriptor class for com.google.android.gms.providerinstaller.dynamite not found.\n"},"event":"output"}
[12:18:14 PM] [DAP] [Info] <== {"seq":634,"type":"event","body":{"category":"stdout","output":"I/DynamiteModule( 4955): Considering local module com.google.android.gms.providerinstaller.dynamite:0 and remote module com.google.android.gms.providerinstaller.dynamite:0\n"},"event":"output"}
[12:18:14 PM] [DAP] [Info] <== {"seq":635,"type":"event","body":{"category":"stdout","output":"W/ProviderInstaller( 4955): Failed to load providerinstaller module: No acceptable module com.google.android.gms.providerinstaller.dynamite found. Local version is 0 and remote version is 0.\n"},"event":"output"}
[12:18:14 PM] [DAP] [Info] <== {"seq":636,"type":"event","body":{"category":"stdout","output":"D/TrafficStats( 4955): tagSocket(138) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:18:14 PM] [DAP] [Info] <== {"seq":637,"type":"response","body":{"result":null,"type":"_extensionType","method":"ext.flutter.inspector.setPubRootDirectories"},"command":"callService","request_seq":21,"success":true}
[12:18:14 PM] [DAP] [Info] <== {"seq":638,"type":"event","body":{"category":"stdout","output":"D/TrafficStats( 4955): tagSocket(151) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:18:14 PM] [DAP] [Info] <== {"seq":639,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=377.97ms min=1.43ms max=6639.26ms count=18\n"},"event":"output"}
[12:18:15 PM] [DAP] [Info] <== {"seq":640,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:18:15 PM] [DAP] [Info] <== {"seq":641,"type":"event","body":{"category":"stdout","output":"D/TrafficStats( 4955): tagSocket(129) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:18:15 PM] [DAP] [Info] <== {"seq":642,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=16.72ms min=6.25ms max=73.45ms count=42\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":643,"type":"event","body":{"reason":"started","threadId":1627829716116843},"event":"thread"}
[12:18:16 PM] [DAP] [Info] <== {"seq":644,"type":"event","body":{"reason":"started","threadId":2096810629490899},"event":"thread"}
[12:18:16 PM] [DAP] [Info] <== {"seq":645,"type":"event","body":{"reason":"started","threadId":5251606028584783},"event":"thread"}
[12:18:16 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":22}
[12:18:16 PM] [DAP] [Info] <== {"seq":646,"type":"response","body":{"threads":[{"id":1691770061380783,"name":"main"},{"id":1627829716116843,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."},{"id":2096810629490899,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."},{"id":5251606028584783,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."}]},"command":"threads","request_seq":22,"success":true}
[12:18:16 PM] [DAP] [Info] <== {"seq":647,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpEnableTimelineLogging","isolateId":"isolates/1627829716116843"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":648,"type":"event","body":{"extensionRPC":"ext.dart.io.setHttpEnableTimelineLogging","isolateId":"isolates/1627829716116843"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":649,"type":"event","body":{"extensionRPC":"ext.dart.io.httpEnableTimelineLogging","isolateId":"isolates/1627829716116843"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":650,"type":"event","body":{"extensionRPC":"ext.dart.io.getSocketProfile","isolateId":"isolates/1627829716116843"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":651,"type":"event","body":{"extensionRPC":"ext.dart.io.startSocketProfiling","isolateId":"isolates/1627829716116843"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":652,"type":"event","body":{"extensionRPC":"ext.dart.io.pauseSocketProfiling","isolateId":"isolates/1627829716116843"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":653,"type":"event","body":{"extensionRPC":"ext.dart.io.socketProfilingEnabled","isolateId":"isolates/1627829716116843"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":654,"type":"event","body":{"extensionRPC":"ext.dart.io.clearSocketProfile","isolateId":"isolates/1627829716116843"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":655,"type":"event","body":{"extensionRPC":"ext.dart.io.getVersion","isolateId":"isolates/1627829716116843"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":656,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfile","isolateId":"isolates/1627829716116843"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":657,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfileRequest","isolateId":"isolates/1627829716116843"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":658,"type":"event","body":{"extensionRPC":"ext.dart.io.clearHttpProfile","isolateId":"isolates/1627829716116843"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":659,"type":"event","body":{"reason":"exited","threadId":1627829716116843},"event":"thread"}
[12:18:16 PM] [DAP] [Info] <== {"seq":660,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpEnableTimelineLogging","isolateId":"isolates/2096810629490899"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":661,"type":"event","body":{"extensionRPC":"ext.dart.io.setHttpEnableTimelineLogging","isolateId":"isolates/2096810629490899"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":662,"type":"event","body":{"extensionRPC":"ext.dart.io.httpEnableTimelineLogging","isolateId":"isolates/2096810629490899"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":663,"type":"event","body":{"extensionRPC":"ext.dart.io.getSocketProfile","isolateId":"isolates/2096810629490899"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":664,"type":"event","body":{"extensionRPC":"ext.dart.io.startSocketProfiling","isolateId":"isolates/2096810629490899"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":665,"type":"event","body":{"extensionRPC":"ext.dart.io.pauseSocketProfiling","isolateId":"isolates/2096810629490899"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":666,"type":"event","body":{"extensionRPC":"ext.dart.io.socketProfilingEnabled","isolateId":"isolates/2096810629490899"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":667,"type":"event","body":{"extensionRPC":"ext.dart.io.clearSocketProfile","isolateId":"isolates/2096810629490899"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":668,"type":"event","body":{"extensionRPC":"ext.dart.io.getVersion","isolateId":"isolates/2096810629490899"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":669,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfile","isolateId":"isolates/2096810629490899"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":670,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfileRequest","isolateId":"isolates/2096810629490899"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":671,"type":"event","body":{"extensionRPC":"ext.dart.io.clearHttpProfile","isolateId":"isolates/2096810629490899"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":672,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpEnableTimelineLogging","isolateId":"isolates/5251606028584783"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":673,"type":"event","body":{"extensionRPC":"ext.dart.io.setHttpEnableTimelineLogging","isolateId":"isolates/5251606028584783"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":674,"type":"event","body":{"extensionRPC":"ext.dart.io.httpEnableTimelineLogging","isolateId":"isolates/5251606028584783"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":675,"type":"event","body":{"extensionRPC":"ext.dart.io.getSocketProfile","isolateId":"isolates/5251606028584783"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":676,"type":"event","body":{"extensionRPC":"ext.dart.io.startSocketProfiling","isolateId":"isolates/5251606028584783"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":677,"type":"event","body":{"extensionRPC":"ext.dart.io.pauseSocketProfiling","isolateId":"isolates/5251606028584783"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":678,"type":"event","body":{"extensionRPC":"ext.dart.io.socketProfilingEnabled","isolateId":"isolates/5251606028584783"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":679,"type":"event","body":{"extensionRPC":"ext.dart.io.clearSocketProfile","isolateId":"isolates/5251606028584783"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":680,"type":"event","body":{"extensionRPC":"ext.dart.io.getVersion","isolateId":"isolates/5251606028584783"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":681,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfile","isolateId":"isolates/5251606028584783"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":682,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfileRequest","isolateId":"isolates/5251606028584783"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":683,"type":"event","body":{"extensionRPC":"ext.dart.io.clearHttpProfile","isolateId":"isolates/5251606028584783"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":684,"type":"event","body":{"reason":"exited","threadId":2096810629490899},"event":"thread"}
[12:18:16 PM] [DAP] [Info] <== {"seq":685,"type":"event","body":{"reason":"started","threadId":6112258488277475},"event":"thread"}
[12:18:16 PM] [DAP] [Info] <== {"seq":686,"type":"event","body":{"reason":"exited","threadId":5251606028584783},"event":"thread"}
[12:18:16 PM] [DAP] [Info] <== {"seq":687,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpEnableTimelineLogging","isolateId":"isolates/6112258488277475"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":688,"type":"event","body":{"extensionRPC":"ext.dart.io.setHttpEnableTimelineLogging","isolateId":"isolates/6112258488277475"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":689,"type":"event","body":{"extensionRPC":"ext.dart.io.httpEnableTimelineLogging","isolateId":"isolates/6112258488277475"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":690,"type":"event","body":{"extensionRPC":"ext.dart.io.getSocketProfile","isolateId":"isolates/6112258488277475"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":691,"type":"event","body":{"extensionRPC":"ext.dart.io.startSocketProfiling","isolateId":"isolates/6112258488277475"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":692,"type":"event","body":{"extensionRPC":"ext.dart.io.pauseSocketProfiling","isolateId":"isolates/6112258488277475"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":693,"type":"event","body":{"extensionRPC":"ext.dart.io.socketProfilingEnabled","isolateId":"isolates/6112258488277475"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":694,"type":"event","body":{"extensionRPC":"ext.dart.io.clearSocketProfile","isolateId":"isolates/6112258488277475"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":695,"type":"event","body":{"extensionRPC":"ext.dart.io.getVersion","isolateId":"isolates/6112258488277475"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":696,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfile","isolateId":"isolates/6112258488277475"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":697,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfileRequest","isolateId":"isolates/6112258488277475"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] <== {"seq":698,"type":"event","body":{"extensionRPC":"ext.dart.io.clearHttpProfile","isolateId":"isolates/6112258488277475"},"event":"dart.serviceExtensionAdded"}
[12:18:16 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":23}
[12:18:16 PM] [DAP] [Info] <== {"seq":699,"type":"response","body":{"threads":[{"id":1691770061380783,"name":"main"},{"id":6112258488277475,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."}]},"command":"threads","request_seq":23,"success":true}
[12:18:16 PM] [DAP] [Info] <== {"seq":700,"type":"event","body":{"category":"stdout","output":"I/DMCodecAdapterFactory( 4955): Creating an asynchronous MediaCodec adapter for track type video\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":701,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): allocate(c2.goldfish.h264.decoder)\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":702,"type":"event","body":{"category":"stdout","output":"I/CCodec  ( 4955): setting up 'default' as default (vendor) store\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":703,"type":"event","body":{"category":"stdout","output":"I/CCodec  ( 4955): Created component [c2.goldfish.h264.decoder]\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":704,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): read media type: video/avc\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":705,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: algo.buffers.max-count.values\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":706,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: output.subscribed-indices.values\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":707,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: input.buffers.allocator-ids.values\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":708,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: output.buffers.allocator-ids.values\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":709,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: algo.buffers.allocator-ids.values\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":710,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: output.buffers.pool-ids.values\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":711,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: algo.buffers.pool-ids.values\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":712,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): ignored struct field coded.color-format.locations\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":713,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): ignoring local param raw.size (0xd2001800) as it is already supported\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":714,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): ignoring local param default.color (0x5200180b) as it is already supported\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":715,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): ignored struct field raw.hdr-static-info.mastering\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":716,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 4955): query failed after returning 12 values (BAD_INDEX)\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":717,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is Dict {\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":718,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.pl.level = 20496\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":719,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.pl.profile = 20481\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":720,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.vui.color.matrix = 0\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":721,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.vui.color.primaries = 0\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":722,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.vui.color.range = 2\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":723,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.vui.color.transfer = 0\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":724,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 default.color.matrix = 0\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":725,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 default.color.primaries = 0\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":726,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 default.color.range = 0\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":727,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 default.color.transfer = 0\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":728,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 input.buffers.max-size.value = 6291456\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":729,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 input.delay.value = 0\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":730,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   string input.media-type.value = \"video/avc\"\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":731,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 output.delay.value = 8\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":732,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   string output.media-type.value = \"video/raw\"\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":733,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.color.matrix = 0\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":734,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.color.primaries = 0\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":735,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.color.range = 2\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":736,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.color.transfer = 0\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":737,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.max-size.height = 240\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":738,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.max-size.width = 320\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":739,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.pixel-format.value = 35\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":740,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::i32 raw.rotation.flip = 0\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":741,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::i32 raw.rotation.value = 0\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":742,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.sar.height = 1\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":743,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.sar.width = 1\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":744,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.size.height = 240\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":745,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.size.width = 320\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":746,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2:\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":747,"type":"event","body":{"category":"stdout","output":"W/ColorUtils( 4955): expected specified color aspects (2:0:0:0)\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":748,"type":"event","body":{"category":"stdout","output":"I/MediaCodec( 4955): MediaCodec will operate in async mode\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":749,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 4955): connecting to surface 0x7dc3b43f3df0, reason connectToSurface\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":750,"type":"event","body":{"category":"stdout","output":"I/MediaCodec( 4955): [c2.goldfish.h264.decoder] setting surface generation to 5073923\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":751,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 4955): disconnecting from surface 0x7dc3b43f3df0, reason connectToSurface(reconnect)\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":752,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 4955): connecting to surface 0x7dc3b43f3df0, reason connectToSurface(reconnect)\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":753,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): [c2.goldfish.h264.decoder] buffers are bound to CCodec for this session\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":754,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): no c2 equivalents for csd-1\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":755,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): no c2 equivalents for log-session-id\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":756,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): no c2 equivalents for native-window\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":757,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): no c2 equivalents for flags\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":758,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): config failed => CORRUPTED\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":759,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is   c2::u32 raw.max-size.height = 720\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":760,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.max-size.width = 1280\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":761,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.size.height = 720\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":762,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.size.width = 1280\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":763,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1107298332.\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":764,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): client requested max input size 219813, which is smaller than what component recommended (6291456); overriding with component recommendation.\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":765,"type":"event","body":{"category":"stdout","output":"W/CCodec  ( 4955): This behavior is subject to change. It is recommended that app developers double check whether the requested max input size is in reasonable range.\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":766,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): encoding statistics level = 0\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":767,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): setup formats input: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":768,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t height = 720\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":769,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t level = 65536\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":770,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t max-input-size = 6291456\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":771,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   string mime = \"video/avc\"\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":772,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t profile = 65536\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":773,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t width = 1280\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":774,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   Rect crop(0, 0, 1279, 719)\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":775,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): }\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":776,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): setup formats output: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":777,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t android._color-format = 2135033992\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":778,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t android._video-scaling = 1\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":779,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t rotation-degrees = 0\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":780,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t color-standard = 1\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":781,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t color-range = 2\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":782,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t color-transfer = 3\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":783,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t sar-height = 1\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":784,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t sar-width = 1\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":785,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   Rect crop(0, 0, 1279, 719)\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":786,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t width = 1280\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":787,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t height = 720\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":788,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t max-height = 720\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":789,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t max-width = 1280\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":790,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   string mime = \"video/raw\"\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":791,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t android._dataspace = 260\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":792,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t color-format = 2130708361\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":793,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): }\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":794,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 4955): query failed after returning 12 values (BAD_INDEX)\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":795,"type":"event","body":{"category":"stdout","output":"D/MediaCodec( 4955): keep callback message for reclaim\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":796,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1342179345.\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":797,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 2415921170.\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":798,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1610614798.\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":799,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 2684356609.\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":800,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#318] Created input block pool with allocatorID 16 => poolID 19 - OK (0)\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":801,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#318] Query output surface allocator returned 0 params => BAD_INDEX (6)\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":802,"type":"event","body":{"category":"stdout","output":"I/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#318] Created output block pool with allocatorID 18 => poolID 18 - OK\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":803,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#318] Configured output block pool ids 18 => OK\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":804,"type":"event","body":{"category":"stdout","output":"D/Codec2-OutputBufferQueue( 4955): remote graphic buffer migration 0/0\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":805,"type":"event","body":{"category":"stdout","output":"D/Codec2Client( 4955): setOutputSurface -- failed to set consumer usage (6/BAD_INDEX)\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":806,"type":"event","body":{"category":"stdout","output":"D/Codec2Client( 4955): setOutputSurface -- generation=5073923 consumer usage=0x900\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":807,"type":"event","body":{"category":"stdout","output":"D/Codec2Client( 4955): Surface configure completed\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":808,"type":"event","body":{"category":"stdout","output":"I/DMCodecAdapterFactory( 4955): Creating an asynchronous MediaCodec adapter for track type audio\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":809,"type":"event","body":{"reason":"exited","threadId":6112258488277475},"event":"thread"}
[12:18:16 PM] [DAP] [Info] <== {"seq":810,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): allocate(c2.android.aac.decoder)\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":811,"type":"event","body":{"category":"stdout","output":"I/CCodec  ( 4955): setting up 'default' as default (vendor) store\n"},"event":"output"}
[12:18:16 PM] [DAP] [Info] <== {"seq":812,"type":"event","body":{"category":"stdout","output":"I/CCodec  ( 4955): Created component [c2.android.aac.decoder]\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":813,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): read media type: audio/mp4a-latm\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":814,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: algo.buffers.max-count.values\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":815,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: output.subscribed-indices.values\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":816,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: input.buffers.allocator-ids.values\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":817,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: output.buffers.allocator-ids.values\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":818,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: algo.buffers.allocator-ids.values\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":819,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: output.buffers.pool-ids.values\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":820,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: algo.buffers.pool-ids.values\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":821,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 4955): query failed after returning 20 values (BAD_INDEX)\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":822,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is Dict {\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":823,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.aac-packaging.value = 0\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":824,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.bitrate.value = 64000\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":825,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.pl.level = 0\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":826,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.pl.profile = 8192\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":827,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::i32 coding.drc.album-mode.value = 0\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":828,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::float coding.drc.attenuation-factor.value = 1\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":829,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::float coding.drc.boost-factor.value = 1\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":830,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::i32 coding.drc.compression-mode.value = 3\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":831,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::i32 coding.drc.effect-type.value = 3\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":832,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::float coding.drc.encoded-level.value = 0.25\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":833,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::float coding.drc.reference-level.value = -16\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":834,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 input.buffers.max-size.value = 8192\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":835,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 input.delay.value = 0\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":836,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   string input.media-type.value = \"audio/mp4a-latm\"\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":837,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 output.delay.value = 2\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":838,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::float output.drc.output-loudness.value = 0.25\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":839,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   string output.media-type.value = \"audio/raw\"\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":840,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.channel-count.value = 1\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":841,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.channel-mask.value = 0\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":842,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.max-channel-count.value = 8\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":843,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.sample-rate.value = 44100\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":844,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): }\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":845,"type":"event","body":{"category":"stdout","output":"I/MediaCodec( 4955): MediaCodec will operate in async mode\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":846,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): [c2.android.aac.decoder] buffers are bound to CCodec for this session\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":847,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): no c2 equivalents for log-session-id\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":848,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): no c2 equivalents for flags\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":849,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): config failed => CORRUPTED\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":850,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is   c2::u32 raw.channel-count.value = 2\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":851,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1107298332.\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":852,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): client requested max input size 623, which is smaller than what component recommended (8192); overriding with component recommendation.\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":853,"type":"event","body":{"category":"stdout","output":"W/CCodec  ( 4955): This behavior is subject to change. It is recommended that app developers double check whether the requested max input size is in reasonable range.\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":854,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): encoding statistics level = 0\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":855,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): setup formats input: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":856,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-album-mode = 0\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":857,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-boost-level = 127\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":858,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-cut-level = 127\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":859,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-effect-type = 3\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":860,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-encoded-target-level = -1\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":861,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-max-output-channel_count = 8\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":862,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-target-ref-level = 64\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":863,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t bitrate = 64000\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":864,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t channel-count = 2\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":865,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t channel-mask = 0\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":866,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t level = 0\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":867,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t max-input-size = 8192\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":868,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t max-output-channel-count = 8\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":869,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   string mime = \"audio/mp4a-latm\"\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":870,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t profile = 2\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":871,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t sample-rate = 44100\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":872,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): }\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":873,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): setup formats output: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":874,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-album-mode = 0\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":875,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-boost-level = 127\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":876,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-cut-level = 127\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":877,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-effect-type = 3\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":878,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-output-loudness = -1\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":879,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-encoded-target-level = -1\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":880,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-max-output-channel_count = 8\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":881,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-target-ref-level = 64\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":882,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t channel-count = 2\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":883,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t channel-mask = 0\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":884,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t max-output-channel-count = 8\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":885,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   string mime = \"audio/raw\"\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":886,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t sample-rate = 44100\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":887,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t android._config-pcm-encoding = 2\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":888,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): }\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":889,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 4955): query failed after returning 20 values (BAD_INDEX)\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":890,"type":"event","body":{"category":"stdout","output":"D/MediaCodec( 4955): keep callback message for reclaim\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":891,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1342179345.\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":892,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 2415921170.\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":893,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1610614798.\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":894,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.android.aac.decoder#885] Created input block pool with allocatorID 16 => poolID 20 - OK (0)\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":895,"type":"event","body":{"category":"stdout","output":"I/CCodecBufferChannel( 4955): [c2.android.aac.decoder#885] Created output block pool with allocatorID 16 => poolID 27 - OK\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":896,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.android.aac.decoder#885] Configured output block pool ids 27 => OK\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":897,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=31.32ms min=2.81ms max=556.28ms count=38\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":898,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is   c2::u32 raw.channel-mask.value = 12\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":899,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955): [c2.android.aac.decoder#885:Output[N]] popFromStashAndRegister: at 1000000000000us, output format changed to AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":900,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-drc-album-mode = 0\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":901,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-drc-boost-level = 127\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":902,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-drc-cut-level = 127\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":903,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-drc-effect-type = 3\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":904,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-drc-output-loudness = -1\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":905,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-encoded-target-level = -1\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":906,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-max-output-channel_count = 8\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":907,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-target-ref-level = 64\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":908,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t channel-count = 2\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":909,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t channel-mask = 12\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":910,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t max-output-channel-count = 8\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":911,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   string mime = \"audio/raw\"\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":912,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t sample-rate = 44100\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":913,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t android._config-pcm-encoding = 2\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":914,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955): }\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":915,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is   c2::u32 raw.color.matrix = 1\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":916,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.color.primaries = 1\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":917,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.color.transfer = 3\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":918,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.crop.height = 720\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":919,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.crop.left = 0\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":920,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.crop.top = 0\n"},"event":"output"}
[12:18:17 PM] [DAP] [Info] <== {"seq":921,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.crop.width = 1280\n"},"event":"output"}
[12:18:18 PM] [DAP] [Info] <== {"seq":922,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=372.00ms min=38.47ms max=647.88ms count=4\n"},"event":"output"}
[12:18:18 PM] [DAP] [Info] <== {"seq":923,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): bufferpool2 0x7dc3144001f8 : 0(0 size) total buffers - 0(0 size) used buffers - 13/23 (recycle/alloc) - 6/19 (fetch/transfer)\n"},"event":"output"}
[12:18:18 PM] [DAP] [Info] <== {"seq":924,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): evictor expired: 1, evicted: 1\n"},"event":"output"}
[12:18:19 PM] [DAP] [Info] <== {"seq":925,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=116.64ms min=40.92ms max=518.55ms count=9\n"},"event":"output"}
[12:18:19 PM] [DAP] [Info] <== {"seq":926,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): bufferpool2 0x7dc314442c08 : 0(0 size) total buffers - 0(0 size) used buffers - 22/32 (recycle/alloc) - 5/27 (fetch/transfer)\n"},"event":"output"}
[12:18:19 PM] [DAP] [Info] <== {"seq":927,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): evictor expired: 1, evicted: 1\n"},"event":"output"}
[12:18:20 PM] [DAP] [Info] <== {"seq":928,"type":"event","body":{"category":"stdout","output":"W/OnBackInvokedCallback( 4955): OnBackInvokedCallback is not enabled for the application.\n"},"event":"output"}
[12:18:20 PM] [DAP] [Info] <== {"seq":929,"type":"event","body":{"category":"stdout","output":"W/OnBackInvokedCallback( 4955): Set 'android:enableOnBackInvokedCallback=\"true\"' in the application manifest.\n"},"event":"output"}
[12:18:22 PM] [DAP] [Info] <== {"seq":930,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): bufferpool2 0x7dc3143b7478 : 5(40960 size) total buffers - 0(0 size) used buffers - 20/25 (recycle/alloc) - 5/25 (fetch/transfer)\n"},"event":"output"}
[12:18:22 PM] [DAP] [Info] <== {"seq":931,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): evictor expired: 1, evicted: 1\n"},"event":"output"}
[12:18:23 PM] [DAP] [Info] <== {"seq":932,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): bufferpool2 0x7dc3143ed9f8 : 5(31457280 size) total buffers - 0(0 size) used buffers - 14/19 (recycle/alloc) - 5/19 (fetch/transfer)\n"},"event":"output"}
[12:18:23 PM] [DAP] [Info] <== {"seq":933,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): evictor expired: 1, evicted: 1\n"},"event":"output"}
[12:18:32 PM] [DAP] [Info] <== {"seq":934,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=1018.71ms min=10.68ms max=12340.68ms count=13\n"},"event":"output"}
[12:18:59 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":24}
[12:18:59 PM] [DAP] [Info] <== {"seq":935,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_10","title":"Flutter"},"event":"dart.progressStart"}
[12:19:00 PM] [DAP] [Info] <== {"seq":936,"type":"event","body":{"category":"stdout","output":"Reloaded 1 of 1164 libraries in 852ms (compile: 31 ms, reload: 234 ms, reassemble: 528 ms).\n"},"event":"output"}
[12:19:00 PM] [DAP] [Info] <== {"seq":937,"type":"event","body":{"progressId":"hotReload_10"},"event":"dart.progressEnd"}
[12:19:00 PM] [DAP] [Info] <== {"seq":938,"type":"response","command":"hotReload","request_seq":24,"success":true}
[12:19:00 PM] [DAP] [Info] <== {"seq":939,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=1230.41ms min=3.10ms max=26739.57ms count=22\n"},"event":"output"}
[12:19:00 PM] [DAP] [Info] <== {"seq":940,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:19:13 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":25}
[12:19:13 PM] [DAP] [Info] <== {"seq":941,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_11","title":"Flutter"},"event":"dart.progressStart"}
[12:19:14 PM] [DAP] [Info] <== {"seq":942,"type":"event","body":{"category":"stdout","output":"Reloaded 1 of 1164 libraries in 819ms (compile: 28 ms, reload: 221 ms, reassemble: 514 ms).\n"},"event":"output"}
[12:19:14 PM] [DAP] [Info] <== {"seq":943,"type":"event","body":{"progressId":"hotReload_11"},"event":"dart.progressEnd"}
[12:19:14 PM] [DAP] [Info] <== {"seq":944,"type":"response","command":"hotReload","request_seq":25,"success":true}
[12:19:14 PM] [DAP] [Info] <== {"seq":945,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=7253.92ms min=285.91ms max=14221.92ms count=2\n"},"event":"output"}
[12:19:15 PM] [DAP] [Info] <== {"seq":946,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:19:16 PM] [DAP] [Info] ==> {"command":"hotReload","type":"request","seq":26}
[12:19:16 PM] [DAP] [Info] <== {"seq":947,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_12","title":"Flutter"},"event":"dart.progressStart"}
[12:19:16 PM] [DAP] [Info] <== {"seq":948,"type":"event","body":{"category":"stdout","output":"Reloaded 0 libraries in 334ms (compile: 9 ms, reload: 0 ms, reassemble: 276 ms).\n"},"event":"output"}
[12:19:16 PM] [DAP] [Info] <== {"seq":949,"type":"event","body":{"progressId":"hotReload_12"},"event":"dart.progressEnd"}
[12:19:16 PM] [DAP] [Info] <== {"seq":950,"type":"response","command":"hotReload","request_seq":26,"success":true}
[12:19:16 PM] [DAP] [Info] <== {"seq":951,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=1114.48ms min=444.57ms max=1784.38ms count=2\n"},"event":"output"}
[12:19:17 PM] [DAP] [Info] <== {"seq":952,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:19:19 PM] [DAP] [Info] ==> {"command":"restart","arguments":{"arguments":{"dartCodeDebugSessionID":"session-2402c","type":"dart","request":"launch","program":"D:\\Flutter\\tintuc\\lib\\main.dart","projectRootPath":"D:\\Flutter\\tintuc","cwd":"D:\\Flutter\\tintuc","name":"Flutter (Pixel 6 Pro API 33)","deviceId":"emulator-5554","deviceName":"Pixel 6 Pro API 33 (android-x64)","toolEnv":{"FLUTTER_HOST":"VSCode","PUB_ENVIRONMENT":"vscode.dart-code","FLUTTER_ROOT":"C:\\src\\flutter"},"sendLogsToClient":false,"sendCustomProgressEvents":true,"allowAnsiColorOutput":true,"additionalProjectPaths":["D:\\Flutter\\tintuc"],"args":[],"vmAdditionalArgs":[],"toolArgs":["-d","emulator-5554","--devtools-server-address","http://127.0.0.1:9100/"],"vmServicePort":0,"dartSdkPath":"C:\\src\\flutter\\bin\\cache\\dart-sdk","vmServiceLogFile":"D:\\Flutter\\tintuc\\logs\\observatory.txt","maxLogLineLength":2000,"dartTestLogFile":"D:\\Flutter\\tintuc\\logs\\dart_test.txt","debugSdkLibraries":true,"debugExternalPackageLibraries":true,"showDartDeveloperLogs":true,"evaluateGettersInDebugViews":true,"showGettersInDebugViews":true,"evaluateToStringInDebugViews":true,"flutterSdkPath":"C:\\src\\flutter","useInspectorNotificationsForWidgetErrors":true,"flutterRunLogFile":"D:\\Flutter\\tintuc\\logs\\flutter_run.txt","flutterTestLogFile":"D:\\Flutter\\tintuc\\logs\\flutter_test.txt","showMemoryUsage":false,"debuggerType":2,"__sessionId":"454e343a-54f3-4faf-a91b-9ec4fc428a33"}},"type":"request","seq":27}
[12:19:19 PM] [DAP] [Info] <== {"seq":953,"type":"event","body":{"message":"Hot restarting…","progressId":"hotRestart_13","title":"Flutter"},"event":"dart.progressStart"}
[12:19:21 PM] [DAP] [Info] <== {"seq":954,"type":"event","body":{"reason":"exited","threadId":1691770061380783},"event":"thread"}
[12:19:21 PM] [DAP] [Info] <== {"seq":955,"type":"event","body":{"reason":"started","threadId":6749461011480387},"event":"thread"}
[12:19:21 PM] [DAP] [Info] <== {"seq":956,"type":"event","body":{"category":"stdout","output":"Restarted application in 1.191ms.\n"},"event":"output"}
[12:19:21 PM] [DAP] [Info] <== {"seq":957,"type":"event","body":{"progressId":"hotRestart_13"},"event":"dart.progressEnd"}
[12:19:21 PM] [DAP] [Info] <== {"seq":958,"type":"response","command":"restart","request_seq":27,"success":true}
[12:19:21 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":28}
[12:19:21 PM] [DAP] [Info] <== {"seq":959,"type":"response","body":{"threads":[{"id":6749461011480387,"name":"main"}]},"command":"threads","request_seq":28,"success":true}
[12:19:21 PM] [DAP] [Info] <== {"seq":960,"type":"event","body":{"extensionRPC":"ext.ui.window.scheduleFrame","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":961,"type":"event","body":{"extensionRPC":"ext.ui.window.reinitializeShader","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":962,"type":"event","body":{"extensionRPC":"ext.ui.window.impellerEnabled","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":963,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpEnableTimelineLogging","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":964,"type":"event","body":{"extensionRPC":"ext.dart.io.setHttpEnableTimelineLogging","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":965,"type":"event","body":{"extensionRPC":"ext.dart.io.httpEnableTimelineLogging","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":966,"type":"event","body":{"extensionRPC":"ext.dart.io.getSocketProfile","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":967,"type":"event","body":{"extensionRPC":"ext.dart.io.startSocketProfiling","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":968,"type":"event","body":{"extensionRPC":"ext.dart.io.pauseSocketProfiling","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":969,"type":"event","body":{"extensionRPC":"ext.dart.io.socketProfilingEnabled","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":970,"type":"event","body":{"extensionRPC":"ext.dart.io.clearSocketProfile","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":971,"type":"event","body":{"extensionRPC":"ext.dart.io.getVersion","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":972,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfile","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":973,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfileRequest","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":974,"type":"event","body":{"extensionRPC":"ext.dart.io.clearHttpProfile","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":975,"type":"event","body":{"extensionRPC":"ext.flutter.reassemble","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":976,"type":"event","body":{"extensionRPC":"ext.flutter.exit","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":977,"type":"event","body":{"extensionRPC":"ext.flutter.connectedVmServiceUri","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":978,"type":"event","body":{"extensionRPC":"ext.flutter.activeDevToolsServerAddress","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":979,"type":"event","body":{"extensionRPC":"ext.flutter.platformOverride","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":980,"type":"event","body":{"extensionRPC":"ext.flutter.brightnessOverride","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":981,"type":"event","body":{"extensionRPC":"ext.flutter.timeDilation","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":982,"type":"event","body":{"extensionRPC":"ext.flutter.evict","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":983,"type":"event","body":{"extensionRPC":"ext.flutter.invertOversizedImages","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":984,"type":"event","body":{"extensionRPC":"ext.flutter.debugPaint","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":985,"type":"event","body":{"extensionRPC":"ext.flutter.debugPaintBaselinesEnabled","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":986,"type":"event","body":{"extensionRPC":"ext.flutter.repaintRainbow","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":987,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpLayerTree","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":988,"type":"event","body":{"extensionRPC":"ext.flutter.debugDisableClipLayers","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":989,"type":"event","body":{"extensionRPC":"ext.flutter.debugDisablePhysicalShapeLayers","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":990,"type":"event","body":{"extensionRPC":"ext.flutter.debugDisableOpacityLayers","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":991,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpRenderTree","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":992,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpSemanticsTreeInTraversalOrder","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":993,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpSemanticsTreeInInverseHitTestOrder","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":994,"type":"event","body":{"extensionRPC":"ext.flutter.profileRenderObjectPaints","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":995,"type":"event","body":{"extensionRPC":"ext.flutter.profileRenderObjectLayouts","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":996,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpApp","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":997,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpFocusTree","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":998,"type":"event","body":{"extensionRPC":"ext.flutter.showPerformanceOverlay","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":999,"type":"event","body":{"extensionRPC":"ext.flutter.didSendFirstFrameEvent","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1000,"type":"event","body":{"extensionRPC":"ext.flutter.didSendFirstFrameRasterizedEvent","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1001,"type":"event","body":{"extensionRPC":"ext.flutter.profileWidgetBuilds","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1002,"type":"event","body":{"extensionRPC":"ext.flutter.profileUserWidgetBuilds","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1003,"type":"event","body":{"extensionRPC":"ext.flutter.debugAllowBanner","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1004,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.structuredErrors","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1005,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.show","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1006,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.trackRebuildDirtyWidgets","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1007,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.trackRepaintWidgets","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1008,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.disposeAllGroups","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1009,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.disposeGroup","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1010,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.isWidgetTreeReady","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1011,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.disposeId","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1012,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setPubRootDirectories","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1013,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.addPubRootDirectories","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] ==> {"command":"callService","arguments":{"method":"ext.flutter.inspector.setPubRootDirectories","params":{"isolateId":"isolates/6749461011480387","arg0":"file:///D:/Flutter/tintuc"}},"type":"request","seq":29}
[12:19:21 PM] [DAP] [Info] <== {"seq":1014,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.removePubRootDirectories","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1015,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getPubRootDirectories","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1016,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setSelectionById","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1017,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getParentChain","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1018,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getProperties","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1019,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getChildren","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1020,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getChildrenSummaryTree","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1021,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getChildrenDetailsSubtree","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1022,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getRootWidget","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1023,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getRootWidgetSummaryTree","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1024,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getRootWidgetSummaryTreeWithPreviews","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1025,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getDetailsSubtree","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1026,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getSelectedWidget","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1027,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getSelectedSummaryWidget","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1028,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.isWidgetCreationTracked","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1029,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.screenshot","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1030,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getLayoutExplorerNode","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1031,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setFlexFit","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1032,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setFlexFactor","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1033,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setFlexProperties","isolateId":"isolates/6749461011480387"},"event":"dart.serviceExtensionAdded"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1034,"type":"event","body":{"extension":"ext.flutter.activeDevToolsServerAddress","value":"http://127.0.0.1:9100"},"event":"flutter.serviceExtensionStateChanged"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1035,"type":"event","body":{"extension":"ext.flutter.connectedVmServiceUri","value":"http://127.0.0.1:53603/cU7S4XWchKU=/"},"event":"flutter.serviceExtensionStateChanged"}
[12:19:21 PM] [DAP] [Info] <== {"seq":1036,"type":"response","body":{"result":null,"type":"_extensionType","method":"ext.flutter.inspector.setPubRootDirectories"},"command":"callService","request_seq":29,"success":true}
[12:19:21 PM] [DAP] [Info] <== {"seq":1037,"type":"event","body":{"category":"stdout","output":"D/FRCPlugin( 4955): Sending fetchTimeout: 60\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1038,"type":"event","body":{"category":"stdout","output":"I/ExoPlayerImpl( 4955): Release 5bdfbb5 [ExoPlayerLib/2.18.7] [emu64xa, sdk_gphone_x86_64, Google, 33] [goog.exo.core, goog.exo.exoplayer, goog.exo.decoder, goog.exo.datasource, goog.exo.extractor]\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1039,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-1](id:135b00000004,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1040,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-1](id:135b00000004,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1041,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-1](id:135b00000004,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1042,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-1](id:135b00000004,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1043,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-1](id:135b00000004,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1044,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-1](id:135b00000004,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1045,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-1](id:135b00000004,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1046,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-1](id:135b00000004,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1047,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-1](id:135b00000004,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1048,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-1](id:135b00000004,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1049,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-1](id:135b00000004,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1050,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-1](id:135b00000004,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1051,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-1](id:135b00000004,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1052,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-1](id:135b00000004,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1053,"type":"event","body":{"category":"stdout","output":"E/BufferQueueProducer( 4955): [SurfaceTexture-0-4955-1](id:135b00000004,api:3,p:4955,c:4955) cancelBuffer: BufferQueue has been abandoned\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1054,"type":"event","body":{"category":"stdout","output":"D/MediaCodec( 4955): keep callback message for reclaim\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1055,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 4955): query failed after returning 12 values (BAD_INDEX)\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1056,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is   c2::u32 coded.vui.color.matrix = 1\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1057,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.vui.color.primaries = 1\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1058,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.vui.color.transfer = 3\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1059,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1342179345.\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1060,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 2415921170.\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1061,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1610614798.\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1062,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): bufferpool2 0x7dc3143ed9f8 : 1(6291456 size) total buffers - 1(6291456 size) used buffers - 14/20 (recycle/alloc) - 5/19 (fetch/transfer)\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1063,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955): [c2.android.aac.decoder#885:1D-Output.Impl[N]] Client returned a buffer it does not own according to our record: 0\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1064,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955): [c2.android.aac.decoder#885:1D-Output.Impl[N]] Client returned a buffer it does not own according to our record: 1\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1065,"type":"event","body":{"category":"stdout","output":"D/MediaCodec( 4955): keep callback message for reclaim\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1066,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 4955): query failed after returning 20 values (BAD_INDEX)\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1067,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1342179345.\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1068,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 2415921170.\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1069,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1610614798.\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1070,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): bufferpool2 0x7dc3143b7478 : 1(8192 size) total buffers - 1(8192 size) used buffers - 20/26 (recycle/alloc) - 5/25 (fetch/transfer)\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1071,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 4955): connecting to surface 0x7dc3b43ed7c0, reason connectToSurface\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1072,"type":"event","body":{"category":"stdout","output":"I/MediaCodec( 4955): [c2.goldfish.h264.decoder] setting surface generation to 5073924\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1073,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 4955): disconnecting from surface 0x7dc3b43ed7c0, reason connectToSurface(reconnect)\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1074,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 4955): connecting to surface 0x7dc3b43ed7c0, reason connectToSurface(reconnect)\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1075,"type":"event","body":{"category":"stdout","output":"D/Codec2-OutputBufferQueue( 4955): remote graphic buffer migration 0/0\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1076,"type":"event","body":{"category":"stdout","output":"D/Codec2Client( 4955): setOutputSurface -- failed to set consumer usage (6/BAD_INDEX)\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1077,"type":"event","body":{"category":"stdout","output":"D/Codec2Client( 4955): setOutputSurface -- generation=5073924 consumer usage=0x900\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1078,"type":"event","body":{"category":"stdout","output":"D/Codec2Client( 4955): Surface configure completed\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1079,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 4955): disconnecting from surface 0x7dc3b43f3df0, reason disconnectFromSurface\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1080,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#318] MediaCodec discarded an unknown buffer\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1081,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#318] MediaCodec discarded an unknown buffer\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1082,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#318] MediaCodec discarded an unknown buffer\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1083,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#318] MediaCodec discarded an unknown buffer\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1084,"type":"event","body":{"category":"stdout","output":"I/hw-BpHwBinder( 4955): onLastStrongRef automatically unlinking death recipients\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1085,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 4955): disconnecting from surface 0x7dc3b43ed7c0, reason disconnectFromSurface\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1086,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.android.aac.decoder#885] MediaCodec discarded an unknown buffer\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1087,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.android.aac.decoder#885] MediaCodec discarded an unknown buffer\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1088,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.android.aac.decoder#885] MediaCodec discarded an unknown buffer\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1089,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.android.aac.decoder#885] MediaCodec discarded an unknown buffer\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1090,"type":"event","body":{"category":"stdout","output":"I/hw-BpHwBinder( 4955): onLastStrongRef automatically unlinking death recipients\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1091,"type":"event","body":{"category":"stdout","output":"I/ExoPlayerImpl( 4955): Init ec7fd67 [ExoPlayerLib/2.18.7] [emu64xa, sdk_gphone_x86_64, Google, 33]\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1092,"type":"event","body":{"category":"stdout","output":"D/TrafficStats( 4955): tagSocket(101) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1093,"type":"event","body":{"category":"stdout","output":"W/DynamiteModule( 4955): Local module descriptor class for com.google.android.gms.providerinstaller.dynamite not found.\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1094,"type":"event","body":{"category":"stdout","output":"I/DynamiteModule( 4955): Considering local module com.google.android.gms.providerinstaller.dynamite:0 and remote module com.google.android.gms.providerinstaller.dynamite:0\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1095,"type":"event","body":{"category":"stdout","output":"W/ProviderInstaller( 4955): Failed to load providerinstaller module: No acceptable module com.google.android.gms.providerinstaller.dynamite found. Local version is 0 and remote version is 0.\n"},"event":"output"}
[12:19:22 PM] [DAP] [Info] <== {"seq":1096,"type":"event","body":{"category":"stdout","output":"D/TrafficStats( 4955): tagSocket(137) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:19:23 PM] [DAP] [Info] <== {"seq":1097,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=3276.41ms min=300.15ms max=6252.67ms count=2\n"},"event":"output"}
[12:19:23 PM] [DAP] [Info] <== {"seq":1098,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:19:23 PM] [DAP] [Info] <== {"seq":1099,"type":"event","body":{"category":"stdout","output":"D/TrafficStats( 4955): tagSocket(101) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:19:24 PM] [DAP] [Info] <== {"seq":1100,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=18.53ms min=6.87ms max=71.32ms count=42\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1101,"type":"event","body":{"reason":"started","threadId":8199576285532695},"event":"thread"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1102,"type":"event","body":{"reason":"started","threadId":2425225116575623},"event":"thread"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1103,"type":"event","body":{"reason":"started","threadId":6106768056474547},"event":"thread"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1104,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpEnableTimelineLogging","isolateId":"isolates/8199576285532695"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":30}
[12:19:25 PM] [DAP] [Info] <== {"seq":1105,"type":"event","body":{"extensionRPC":"ext.dart.io.setHttpEnableTimelineLogging","isolateId":"isolates/8199576285532695"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1106,"type":"event","body":{"extensionRPC":"ext.dart.io.httpEnableTimelineLogging","isolateId":"isolates/8199576285532695"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1107,"type":"event","body":{"extensionRPC":"ext.dart.io.getSocketProfile","isolateId":"isolates/8199576285532695"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1108,"type":"event","body":{"extensionRPC":"ext.dart.io.startSocketProfiling","isolateId":"isolates/8199576285532695"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1109,"type":"event","body":{"extensionRPC":"ext.dart.io.pauseSocketProfiling","isolateId":"isolates/8199576285532695"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1110,"type":"event","body":{"extensionRPC":"ext.dart.io.socketProfilingEnabled","isolateId":"isolates/8199576285532695"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1111,"type":"event","body":{"extensionRPC":"ext.dart.io.clearSocketProfile","isolateId":"isolates/8199576285532695"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1112,"type":"event","body":{"extensionRPC":"ext.dart.io.getVersion","isolateId":"isolates/8199576285532695"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1113,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfile","isolateId":"isolates/8199576285532695"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1114,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfileRequest","isolateId":"isolates/8199576285532695"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1115,"type":"event","body":{"extensionRPC":"ext.dart.io.clearHttpProfile","isolateId":"isolates/8199576285532695"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1116,"type":"response","body":{"threads":[{"id":6749461011480387,"name":"main"},{"id":8199576285532695,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."},{"id":2425225116575623,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."},{"id":6106768056474547,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."}]},"command":"threads","request_seq":30,"success":true}
[12:19:25 PM] [DAP] [Info] <== {"seq":1117,"type":"event","body":{"reason":"exited","threadId":8199576285532695},"event":"thread"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1118,"type":"event","body":{"category":"stdout","output":"I/DMCodecAdapterFactory( 4955): Creating an asynchronous MediaCodec adapter for track type video\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1119,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): allocate(c2.goldfish.h264.decoder)\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1120,"type":"event","body":{"category":"stdout","output":"I/CCodec  ( 4955): setting up 'default' as default (vendor) store\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1121,"type":"event","body":{"category":"stdout","output":"I/CCodec  ( 4955): Created component [c2.goldfish.h264.decoder]\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1122,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): read media type: video/avc\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1123,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: algo.buffers.max-count.values\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1124,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: output.subscribed-indices.values\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1125,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: input.buffers.allocator-ids.values\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1126,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: output.buffers.allocator-ids.values\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1127,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: algo.buffers.allocator-ids.values\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1128,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: output.buffers.pool-ids.values\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1129,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: algo.buffers.pool-ids.values\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1130,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): ignored struct field coded.color-format.locations\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1131,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): ignoring local param raw.size (0xd2001800) as it is already supported\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1132,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): ignoring local param default.color (0x5200180b) as it is already supported\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1133,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): ignored struct field raw.hdr-static-info.mastering\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1134,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 4955): query failed after returning 12 values (BAD_INDEX)\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1135,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is Dict {\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1136,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.pl.level = 20496\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1137,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.pl.profile = 20481\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1138,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.vui.color.matrix = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1139,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.vui.color.primaries = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1140,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.vui.color.range = 2\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1141,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.vui.color.transfer = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1142,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 default.color.matrix = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1143,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 default.color.primaries = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1144,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 default.color.range = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1145,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 default.color.transfer = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1146,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 input.buffers.max-size.value = 6291456\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1147,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 input.delay.value = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1148,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   string input.media-type.value = \"video/avc\"\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1149,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 output.delay.value = 8\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1150,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   string output.media-type.value = \"video/raw\"\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1151,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.color.matrix = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1152,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.color.primaries = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1153,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.color.range = 2\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1154,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.color.transfer = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1155,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.max-size.height = 240\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1156,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.max-size.width = 320\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1157,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.pixel-format.value = 35\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1158,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::i32 raw.rotation.flip = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1159,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::i32 raw.rotation.value = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1160,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.sar.height = 1\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1161,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.sar.width = 1\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1162,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.size.height = 240\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1163,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.size.width = 320\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1164,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2:\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1165,"type":"event","body":{"category":"stdout","output":"W/ColorUtils( 4955): expected specified color aspects (2:0:0:0)\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1166,"type":"event","body":{"category":"stdout","output":"I/MediaCodec( 4955): MediaCodec will operate in async mode\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1167,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 4955): connecting to surface 0x7dc3b4519a90, reason connectToSurface\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1168,"type":"event","body":{"category":"stdout","output":"I/MediaCodec( 4955): [c2.goldfish.h264.decoder] setting surface generation to 5073925\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1169,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 4955): disconnecting from surface 0x7dc3b4519a90, reason connectToSurface(reconnect)\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1170,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 4955): connecting to surface 0x7dc3b4519a90, reason connectToSurface(reconnect)\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1171,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): [c2.goldfish.h264.decoder] buffers are bound to CCodec for this session\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1172,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): no c2 equivalents for csd-1\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1173,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): no c2 equivalents for log-session-id\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1174,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): no c2 equivalents for native-window\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1175,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): no c2 equivalents for flags\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1176,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): config failed => CORRUPTED\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1177,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is   c2::u32 raw.max-size.height = 720\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1178,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.max-size.width = 1280\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1179,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.size.height = 720\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1180,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.size.width = 1280\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1181,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1107298332.\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1182,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): client requested max input size 219813, which is smaller than what component recommended (6291456); overriding with component recommendation.\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1183,"type":"event","body":{"category":"stdout","output":"W/CCodec  ( 4955): This behavior is subject to change. It is recommended that app developers double check whether the requested max input size is in reasonable range.\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1184,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): encoding statistics level = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1185,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): setup formats input: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1186,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t height = 720\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1187,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t level = 65536\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1188,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t max-input-size = 6291456\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1189,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   string mime = \"video/avc\"\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1190,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t profile = 65536\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1191,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t width = 1280\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1192,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   Rect crop(0, 0, 1279, 719)\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1193,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): }\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1194,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): setup formats output: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1195,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t android._color-format = 2135033992\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1196,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t android._video-scaling = 1\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1197,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t rotation-degrees = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1198,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t color-standard = 1\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1199,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t color-range = 2\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1200,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t color-transfer = 3\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1201,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t sar-height = 1\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1202,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t sar-width = 1\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1203,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   Rect crop(0, 0, 1279, 719)\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1204,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t width = 1280\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1205,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t height = 720\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1206,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t max-height = 720\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1207,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t max-width = 1280\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1208,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   string mime = \"video/raw\"\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1209,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t android._dataspace = 260\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1210,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t color-format = 2130708361\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1211,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): }\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1212,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 4955): query failed after returning 12 values (BAD_INDEX)\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1213,"type":"event","body":{"category":"stdout","output":"D/MediaCodec( 4955): keep callback message for reclaim\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1214,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1342179345.\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1215,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 2415921170.\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1216,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1610614798.\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1217,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 2684356609.\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1218,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#892] Created input block pool with allocatorID 16 => poolID 21 - OK (0)\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1219,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#892] Query output surface allocator returned 0 params => BAD_INDEX (6)\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1220,"type":"event","body":{"category":"stdout","output":"I/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#892] Created output block pool with allocatorID 18 => poolID 19 - OK\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1221,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.goldfish.h264.decoder#892] Configured output block pool ids 19 => OK\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1222,"type":"event","body":{"category":"stdout","output":"D/Codec2-OutputBufferQueue( 4955): remote graphic buffer migration 0/0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1223,"type":"event","body":{"category":"stdout","output":"D/Codec2Client( 4955): setOutputSurface -- failed to set consumer usage (6/BAD_INDEX)\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1224,"type":"event","body":{"category":"stdout","output":"D/Codec2Client( 4955): setOutputSurface -- generation=5073925 consumer usage=0x900\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1225,"type":"event","body":{"category":"stdout","output":"D/Codec2Client( 4955): Surface configure completed\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1226,"type":"event","body":{"category":"stdout","output":"I/DMCodecAdapterFactory( 4955): Creating an asynchronous MediaCodec adapter for track type audio\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1227,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): bufferpool2 0x7dc3144001f8 : 0(0 size) total buffers - 0(0 size) used buffers - 13/23 (recycle/alloc) - 6/19 (fetch/transfer)\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1228,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): Destruction - bufferpool2 0x7dc3144001f8 cached: 0/0M, 0/0% in use; allocs: 23, 57% recycled; transfers: 19, 68% unfetched\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1229,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): allocate(c2.android.aac.decoder)\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1230,"type":"event","body":{"category":"stdout","output":"I/CCodec  ( 4955): setting up 'default' as default (vendor) store\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1231,"type":"event","body":{"category":"stdout","output":"I/CCodec  ( 4955): Created component [c2.android.aac.decoder]\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1232,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): read media type: audio/mp4a-latm\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1233,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpEnableTimelineLogging","isolateId":"isolates/6106768056474547"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1234,"type":"event","body":{"extensionRPC":"ext.dart.io.setHttpEnableTimelineLogging","isolateId":"isolates/6106768056474547"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1235,"type":"event","body":{"extensionRPC":"ext.dart.io.httpEnableTimelineLogging","isolateId":"isolates/6106768056474547"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1236,"type":"event","body":{"extensionRPC":"ext.dart.io.getSocketProfile","isolateId":"isolates/6106768056474547"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1237,"type":"event","body":{"extensionRPC":"ext.dart.io.startSocketProfiling","isolateId":"isolates/6106768056474547"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1238,"type":"event","body":{"extensionRPC":"ext.dart.io.pauseSocketProfiling","isolateId":"isolates/6106768056474547"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1239,"type":"event","body":{"extensionRPC":"ext.dart.io.socketProfilingEnabled","isolateId":"isolates/6106768056474547"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1240,"type":"event","body":{"extensionRPC":"ext.dart.io.clearSocketProfile","isolateId":"isolates/6106768056474547"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1241,"type":"event","body":{"extensionRPC":"ext.dart.io.getVersion","isolateId":"isolates/6106768056474547"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1242,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfile","isolateId":"isolates/6106768056474547"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1243,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfileRequest","isolateId":"isolates/6106768056474547"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1244,"type":"event","body":{"extensionRPC":"ext.dart.io.clearHttpProfile","isolateId":"isolates/6106768056474547"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1245,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpEnableTimelineLogging","isolateId":"isolates/2425225116575623"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1246,"type":"event","body":{"extensionRPC":"ext.dart.io.setHttpEnableTimelineLogging","isolateId":"isolates/2425225116575623"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1247,"type":"event","body":{"extensionRPC":"ext.dart.io.httpEnableTimelineLogging","isolateId":"isolates/2425225116575623"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1248,"type":"event","body":{"extensionRPC":"ext.dart.io.getSocketProfile","isolateId":"isolates/2425225116575623"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1249,"type":"event","body":{"extensionRPC":"ext.dart.io.startSocketProfiling","isolateId":"isolates/2425225116575623"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1250,"type":"event","body":{"extensionRPC":"ext.dart.io.pauseSocketProfiling","isolateId":"isolates/2425225116575623"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1251,"type":"event","body":{"extensionRPC":"ext.dart.io.socketProfilingEnabled","isolateId":"isolates/2425225116575623"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1252,"type":"event","body":{"extensionRPC":"ext.dart.io.clearSocketProfile","isolateId":"isolates/2425225116575623"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1253,"type":"event","body":{"extensionRPC":"ext.dart.io.getVersion","isolateId":"isolates/2425225116575623"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1254,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfile","isolateId":"isolates/2425225116575623"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1255,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfileRequest","isolateId":"isolates/2425225116575623"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1256,"type":"event","body":{"extensionRPC":"ext.dart.io.clearHttpProfile","isolateId":"isolates/2425225116575623"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1257,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: algo.buffers.max-count.values\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1258,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: output.subscribed-indices.values\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1259,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: input.buffers.allocator-ids.values\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1260,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: output.buffers.allocator-ids.values\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1261,"type":"event","body":{"reason":"exited","threadId":2425225116575623},"event":"thread"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1262,"type":"event","body":{"reason":"exited","threadId":6106768056474547},"event":"thread"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1263,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: algo.buffers.allocator-ids.values\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1264,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: output.buffers.pool-ids.values\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1265,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 4955): extent() != 1 for single value type: algo.buffers.pool-ids.values\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1266,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 4955): query failed after returning 20 values (BAD_INDEX)\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1267,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is Dict {\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1268,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.aac-packaging.value = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1269,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.bitrate.value = 64000\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1270,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.pl.level = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1271,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 coded.pl.profile = 8192\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1272,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::i32 coding.drc.album-mode.value = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1273,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::float coding.drc.attenuation-factor.value = 1\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1274,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::float coding.drc.boost-factor.value = 1\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1275,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::i32 coding.drc.compression-mode.value = 3\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1276,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::i32 coding.drc.effect-type.value = 3\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1277,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::float coding.drc.encoded-level.value = 0.25\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1278,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::float coding.drc.reference-level.value = -16\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1279,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 input.buffers.max-size.value = 8192\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1280,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 input.delay.value = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1281,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   string input.media-type.value = \"audio/mp4a-latm\"\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1282,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 output.delay.value = 2\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1283,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::float output.drc.output-loudness.value = 0.25\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1284,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   string output.media-type.value = \"audio/raw\"\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1285,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.channel-count.value = 1\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1286,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.channel-mask.value = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1287,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.max-channel-count.value = 8\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1288,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.sample-rate.value = 44100\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1289,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): }\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1290,"type":"event","body":{"category":"stdout","output":"I/MediaCodec( 4955): MediaCodec will operate in async mode\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1291,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): [c2.android.aac.decoder] buffers are bound to CCodec for this session\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1292,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): no c2 equivalents for log-session-id\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1293,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): no c2 equivalents for flags\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1294,"type":"event","body":{"reason":"started","threadId":1512738745582951},"event":"thread"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1295,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): config failed => CORRUPTED\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1296,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is   c2::u32 raw.channel-count.value = 2\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1297,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1107298332.\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1298,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): client requested max input size 623, which is smaller than what component recommended (8192); overriding with component recommendation.\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1299,"type":"event","body":{"category":"stdout","output":"W/CCodec  ( 4955): This behavior is subject to change. It is recommended that app developers double check whether the requested max input size is in reasonable range.\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1300,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): encoding statistics level = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1301,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): setup formats input: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1302,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-album-mode = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1303,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-boost-level = 127\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1304,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-cut-level = 127\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1305,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-effect-type = 3\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1306,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-encoded-target-level = -1\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1307,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-max-output-channel_count = 8\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1308,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-target-ref-level = 64\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1309,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t bitrate = 64000\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1310,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t channel-count = 2\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1311,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t channel-mask = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1312,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t level = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1313,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t max-input-size = 8192\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1314,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t max-output-channel-count = 8\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1315,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   string mime = \"audio/mp4a-latm\"\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1316,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t profile = 2\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1317,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t sample-rate = 44100\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1318,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): }\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1319,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): setup formats output: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1320,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-album-mode = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1321,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-boost-level = 127\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1322,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-cut-level = 127\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1323,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-effect-type = 3\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1324,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-drc-output-loudness = -1\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1325,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-encoded-target-level = -1\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1326,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-max-output-channel_count = 8\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1327,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t aac-target-ref-level = 64\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1328,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t channel-count = 2\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1329,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t channel-mask = 0\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1330,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t max-output-channel-count = 8\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1331,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   string mime = \"audio/raw\"\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1332,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t sample-rate = 44100\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1333,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955):   int32_t android._config-pcm-encoding = 2\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1334,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 4955): }\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1335,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 4955): query failed after returning 20 values (BAD_INDEX)\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1336,"type":"event","body":{"category":"stdout","output":"D/MediaCodec( 4955): keep callback message for reclaim\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1337,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1342179345.\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1338,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 2415921170.\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1339,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 4955): query -- param skipped: index = 1610614798.\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1340,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.android.aac.decoder#763] Created input block pool with allocatorID 16 => poolID 22 - OK (0)\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1341,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): bufferpool2 0x7dc314442c08 : 0(0 size) total buffers - 0(0 size) used buffers - 22/32 (recycle/alloc) - 5/27 (fetch/transfer)\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1342,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): Destruction - bufferpool2 0x7dc314442c08 cached: 0/0M, 0/0% in use; allocs: 32, 69% recycled; transfers: 27, 81% unfetched\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1343,"type":"event","body":{"category":"stdout","output":"I/CCodecBufferChannel( 4955): [c2.android.aac.decoder#763] Created output block pool with allocatorID 16 => poolID 28 - OK\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1344,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 4955): [c2.android.aac.decoder#763] Configured output block pool ids 28 => OK\n"},"event":"output"}
[12:19:25 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":31}
[12:19:25 PM] [DAP] [Info] <== {"seq":1345,"type":"response","body":{"threads":[{"id":6749461011480387,"name":"main"},{"id":1512738745582951,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."}]},"command":"threads","request_seq":31,"success":true}
[12:19:25 PM] [DAP] [Info] <== {"seq":1346,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpEnableTimelineLogging","isolateId":"isolates/1512738745582951"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1347,"type":"event","body":{"extensionRPC":"ext.dart.io.setHttpEnableTimelineLogging","isolateId":"isolates/1512738745582951"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1348,"type":"event","body":{"extensionRPC":"ext.dart.io.httpEnableTimelineLogging","isolateId":"isolates/1512738745582951"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1349,"type":"event","body":{"extensionRPC":"ext.dart.io.getSocketProfile","isolateId":"isolates/1512738745582951"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1350,"type":"event","body":{"extensionRPC":"ext.dart.io.startSocketProfiling","isolateId":"isolates/1512738745582951"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1351,"type":"event","body":{"extensionRPC":"ext.dart.io.pauseSocketProfiling","isolateId":"isolates/1512738745582951"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1352,"type":"event","body":{"extensionRPC":"ext.dart.io.socketProfilingEnabled","isolateId":"isolates/1512738745582951"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1353,"type":"event","body":{"extensionRPC":"ext.dart.io.clearSocketProfile","isolateId":"isolates/1512738745582951"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1354,"type":"event","body":{"extensionRPC":"ext.dart.io.getVersion","isolateId":"isolates/1512738745582951"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1355,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfile","isolateId":"isolates/1512738745582951"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1356,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfileRequest","isolateId":"isolates/1512738745582951"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1357,"type":"event","body":{"extensionRPC":"ext.dart.io.clearHttpProfile","isolateId":"isolates/1512738745582951"},"event":"dart.serviceExtensionAdded"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1358,"type":"event","body":{"reason":"exited","threadId":1512738745582951},"event":"thread"}
[12:19:25 PM] [DAP] [Info] <== {"seq":1359,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=29.02ms min=2.91ms max=528.75ms count=40\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1360,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is   c2::u32 raw.channel-mask.value = 12\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1361,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955): [c2.android.aac.decoder#763:Output[N]] popFromStashAndRegister: at 1000000000000us, output format changed to AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1362,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-drc-album-mode = 0\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1363,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-drc-boost-level = 127\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1364,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-drc-cut-level = 127\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1365,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-drc-effect-type = 3\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1366,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-drc-output-loudness = -1\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1367,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-encoded-target-level = -1\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1368,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-max-output-channel_count = 8\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1369,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t aac-target-ref-level = 64\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1370,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t channel-count = 2\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1371,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t channel-mask = 12\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1372,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t max-output-channel-count = 8\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1373,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   string mime = \"audio/raw\"\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1374,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t sample-rate = 44100\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1375,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955):   int32_t android._config-pcm-encoding = 2\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1376,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 4955): }\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1377,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955): c2 config diff is   c2::u32 raw.color.matrix = 1\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1378,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.color.primaries = 1\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1379,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.color.transfer = 3\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1380,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.crop.height = 720\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1381,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.crop.left = 0\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1382,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.crop.top = 0\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1383,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 4955):   c2::u32 raw.crop.width = 1280\n"},"event":"output"}
[12:19:26 PM] [DAP] [Info] <== {"seq":1384,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=141.00ms min=9.20ms max=553.14ms count=7\n"},"event":"output"}
[12:19:27 PM] [DAP] [Info] <== {"seq":1385,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): bufferpool2 0x7dc3143ed9f8 : 0(0 size) total buffers - 0(0 size) used buffers - 14/23 (recycle/alloc) - 5/19 (fetch/transfer)\n"},"event":"output"}
[12:19:27 PM] [DAP] [Info] <== {"seq":1386,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): evictor expired: 1, evicted: 1\n"},"event":"output"}
[12:19:27 PM] [DAP] [Info] <== {"seq":1387,"type":"event","body":{"category":"stdout","output":"W/OnBackInvokedCallback( 4955): OnBackInvokedCallback is not enabled for the application.\n"},"event":"output"}
[12:19:27 PM] [DAP] [Info] <== {"seq":1388,"type":"event","body":{"category":"stdout","output":"W/OnBackInvokedCallback( 4955): Set 'android:enableOnBackInvokedCallback=\"true\"' in the application manifest.\n"},"event":"output"}
[12:19:27 PM] [DAP] [Info] <== {"seq":1389,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=153.41ms min=59.86ms max=400.63ms count=7\n"},"event":"output"}
[12:19:28 PM] [DAP] [Info] <== {"seq":1390,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): bufferpool2 0x7dc3143b7478 : 0(0 size) total buffers - 0(0 size) used buffers - 20/30 (recycle/alloc) - 5/25 (fetch/transfer)\n"},"event":"output"}
[12:19:28 PM] [DAP] [Info] <== {"seq":1391,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): evictor expired: 1, evicted: 1\n"},"event":"output"}
[12:19:30 PM] [DAP] [Info] <== {"seq":1392,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): bufferpool2 0x7dc314381f28 : 5(40960 size) total buffers - 0(0 size) used buffers - 21/26 (recycle/alloc) - 5/26 (fetch/transfer)\n"},"event":"output"}
[12:19:30 PM] [DAP] [Info] <== {"seq":1393,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): evictor expired: 3, evicted: 1\n"},"event":"output"}
[12:19:32 PM] [DAP] [Info] <== {"seq":1394,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): bufferpool2 0x7dc31446e668 : 5(31457280 size) total buffers - 0(0 size) used buffers - 13/19 (recycle/alloc) - 7/19 (fetch/transfer)\n"},"event":"output"}
[12:19:32 PM] [DAP] [Info] <== {"seq":1395,"type":"event","body":{"category":"stdout","output":"D/BufferPoolAccessor2.0( 4955): evictor expired: 1, evicted: 1\n"},"event":"output"}
[12:19:32 PM] [DAP] [Info] <== {"seq":1396,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=683.22ms min=18.92ms max=4523.39ms count=7\n"},"event":"output"}
[12:19:59 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":32}
[12:19:59 PM] [DAP] [Info] <== {"seq":1397,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_14","title":"Flutter"},"event":"dart.progressStart"}
[12:20:00 PM] [DAP] [Info] <== {"seq":1398,"type":"event","body":{"category":"stdout","output":"Reloaded 1 of 1164 libraries in 868ms (compile: 28 ms, reload: 241 ms, reassemble: 547 ms).\n"},"event":"output"}
[12:20:00 PM] [DAP] [Info] <== {"seq":1399,"type":"event","body":{"progressId":"hotReload_14"},"event":"dart.progressEnd"}
[12:20:00 PM] [DAP] [Info] <== {"seq":1400,"type":"response","command":"hotReload","request_seq":32,"success":true}
[12:20:00 PM] [DAP] [Info] <== {"seq":1401,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=1112.26ms min=1.24ms max=27678.90ms count=25\n"},"event":"output"}
[12:20:01 PM] [DAP] [Info] <== {"seq":1402,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:20:03 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":33}
[12:20:03 PM] [DAP] [Info] <== {"seq":1403,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_15","title":"Flutter"},"event":"dart.progressStart"}
[12:20:04 PM] [DAP] [Info] <== {"seq":1404,"type":"event","body":{"category":"stdout","output":"Reloaded 1 of 1164 libraries in 777ms (compile: 28 ms, reload: 243 ms, reassemble: 457 ms).\n"},"event":"output"}
[12:20:04 PM] [DAP] [Info] <== {"seq":1405,"type":"event","body":{"progressId":"hotReload_15"},"event":"dart.progressEnd"}
[12:20:04 PM] [DAP] [Info] <== {"seq":1406,"type":"response","command":"hotReload","request_seq":33,"success":true}
[12:20:04 PM] [DAP] [Info] <== {"seq":1407,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=2016.70ms min=414.56ms max=3618.85ms count=2\n"},"event":"output"}
[12:20:05 PM] [DAP] [Info] <== {"seq":1408,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:20:35 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":34}
[12:20:35 PM] [DAP] [Info] <== {"seq":1409,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_16","title":"Flutter"},"event":"dart.progressStart"}
[12:20:36 PM] [DAP] [Info] <== {"seq":1410,"type":"event","body":{"category":"stdout","output":"Reloaded 1 of 1164 libraries in 770ms (compile: 30 ms, reload: 213 ms, reassemble: 472 ms).\n"},"event":"output"}
[12:20:36 PM] [DAP] [Info] <== {"seq":1411,"type":"event","body":{"progressId":"hotReload_16"},"event":"dart.progressEnd"}
[12:20:36 PM] [DAP] [Info] <== {"seq":1412,"type":"response","command":"hotReload","request_seq":34,"success":true}
[12:20:36 PM] [DAP] [Info] <== {"seq":1413,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=15711.38ms min=314.73ms max=31108.03ms count=2\n"},"event":"output"}
[12:20:36 PM] [DAP] [Info] <== {"seq":1414,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:20:48 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":35}
[12:20:48 PM] [DAP] [Info] <== {"seq":1415,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_17","title":"Flutter"},"event":"dart.progressStart"}
[12:20:49 PM] [DAP] [Info] <== {"seq":1416,"type":"event","body":{"category":"stdout","output":"Reloaded 1 of 1164 libraries in 727ms (compile: 25 ms, reload: 218 ms, reassemble: 431 ms).\n"},"event":"output"}
[12:20:49 PM] [DAP] [Info] <== {"seq":1417,"type":"event","body":{"progressId":"hotReload_17"},"event":"dart.progressEnd"}
[12:20:49 PM] [DAP] [Info] <== {"seq":1418,"type":"response","command":"hotReload","request_seq":35,"success":true}
[12:20:49 PM] [DAP] [Info] <== {"seq":1419,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=6413.54ms min=358.33ms max=12468.74ms count=2\n"},"event":"output"}
[12:20:49 PM] [DAP] [Info] <== {"seq":1420,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:21:24 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":36}
[12:21:24 PM] [DAP] [Info] <== {"seq":1421,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_18","title":"Flutter"},"event":"dart.progressStart"}
[12:21:25 PM] [DAP] [Info] <== {"seq":1422,"type":"event","body":{"category":"stdout","output":"Reloaded 1 of 1164 libraries in 822ms (compile: 34 ms, reload: 235 ms, reassemble: 499 ms).\n"},"event":"output"}
[12:21:25 PM] [DAP] [Info] <== {"seq":1423,"type":"event","body":{"progressId":"hotReload_18"},"event":"dart.progressEnd"}
[12:21:25 PM] [DAP] [Info] <== {"seq":1424,"type":"response","command":"hotReload","request_seq":36,"success":true}
[12:21:25 PM] [DAP] [Info] <== {"seq":1425,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=18275.22ms min=315.46ms max=36234.97ms count=2\n"},"event":"output"}
[12:21:26 PM] [DAP] [Info] <== {"seq":1426,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:21:41 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":37}
[12:21:41 PM] [DAP] [Info] <== {"seq":1427,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_19","title":"Flutter"},"event":"dart.progressStart"}
[12:21:42 PM] [DAP] [Info] <== {"seq":1428,"type":"event","body":{"category":"stdout","output":"Reloaded 1 of 1164 libraries in 813ms (compile: 32 ms, reload: 233 ms, reassemble: 494 ms).\n"},"event":"output"}
[12:21:42 PM] [DAP] [Info] <== {"seq":1429,"type":"event","body":{"progressId":"hotReload_19"},"event":"dart.progressEnd"}
[12:21:42 PM] [DAP] [Info] <== {"seq":1430,"type":"response","command":"hotReload","request_seq":37,"success":true}
[12:21:42 PM] [DAP] [Info] <== {"seq":1431,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=8257.13ms min=448.22ms max=16066.04ms count=2\n"},"event":"output"}
[12:21:42 PM] [DAP] [Info] <== {"seq":1432,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:22:02 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":38}
[12:22:02 PM] [DAP] [Info] <== {"seq":1433,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_20","title":"Flutter"},"event":"dart.progressStart"}
[12:22:03 PM] [DAP] [Info] <== {"seq":1434,"type":"event","body":{"category":"stdout","output":"Reloaded 1 of 1164 libraries in 778ms (compile: 33 ms, reload: 242 ms, reassemble: 451 ms).\n"},"event":"output"}
[12:22:03 PM] [DAP] [Info] <== {"seq":1435,"type":"event","body":{"progressId":"hotReload_20"},"event":"dart.progressEnd"}
[12:22:03 PM] [DAP] [Info] <== {"seq":1436,"type":"response","command":"hotReload","request_seq":38,"success":true}
[12:22:03 PM] [DAP] [Info] <== {"seq":1437,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=10508.92ms min=316.56ms max=20701.28ms count=2\n"},"event":"output"}
[12:22:04 PM] [DAP] [Info] <== {"seq":1438,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:22:04 PM] [DAP] [Info] <== {"seq":1439,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=1249.66ms min=1249.66ms max=1249.66ms count=1\n"},"event":"output"}
[12:22:17 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":39}
[12:22:17 PM] [DAP] [Info] <== {"seq":1440,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_21","title":"Flutter"},"event":"dart.progressStart"}
[12:22:18 PM] [DAP] [Info] <== {"seq":1441,"type":"event","body":{"category":"stdout","output":"Reloaded 1 of 1164 libraries in 827ms (compile: 29 ms, reload: 258 ms, reassemble: 482 ms).\n"},"event":"output"}
[12:22:18 PM] [DAP] [Info] <== {"seq":1442,"type":"event","body":{"progressId":"hotReload_21"},"event":"dart.progressEnd"}
[12:22:18 PM] [DAP] [Info] <== {"seq":1443,"type":"response","command":"hotReload","request_seq":39,"success":true}
[12:22:18 PM] [DAP] [Info] <== {"seq":1444,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=13674.19ms min=13674.19ms max=13674.19ms count=1\n"},"event":"output"}
[12:22:18 PM] [DAP] [Info] <== {"seq":1445,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:23:48 PM] [DAP] [Info] <== {"seq":1446,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [WatchStream]: (6ce48ba) Stream closed with status: Status{code=CANCELLED, description=Disconnecting idle stream. Timed out waiting for new targets., cause=null}.\n"},"event":"output"}
[12:27:48 PM] [DAP] [Info] <== {"seq":1447,"type":"event","body":{"category":"stdout","output":"D/TrafficStats( 4955): tagSocket(153) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:27:48 PM] [DAP] [Info] <== {"seq":1448,"type":"event","body":{"category":"stdout","output":"D/TrafficStats( 4955): tagSocket(96) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:30:18 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":40}
[12:30:18 PM] [DAP] [Info] <== {"seq":1449,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_22","title":"Flutter"},"event":"dart.progressStart"}
[12:30:18 PM] [DAP] [Info] <== {"seq":1450,"type":"event","body":{"category":"stderr","output":"lib/caidat/login/screen_sign.dart:107:133: Error: Expected ';' after this.\n                          final res = await _auth.createUserWithEmailAndPassword(email: _userNameController.text, password: password)\n"},"event":"output"}
[12:30:18 PM] [DAP] [Info] <== {"seq":1451,"type":"event","body":{"category":"stderr","output":"                                                                                          ^\n"},"event":"output"}
[12:30:18 PM] [DAP] [Info] <== {"seq":1452,"type":"event","body":{"category":"stderr","output":""},"event":"output"}
[12:30:18 PM] [DAP] [Info] <== {"seq":1453,"type":"event","body":{"category":"stderr","output":"lib/caidat/login/screen_sign.dart:107:125: Error: The getter 'password' isn't defined for the class 'ScreenSign'.\n - 'ScreenSign' is from 'package:tintuc/caidat/login/screen_sign.dart' ('lib/caidat/login/screen_sign.dart').\nTry correcting the name to the name of an existing getter, or defining a getter or field named 'password'.\n"},"event":"output"}
[12:30:18 PM] [DAP] [Info] <== {"seq":1454,"type":"event","body":{"category":"stderr","output":"                          final res = await _auth.createUserWithEmailAndPassword(email: _userNameController.text, password: password)\n","source":{"name":"final","path":"D:\\Flutter\\tintuc\\final"}},"event":"output"}
[12:30:18 PM] [DAP] [Info] <== {"seq":1455,"type":"event","body":{"category":"stderr","output":""},"event":"output"}
[12:30:18 PM] [DAP] [Info] <== {"seq":1456,"type":"event","body":{"category":"stderr","output":"                                                                                          ^^^^^^^^\n"},"event":"output"}
[12:30:18 PM] [DAP] [Info] <== {"seq":1457,"type":"event","body":{"category":"stderr","output":""},"event":"output"}
[12:30:18 PM] [DAP] [Info] <== {"seq":1458,"type":"event","body":{"progressId":"hotReload_22"},"event":"dart.progressEnd"}
[12:30:18 PM] [DAP] [Info] <== {"seq":1459,"type":"response","command":"hotReload","request_seq":40,"success":true}
[12:30:53 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":41}
[12:30:53 PM] [DAP] [Info] <== {"seq":1460,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_23","title":"Flutter"},"event":"dart.progressStart"}
[12:30:54 PM] [DAP] [Info] <== {"seq":1461,"type":"event","body":{"category":"stdout","output":"Reloaded 5 of 1164 libraries in 886ms (compile: 48 ms, reload: 267 ms, reassemble: 492 ms).\n"},"event":"output"}
[12:30:54 PM] [DAP] [Info] <== {"seq":1462,"type":"event","body":{"progressId":"hotReload_23"},"event":"dart.progressEnd"}
[12:30:54 PM] [DAP] [Info] <== {"seq":1463,"type":"response","command":"hotReload","request_seq":41,"success":true}
[12:30:54 PM] [DAP] [Info] <== {"seq":1464,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=258010.89ms min=307.75ms max=515714.06ms count=2\n"},"event":"output"}
[12:30:54 PM] [DAP] [Info] <== {"seq":1465,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:30:56 PM] [DAP] [Info] <== {"seq":1466,"type":"event","body":{"category":"stdout","output":"D/InputMethodManager( 4955): showSoftInput() view=io.flutter.embedding.android.FlutterView{8ece927 VFE...... .F....ID 0,0-1440,3036 #1 aid=1073741824} flags=0 reason=SHOW_SOFT_INPUT\n"},"event":"output"}
[12:30:56 PM] [DAP] [Info] <== {"seq":1467,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=1350.59ms min=386.00ms max=2315.17ms count=2\n"},"event":"output"}
[12:30:56 PM] [DAP] [Info] <== {"seq":1468,"type":"event","body":{"category":"stdout","output":"I/AssistStructure( 4955): Flattened final assist data: 436 bytes, containing 1 windows, 3 views\n"},"event":"output"}
[12:30:57 PM] [DAP] [Info] <== {"seq":1469,"type":"event","body":{"category":"stdout","output":"W/OnBackInvokedCallback( 4955): OnBackInvokedCallback is not enabled for the application.\n"},"event":"output"}
[12:30:57 PM] [DAP] [Info] <== {"seq":1470,"type":"event","body":{"category":"stdout","output":"W/OnBackInvokedCallback( 4955): Set 'android:enableOnBackInvokedCallback=\"true\"' in the application manifest.\n"},"event":"output"}
[12:30:57 PM] [DAP] [Info] <== {"seq":1471,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:30:57 PM] [DAP] [Info] <== {"seq":1472,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=416037.66ms min=4.49ms max=1663178.00ms count=4\n"},"event":"output"}
[12:30:57 PM] [DAP] [Info] <== {"seq":1473,"type":"event","body":{"category":"stdout","output":"D/InputMethodManager( 4955): showSoftInput() view=io.flutter.embedding.android.FlutterView{8ece927 VFE...... .F...... 0,0-1440,3036 #1 aid=1073741824} flags=0 reason=SHOW_SOFT_INPUT\n"},"event":"output"}
[12:30:57 PM] [DAP] [Info] <== {"seq":1474,"type":"event","body":{"category":"stdout","output":"D/InputMethodManager( 4955): showSoftInput() view=io.flutter.embedding.android.FlutterView{8ece927 VFE...... .F...... 0,0-1440,3036 #1 aid=1073741824} flags=0 reason=SHOW_SOFT_INPUT\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1475,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=149.94ms min=15.25ms max=503.21ms count=8\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1476,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1477,"type":"event","body":{"category":"stdout","output":"D/InputMethodManager( 4955): showSoftInput() view=io.flutter.embedding.android.FlutterView{8ece927 VFE...... .F...... 0,0-1440,3036 #1 aid=1073741824} flags=0 reason=SHOW_SOFT_INPUT\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1478,"type":"event","body":{"category":"stdout","output":"I/TextInputPlugin( 4955): Composing region changed by the framework. Restarting the input method.\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1479,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): setComposingRegion on inactive InputConnection\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1480,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1481,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1482,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1483,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1484,"type":"event","body":{"category":"stdout","output":"D/InputMethodManager( 4955): showSoftInput() view=io.flutter.embedding.android.FlutterView{8ece927 VFE...... .F...... 0,0-1440,3036 #1 aid=1073741824} flags=0 reason=SHOW_SOFT_INPUT\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1485,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1486,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1487,"type":"event","body":{"category":"stdout","output":"D/InputMethodManager( 4955): showSoftInput() view=io.flutter.embedding.android.FlutterView{8ece927 VFE...... .F...... 0,0-1440,3036 #1 aid=1073741824} flags=0 reason=SHOW_SOFT_INPUT\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1488,"type":"event","body":{"category":"stdout","output":"I/TextInputPlugin( 4955): Composing region changed by the framework. Restarting the input method.\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1489,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1490,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1491,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1492,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1493,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1494,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1495,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:30:58 PM] [DAP] [Info] <== {"seq":1496,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1497,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1498,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=143.99ms min=46.73ms max=484.84ms count=7\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1499,"type":"event","body":{"category":"stdout","output":"D/InputMethodManager( 4955): showSoftInput() view=io.flutter.embedding.android.FlutterView{8ece927 VFE...... .F...... 0,0-1440,3036 #1 aid=1073741824} flags=0 reason=SHOW_SOFT_INPUT\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1500,"type":"event","body":{"category":"stdout","output":"I/TextInputPlugin( 4955): Composing region changed by the framework. Restarting the input method.\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1501,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1502,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1503,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1504,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1505,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1506,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1507,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1508,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1509,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1510,"type":"event","body":{"category":"stdout","output":"D/InputMethodManager( 4955): showSoftInput() view=io.flutter.embedding.android.FlutterView{8ece927 VFE...... .F...... 0,0-1440,3036 #1 aid=1073741824} flags=0 reason=SHOW_SOFT_INPUT\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1511,"type":"event","body":{"category":"stdout","output":"I/TextInputPlugin( 4955): Composing region changed by the framework. Restarting the input method.\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1512,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1513,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1514,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1515,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1516,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1517,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1518,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1519,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1520,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1521,"type":"event","body":{"category":"stdout","output":"D/InputMethodManager( 4955): showSoftInput() view=io.flutter.embedding.android.FlutterView{8ece927 VFE...... .F...... 0,0-1440,3036 #1 aid=1073741824} flags=0 reason=SHOW_SOFT_INPUT\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1522,"type":"event","body":{"category":"stdout","output":"I/TextInputPlugin( 4955): Composing region changed by the framework. Restarting the input method.\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1523,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1524,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1525,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1526,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1527,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1528,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1529,"type":"event","body":{"category":"stdout","output":"D/InputMethodManager( 4955): showSoftInput() view=io.flutter.embedding.android.FlutterView{8ece927 VFE...... .F...... 0,0-1440,3036 #1 aid=1073741824} flags=0 reason=SHOW_SOFT_INPUT\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1530,"type":"event","body":{"category":"stdout","output":"I/TextInputPlugin( 4955): Composing region changed by the framework. Restarting the input method.\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1531,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1532,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1533,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1534,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1535,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:30:59 PM] [DAP] [Info] <== {"seq":1536,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1537,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=112.41ms min=31.58ms max=486.43ms count=11\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1538,"type":"event","body":{"category":"stdout","output":"D/InputMethodManager( 4955): showSoftInput() view=io.flutter.embedding.android.FlutterView{8ece927 VFE...... .F...... 0,0-1440,3036 #1 aid=1073741824} flags=0 reason=SHOW_SOFT_INPUT\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1539,"type":"event","body":{"category":"stdout","output":"I/TextInputPlugin( 4955): Composing region changed by the framework. Restarting the input method.\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1540,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1541,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1542,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1543,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1544,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1545,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1546,"type":"event","body":{"category":"stdout","output":"D/InputMethodManager( 4955): showSoftInput() view=io.flutter.embedding.android.FlutterView{8ece927 VFE...... .F...... 0,0-1440,3036 #1 aid=1073741824} flags=0 reason=SHOW_SOFT_INPUT\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1547,"type":"event","body":{"category":"stdout","output":"I/TextInputPlugin( 4955): Composing region changed by the framework. Restarting the input method.\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1548,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1549,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1550,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1551,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1552,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1553,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1554,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1555,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:31:00 PM] [DAP] [Info] <== {"seq":1556,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1557,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=287.40ms min=66.23ms max=521.42ms count=4\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1558,"type":"event","body":{"category":"stdout","output":"I/flutter ( 4955): Đăng ký\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1559,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWithFailed to handle message\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1560,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWithjava.lang.IllegalArgumentException: Given String is empty or null\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1561,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat com.google.android.gms.common.internal.Preconditions.checkNotEmpty(com.google.android.gms:play-services-basement@@18.2.0:2)\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1562,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat com.google.firebase.auth.FirebaseAuth.createUserWithEmailAndPassword(com.google.firebase:firebase-auth@@22.3.0:9)\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1563,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin.createUserWithEmailAndPassword(FlutterFirebaseAuthPlugin.java:271)\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1564,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.plugins.firebase.auth.GeneratedAndroidFirebaseAuth$FirebaseAuthHostApi$-CC.lambda$setup$6(GeneratedAndroidFirebaseAuth.java:2736)\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1565,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.plugins.firebase.auth.GeneratedAndroidFirebaseAuth$FirebaseAuthHostApi$$ExternalSyntheticLambda9.onMessage(Unknown Source:2)\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1566,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler.onMessage(BasicMessageChannel.java:261)\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1567,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.embedding.engine.dart.DartMessenger.invokeHandler(DartMessenger.java:295)\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1568,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.embedding.engine.dart.DartMessenger.lambda$dispatchMessageToQueue$0$io-flutter-embedding-engine-dart-DartMessenger(DartMessenger.java:322)\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1569,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.embedding.engine.dart.DartMessenger$$ExternalSyntheticLambda0.run(Unknown Source:12)\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1570,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat android.os.Handler.handleCallback(Handler.java:942)\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1571,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat android.os.Handler.dispatchMessage(Handler.java:99)\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1572,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat android.os.Looper.loopOnce(Looper.java:201)\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1573,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat android.os.Looper.loop(Looper.java:288)\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1574,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat android.app.ActivityThread.main(ActivityThread.java:7872)\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1575,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat java.lang.reflect.Method.invoke(Native Method)\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1576,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:548)\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1577,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:936)\n"},"event":"output"}
[12:31:01 PM] [DAP] [Info] <== {"seq":1578,"type":"event","body":{"category":"stdout","output":"I/flutter ( 4955): [firebase_auth/channel-error] Unable to establish connection on channel.\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1579,"type":"event","body":{"category":"stdout","output":"I/flutter ( 4955): Đăng ký\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1580,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWithFailed to handle message\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1581,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWithjava.lang.IllegalArgumentException: Given String is empty or null\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1582,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat com.google.android.gms.common.internal.Preconditions.checkNotEmpty(com.google.android.gms:play-services-basement@@18.2.0:2)\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1583,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat com.google.firebase.auth.FirebaseAuth.createUserWithEmailAndPassword(com.google.firebase:firebase-auth@@22.3.0:9)\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1584,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin.createUserWithEmailAndPassword(FlutterFirebaseAuthPlugin.java:271)\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1585,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.plugins.firebase.auth.GeneratedAndroidFirebaseAuth$FirebaseAuthHostApi$-CC.lambda$setup$6(GeneratedAndroidFirebaseAuth.java:2736)\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1586,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.plugins.firebase.auth.GeneratedAndroidFirebaseAuth$FirebaseAuthHostApi$$ExternalSyntheticLambda9.onMessage(Unknown Source:2)\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1587,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler.onMessage(BasicMessageChannel.java:261)\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1588,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.embedding.engine.dart.DartMessenger.invokeHandler(DartMessenger.java:295)\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1589,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.embedding.engine.dart.DartMessenger.lambda$dispatchMessageToQueue$0$io-flutter-embedding-engine-dart-DartMessenger(DartMessenger.java:322)\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1590,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.embedding.engine.dart.DartMessenger$$ExternalSyntheticLambda0.run(Unknown Source:12)\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1591,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat android.os.Handler.handleCallback(Handler.java:942)\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1592,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat android.os.Handler.dispatchMessage(Handler.java:99)\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1593,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat android.os.Looper.loopOnce(Looper.java:201)\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1594,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat android.os.Looper.loop(Looper.java:288)\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1595,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat android.app.ActivityThread.main(ActivityThread.java:7872)\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1596,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat java.lang.reflect.Method.invoke(Native Method)\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1597,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:548)\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1598,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:936)\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1599,"type":"event","body":{"category":"stdout","output":"I/flutter ( 4955): [firebase_auth/channel-error] Unable to establish connection on channel.\n"},"event":"output"}
[12:31:02 PM] [DAP] [Info] <== {"seq":1600,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=26.84ms min=1.59ms max=269.25ms count=24\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1601,"type":"event","body":{"category":"stdout","output":"I/flutter ( 4955): Đăng ký\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1602,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWithFailed to handle message\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1603,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWithjava.lang.IllegalArgumentException: Given String is empty or null\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1604,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat com.google.android.gms.common.internal.Preconditions.checkNotEmpty(com.google.android.gms:play-services-basement@@18.2.0:2)\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1605,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat com.google.firebase.auth.FirebaseAuth.createUserWithEmailAndPassword(com.google.firebase:firebase-auth@@22.3.0:9)\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1606,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin.createUserWithEmailAndPassword(FlutterFirebaseAuthPlugin.java:271)\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1607,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.plugins.firebase.auth.GeneratedAndroidFirebaseAuth$FirebaseAuthHostApi$-CC.lambda$setup$6(GeneratedAndroidFirebaseAuth.java:2736)\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1608,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.plugins.firebase.auth.GeneratedAndroidFirebaseAuth$FirebaseAuthHostApi$$ExternalSyntheticLambda9.onMessage(Unknown Source:2)\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1609,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler.onMessage(BasicMessageChannel.java:261)\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1610,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.embedding.engine.dart.DartMessenger.invokeHandler(DartMessenger.java:295)\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1611,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.embedding.engine.dart.DartMessenger.lambda$dispatchMessageToQueue$0$io-flutter-embedding-engine-dart-DartMessenger(DartMessenger.java:322)\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1612,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat io.flutter.embedding.engine.dart.DartMessenger$$ExternalSyntheticLambda0.run(Unknown Source:12)\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1613,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat android.os.Handler.handleCallback(Handler.java:942)\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1614,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat android.os.Handler.dispatchMessage(Handler.java:99)\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1615,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat android.os.Looper.loopOnce(Looper.java:201)\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1616,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat android.os.Looper.loop(Looper.java:288)\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1617,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat android.app.ActivityThread.main(ActivityThread.java:7872)\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1618,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat java.lang.reflect.Method.invoke(Native Method)\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1619,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:548)\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1620,"type":"event","body":{"category":"stdout","output":"E/BasicMessageChannel#dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWith\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:936)\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1621,"type":"event","body":{"category":"stdout","output":"I/flutter ( 4955): [firebase_auth/channel-error] Unable to establish connection on channel.\n"},"event":"output"}
[12:31:03 PM] [DAP] [Info] <== {"seq":1622,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=10.53ms min=1.67ms max=134.65ms count=29\n"},"event":"output"}
[12:31:04 PM] [DAP] [Info] <== {"seq":1623,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=42.85ms min=1.74ms max=499.91ms count=17\n"},"event":"output"}
[12:31:05 PM] [DAP] [Info] <== {"seq":1624,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.18ms min=499.12ms max=501.25ms count=2\n"},"event":"output"}
[12:31:07 PM] [DAP] [Info] <== {"seq":1625,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.94ms min=498.78ms max=500.98ms count=3\n"},"event":"output"}
[12:31:08 PM] [DAP] [Info] <== {"seq":1626,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.71ms min=500.47ms max=500.95ms count=2\n"},"event":"output"}
[12:31:09 PM] [DAP] [Info] <== {"seq":1627,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.79ms min=497.76ms max=501.06ms count=3\n"},"event":"output"}
[12:31:11 PM] [DAP] [Info] <== {"seq":1628,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.45ms min=498.82ms max=499.99ms count=3\n"},"event":"output"}
[12:31:12 PM] [DAP] [Info] <== {"seq":1629,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.43ms min=499.85ms max=501.02ms count=2\n"},"event":"output"}
[12:31:13 PM] [DAP] [Info] <== {"seq":1630,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.25ms min=498.85ms max=499.86ms count=3\n"},"event":"output"}
[12:31:14 PM] [DAP] [Info] <== {"seq":1631,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.30ms min=500.08ms max=500.51ms count=2\n"},"event":"output"}
[12:31:16 PM] [DAP] [Info] <== {"seq":1632,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.82ms min=498.63ms max=501.04ms count=3\n"},"event":"output"}
[12:31:17 PM] [DAP] [Info] <== {"seq":1633,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.83ms min=499.72ms max=499.94ms count=2\n"},"event":"output"}
[12:31:18 PM] [DAP] [Info] <== {"seq":1634,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.99ms min=499.91ms max=500.06ms count=2\n"},"event":"output"}
[12:31:19 PM] [DAP] [Info] <== {"seq":1635,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.27ms min=498.38ms max=502.15ms count=2\n"},"event":"output"}
[12:31:20 PM] [DAP] [Info] <== {"seq":1636,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.46ms min=497.74ms max=500.75ms count=3\n"},"event":"output"}
[12:31:21 PM] [DAP] [Info] <== {"seq":1637,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.66ms min=500.44ms max=500.88ms count=2\n"},"event":"output"}
[12:31:23 PM] [DAP] [Info] <== {"seq":1638,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.68ms min=499.46ms max=499.91ms count=3\n"},"event":"output"}
[12:31:24 PM] [DAP] [Info] <== {"seq":1639,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.69ms min=498.88ms max=500.41ms count=3\n"},"event":"output"}
[12:31:26 PM] [DAP] [Info] <== {"seq":1640,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.75ms min=498.30ms max=500.52ms count=3\n"},"event":"output"}
[12:31:27 PM] [DAP] [Info] <== {"seq":1641,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.44ms min=500.29ms max=500.58ms count=2\n"},"event":"output"}
[12:31:28 PM] [DAP] [Info] <== {"seq":1642,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.19ms min=497.87ms max=502.51ms count=2\n"},"event":"output"}
[12:31:29 PM] [DAP] [Info] <== {"seq":1643,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.60ms min=498.48ms max=500.40ms count=3\n"},"event":"output"}
[12:31:31 PM] [DAP] [Info] <== {"seq":1644,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.61ms min=499.03ms max=500.66ms count=3\n"},"event":"output"}
[12:31:32 PM] [DAP] [Info] <== {"seq":1645,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.68ms min=499.45ms max=501.90ms count=2\n"},"event":"output"}
[12:31:33 PM] [DAP] [Info] <== {"seq":1646,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.13ms min=497.78ms max=501.13ms count=3\n"},"event":"output"}
[12:31:34 PM] [DAP] [Info] <== {"seq":1647,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.00ms min=498.52ms max=501.47ms count=2\n"},"event":"output"}
[12:31:35 PM] [DAP] [Info] <== {"seq":1648,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.61ms min=500.54ms max=500.68ms count=2\n"},"event":"output"}
[12:31:37 PM] [DAP] [Info] <== {"seq":1649,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.68ms min=499.50ms max=499.98ms count=3\n"},"event":"output"}
[12:31:38 PM] [DAP] [Info] <== {"seq":1650,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.84ms min=499.15ms max=500.52ms count=2\n"},"event":"output"}
[12:31:39 PM] [DAP] [Info] <== {"seq":1651,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.98ms min=499.41ms max=500.54ms count=2\n"},"event":"output"}
[12:31:40 PM] [DAP] [Info] <== {"seq":1652,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.68ms min=499.11ms max=500.23ms count=3\n"},"event":"output"}
[12:31:42 PM] [DAP] [Info] <== {"seq":1653,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.53ms min=499.08ms max=500.35ms count=3\n"},"event":"output"}
[12:31:43 PM] [DAP] [Info] <== {"seq":1654,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.37ms min=499.48ms max=501.26ms count=2\n"},"event":"output"}
[12:31:44 PM] [DAP] [Info] <== {"seq":1655,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.54ms min=497.74ms max=502.95ms count=3\n"},"event":"output"}
[12:31:46 PM] [DAP] [Info] <== {"seq":1656,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.90ms min=499.32ms max=500.85ms count=3\n"},"event":"output"}
[12:31:47 PM] [DAP] [Info] <== {"seq":1657,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.28ms min=498.77ms max=500.28ms count=3\n"},"event":"output"}
[12:31:48 PM] [DAP] [Info] <== {"seq":1658,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.24ms min=499.65ms max=500.83ms count=2\n"},"event":"output"}
[12:31:49 PM] [DAP] [Info] <== {"seq":1659,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.69ms min=499.36ms max=502.01ms count=2\n"},"event":"output"}
[12:31:51 PM] [DAP] [Info] <== {"seq":1660,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.40ms min=498.16ms max=500.58ms count=3\n"},"event":"output"}
[12:31:52 PM] [DAP] [Info] <== {"seq":1661,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.10ms min=499.23ms max=500.97ms count=2\n"},"event":"output"}
[12:31:53 PM] [DAP] [Info] <== {"seq":1662,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.10ms min=498.96ms max=501.88ms count=3\n"},"event":"output"}
[12:31:55 PM] [DAP] [Info] <== {"seq":1663,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.01ms min=497.19ms max=501.96ms count=3\n"},"event":"output"}
[12:31:56 PM] [DAP] [Info] <== {"seq":1664,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.25ms min=497.82ms max=500.86ms count=3\n"},"event":"output"}
[12:31:57 PM] [DAP] [Info] <== {"seq":1665,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.12ms min=499.50ms max=500.74ms count=2\n"},"event":"output"}
[12:31:58 PM] [DAP] [Info] <== {"seq":1666,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.99ms min=499.70ms max=500.27ms count=2\n"},"event":"output"}
[12:31:59 PM] [DAP] [Info] <== {"seq":1667,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.87ms min=498.38ms max=501.36ms count=2\n"},"event":"output"}
[12:32:01 PM] [DAP] [Info] <== {"seq":1668,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.95ms min=498.68ms max=500.83ms count=3\n"},"event":"output"}
[12:32:02 PM] [DAP] [Info] <== {"seq":1669,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.10ms min=498.36ms max=501.83ms count=2\n"},"event":"output"}
[12:32:03 PM] [DAP] [Info] <== {"seq":1670,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.42ms min=498.05ms max=500.62ms count=3\n"},"event":"output"}
[12:32:04 PM] [DAP] [Info] <== {"seq":1671,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.90ms min=499.30ms max=500.50ms count=2\n"},"event":"output"}
[12:32:05 PM] [DAP] [Info] <== {"seq":1672,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.15ms min=499.06ms max=501.24ms count=2\n"},"event":"output"}
[12:32:06 PM] [DAP] [Info] <== {"seq":1673,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.91ms min=498.25ms max=501.56ms count=2\n"},"event":"output"}
[12:32:07 PM] [DAP] [Info] <== {"seq":1674,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.92ms min=498.17ms max=501.68ms count=2\n"},"event":"output"}
[12:32:08 PM] [DAP] [Info] <== {"seq":1675,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.96ms min=499.45ms max=500.47ms count=2\n"},"event":"output"}
[12:32:09 PM] [DAP] [Info] <== {"seq":1676,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.91ms min=498.81ms max=501.01ms count=2\n"},"event":"output"}
[12:32:11 PM] [DAP] [Info] <== {"seq":1677,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.36ms min=498.39ms max=501.02ms count=3\n"},"event":"output"}
[12:32:12 PM] [DAP] [Info] <== {"seq":1678,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.80ms min=499.68ms max=501.93ms count=2\n"},"event":"output"}
[12:32:13 PM] [DAP] [Info] <== {"seq":1679,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.55ms min=498.54ms max=501.04ms count=3\n"},"event":"output"}
[12:32:14 PM] [DAP] [Info] <== {"seq":1680,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.64ms min=500.33ms max=500.95ms count=2\n"},"event":"output"}
[12:32:16 PM] [DAP] [Info] <== {"seq":1681,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.42ms min=498.95ms max=499.72ms count=3\n"},"event":"output"}
[12:32:17 PM] [DAP] [Info] <== {"seq":1682,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.15ms min=498.96ms max=501.35ms count=2\n"},"event":"output"}
[12:32:18 PM] [DAP] [Info] <== {"seq":1683,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.43ms min=499.15ms max=499.84ms count=3\n"},"event":"output"}
[12:32:19 PM] [DAP] [Info] <== {"seq":1684,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.36ms min=499.54ms max=501.18ms count=2\n"},"event":"output"}
[12:32:21 PM] [DAP] [Info] <== {"seq":1685,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.92ms min=498.65ms max=501.00ms count=3\n"},"event":"output"}
[12:32:22 PM] [DAP] [Info] <== {"seq":1686,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.80ms min=498.83ms max=500.84ms count=3\n"},"event":"output"}
[12:32:23 PM] [DAP] [Info] <== {"seq":1687,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.37ms min=499.66ms max=501.07ms count=2\n"},"event":"output"}
[12:32:24 PM] [DAP] [Info] <== {"seq":1688,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [WatchStream]: (6ce48ba) Stream closed with status: Status{code=CANCELLED, description=Disconnecting idle stream. Timed out waiting for new targets., cause=null}.\n"},"event":"output"}
[12:32:24 PM] [DAP] [Info] <== {"seq":1689,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.15ms min=498.39ms max=501.92ms count=2\n"},"event":"output"}
[12:32:25 PM] [DAP] [Info] <== {"seq":1690,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.88ms min=499.82ms max=499.94ms count=2\n"},"event":"output"}
[12:32:27 PM] [DAP] [Info] <== {"seq":1691,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.46ms min=498.59ms max=499.92ms count=3\n"},"event":"output"}
[12:32:28 PM] [DAP] [Info] <== {"seq":1692,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.68ms min=497.78ms max=500.97ms count=3\n"},"event":"output"}
[12:32:29 PM] [DAP] [Info] <== {"seq":1693,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=501.78ms min=499.73ms max=503.82ms count=2\n"},"event":"output"}
[12:32:31 PM] [DAP] [Info] <== {"seq":1694,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=498.67ms min=496.42ms max=500.60ms count=3\n"},"event":"output"}
[12:32:32 PM] [DAP] [Info] <== {"seq":1695,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=501.06ms min=498.76ms max=503.37ms count=2\n"},"event":"output"}
[12:32:33 PM] [DAP] [Info] <== {"seq":1696,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=498.97ms min=495.87ms max=500.61ms count=3\n"},"event":"output"}
[12:32:35 PM] [DAP] [Info] <== {"seq":1697,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.50ms min=498.08ms max=502.83ms count=3\n"},"event":"output"}
[12:32:36 PM] [DAP] [Info] <== {"seq":1698,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.52ms min=496.18ms max=501.43ms count=3\n"},"event":"output"}
[12:32:38 PM] [DAP] [Info] <== {"seq":1699,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.10ms min=498.22ms max=499.96ms count=3\n"},"event":"output"}
[12:32:39 PM] [DAP] [Info] <== {"seq":1700,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.58ms min=499.75ms max=501.41ms count=2\n"},"event":"output"}
[12:32:40 PM] [DAP] [Info] <== {"seq":1701,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.94ms min=498.99ms max=501.11ms count=3\n"},"event":"output"}
[12:32:41 PM] [DAP] [Info] <== {"seq":1702,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.86ms min=499.79ms max=499.93ms count=2\n"},"event":"output"}
[12:32:42 PM] [DAP] [Info] <== {"seq":1703,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.54ms min=498.57ms max=502.51ms count=2\n"},"event":"output"}
[12:32:44 PM] [DAP] [Info] <== {"seq":1704,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.71ms min=496.69ms max=501.50ms count=3\n"},"event":"output"}
[12:32:45 PM] [DAP] [Info] <== {"seq":1705,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.44ms min=499.13ms max=499.60ms count=3\n"},"event":"output"}
[12:32:46 PM] [DAP] [Info] <== {"seq":1706,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.53ms min=499.09ms max=501.97ms count=2\n"},"event":"output"}
[12:32:48 PM] [DAP] [Info] <== {"seq":1707,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.23ms min=498.52ms max=500.29ms count=3\n"},"event":"output"}
[12:32:49 PM] [DAP] [Info] <== {"seq":1708,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.02ms min=499.80ms max=500.24ms count=2\n"},"event":"output"}
[12:32:50 PM] [DAP] [Info] <== {"seq":1709,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.92ms min=498.60ms max=500.88ms count=3\n"},"event":"output"}
[12:32:51 PM] [DAP] [Info] <== {"seq":1710,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.73ms min=499.25ms max=500.21ms count=2\n"},"event":"output"}
[12:32:52 PM] [DAP] [Info] <== {"seq":1711,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.83ms min=499.60ms max=500.06ms count=2\n"},"event":"output"}
[12:32:53 PM] [DAP] [Info] <== {"seq":1712,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.95ms min=499.22ms max=500.68ms count=2\n"},"event":"output"}
[12:32:55 PM] [DAP] [Info] <== {"seq":1713,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.61ms min=499.04ms max=500.28ms count=3\n"},"event":"output"}
[12:32:56 PM] [DAP] [Info] <== {"seq":1714,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.84ms min=499.23ms max=500.36ms count=3\n"},"event":"output"}
[12:32:58 PM] [DAP] [Info] <== {"seq":1715,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.29ms min=498.77ms max=502.10ms count=3\n"},"event":"output"}
[12:32:59 PM] [DAP] [Info] <== {"seq":1716,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.77ms min=497.98ms max=500.98ms count=3\n"},"event":"output"}
[12:33:01 PM] [DAP] [Info] <== {"seq":1717,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.11ms min=497.99ms max=500.59ms count=3\n"},"event":"output"}
[12:33:02 PM] [DAP] [Info] <== {"seq":1718,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.07ms min=499.28ms max=500.85ms count=2\n"},"event":"output"}
[12:33:03 PM] [DAP] [Info] <== {"seq":1719,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.72ms min=499.32ms max=500.11ms count=3\n"},"event":"output"}
[12:33:04 PM] [DAP] [Info] <== {"seq":1720,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.71ms min=499.55ms max=499.87ms count=2\n"},"event":"output"}
[12:33:05 PM] [DAP] [Info] <== {"seq":1721,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.31ms min=499.71ms max=500.90ms count=2\n"},"event":"output"}
[12:33:07 PM] [DAP] [Info] <== {"seq":1722,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.50ms min=498.34ms max=500.43ms count=3\n"},"event":"output"}
[12:33:08 PM] [DAP] [Info] <== {"seq":1723,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.80ms min=498.94ms max=500.66ms count=2\n"},"event":"output"}
[12:33:09 PM] [DAP] [Info] <== {"seq":1724,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.49ms min=498.69ms max=499.96ms count=3\n"},"event":"output"}
[12:33:10 PM] [DAP] [Info] <== {"seq":1725,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.96ms min=499.57ms max=500.34ms count=2\n"},"event":"output"}
[12:33:11 PM] [DAP] [Info] <== {"seq":1726,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.98ms min=498.41ms max=501.56ms count=2\n"},"event":"output"}
[12:33:12 PM] [DAP] [Info] <== {"seq":1727,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=501.26ms min=500.98ms max=501.54ms count=2\n"},"event":"output"}
[12:33:14 PM] [DAP] [Info] <== {"seq":1728,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=498.70ms min=496.52ms max=501.19ms count=3\n"},"event":"output"}
[12:33:15 PM] [DAP] [Info] <== {"seq":1729,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.41ms min=499.14ms max=501.84ms count=3\n"},"event":"output"}
[12:33:16 PM] [DAP] [Info] <== {"seq":1730,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.19ms min=500.03ms max=500.34ms count=2\n"},"event":"output"}
[12:33:18 PM] [DAP] [Info] <== {"seq":1731,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.79ms min=498.22ms max=501.28ms count=3\n"},"event":"output"}
[12:33:19 PM] [DAP] [Info] <== {"seq":1732,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.58ms min=499.24ms max=499.95ms count=3\n"},"event":"output"}
[12:33:21 PM] [DAP] [Info] <== {"seq":1733,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.66ms min=499.31ms max=500.26ms count=3\n"},"event":"output"}
[12:33:22 PM] [DAP] [Info] <== {"seq":1734,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.02ms min=499.58ms max=500.47ms count=2\n"},"event":"output"}
[12:33:23 PM] [DAP] [Info] <== {"seq":1735,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.41ms min=500.12ms max=500.70ms count=2\n"},"event":"output"}
[12:33:24 PM] [DAP] [Info] <== {"seq":1736,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.27ms min=498.88ms max=499.57ms count=3\n"},"event":"output"}
[12:33:25 PM] [DAP] [Info] <== {"seq":1737,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.14ms min=499.08ms max=501.21ms count=2\n"},"event":"output"}
[12:33:26 PM] [DAP] [Info] <== {"seq":1738,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.91ms min=499.28ms max=500.54ms count=2\n"},"event":"output"}
[12:33:27 PM] [DAP] [Info] <== {"seq":1739,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.38ms min=499.66ms max=501.09ms count=2\n"},"event":"output"}
[12:33:29 PM] [DAP] [Info] <== {"seq":1740,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.24ms min=499.04ms max=499.48ms count=3\n"},"event":"output"}
[12:33:30 PM] [DAP] [Info] <== {"seq":1741,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.10ms min=500.09ms max=500.11ms count=2\n"},"event":"output"}
[12:33:31 PM] [DAP] [Info] <== {"seq":1742,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.12ms min=499.73ms max=500.50ms count=2\n"},"event":"output"}
[12:33:32 PM] [DAP] [Info] <== {"seq":1743,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.75ms min=496.82ms max=501.35ms count=3\n"},"event":"output"}
[12:33:33 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":42}
[12:33:33 PM] [DAP] [Info] <== {"seq":1744,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_24","title":"Flutter"},"event":"dart.progressStart"}
[12:33:33 PM] [DAP] [Info] <== {"seq":1745,"type":"event","body":{"category":"stderr","output":"lib/caidat/login/screen_sign.dart:109:55: Error: The method 'ThongTinTaiKhoan' isn't defined for the class 'ScreenSign'.\n"},"event":"output"}
[12:33:33 PM] [DAP] [Info] <== {"seq":1746,"type":"event","body":{"category":"stderr","output":" - 'ScreenSign' is from 'package:tintuc/caidat/login/screen_sign.dart' ('lib/caidat/login/screen_sign.dart').\n","source":{"name":"-","path":"D:\\Flutter\\tintuc\\-"}},"event":"output"}
[12:33:33 PM] [DAP] [Info] <== {"seq":1747,"type":"event","body":{"category":"stderr","output":"Try correcting the name to the name of an existing method, or defining a method named 'ThongTinTaiKhoan'.\n","source":{"name":"Try","path":"D:\\Flutter\\tintuc\\Try"}},"event":"output"}
[12:33:33 PM] [DAP] [Info] <== {"seq":1748,"type":"event","body":{"category":"stderr","output":""},"event":"output"}
[12:33:33 PM] [DAP] [Info] <== {"seq":1749,"type":"event","body":{"category":"stderr","output":"                                builder: (context) => ThongTinTaiKhoan()),\n"},"event":"output"}
[12:33:33 PM] [DAP] [Info] <== {"seq":1750,"type":"event","body":{"category":"stderr","output":"                                                      ^^^^^^^^^^^^^^^^\n"},"event":"output"}
[12:33:33 PM] [DAP] [Info] <== {"seq":1751,"type":"event","body":{"category":"stderr","output":""},"event":"output"}
[12:33:33 PM] [DAP] [Info] <== {"seq":1752,"type":"event","body":{"progressId":"hotReload_24"},"event":"dart.progressEnd"}
[12:33:33 PM] [DAP] [Info] <== {"seq":1753,"type":"response","command":"hotReload","request_seq":42,"success":true}
[12:33:33 PM] [DAP] [Info] <== {"seq":1754,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.17ms min=498.39ms max=501.95ms count=2\n"},"event":"output"}
[12:33:35 PM] [DAP] [Info] <== {"seq":1755,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.72ms min=498.61ms max=501.08ms count=3\n"},"event":"output"}
[12:33:35 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":43}
[12:33:35 PM] [DAP] [Info] <== {"seq":1756,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_25","title":"Flutter"},"event":"dart.progressStart"}
[12:33:36 PM] [DAP] [Info] <== {"seq":1757,"type":"event","body":{"category":"stderr","output":"lib/caidat/login/screen_sign.dart:109:55: Error: The method 'ThongTinTaiKhoan' isn't defined for the class 'ScreenSign'.\n - 'ScreenSign' is from 'package:tintuc/caidat/login/screen_sign.dart' ('lib/caidat/login/screen_sign.dart').\n"},"event":"output"}
[12:33:36 PM] [DAP] [Info] <== {"seq":1758,"type":"event","body":{"category":"stderr","output":"Try correcting the name to the name of an existing method, or defining a method named 'ThongTinTaiKhoan'.\n","source":{"name":"Try","path":"D:\\Flutter\\tintuc\\Try"}},"event":"output"}
[12:33:36 PM] [DAP] [Info] <== {"seq":1759,"type":"event","body":{"category":"stderr","output":""},"event":"output"}
[12:33:36 PM] [DAP] [Info] <== {"seq":1760,"type":"event","body":{"category":"stderr","output":"                                builder: (context) => ThongTinTaiKhoan()),\n"},"event":"output"}
[12:33:36 PM] [DAP] [Info] <== {"seq":1761,"type":"event","body":{"category":"stderr","output":"                                                      ^^^^^^^^^^^^^^^^\n"},"event":"output"}
[12:33:36 PM] [DAP] [Info] <== {"seq":1762,"type":"event","body":{"category":"stderr","output":""},"event":"output"}
[12:33:36 PM] [DAP] [Info] <== {"seq":1763,"type":"event","body":{"progressId":"hotReload_25"},"event":"dart.progressEnd"}
[12:33:36 PM] [DAP] [Info] <== {"seq":1764,"type":"response","command":"hotReload","request_seq":43,"success":true}
[12:33:36 PM] [DAP] [Info] <== {"seq":1765,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.90ms min=498.81ms max=500.99ms count=2\n"},"event":"output"}
[12:33:37 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":44}
[12:33:37 PM] [DAP] [Info] <== {"seq":1766,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_26","title":"Flutter"},"event":"dart.progressStart"}
[12:33:38 PM] [DAP] [Info] <== {"seq":1767,"type":"event","body":{"category":"stdout","output":"I/TextInputPlugin( 4955): Composing region changed by the framework. Restarting the input method.\n"},"event":"output"}
[12:33:38 PM] [DAP] [Info] <== {"seq":1768,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:33:38 PM] [DAP] [Info] <== {"seq":1769,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:33:38 PM] [DAP] [Info] <== {"seq":1770,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:33:38 PM] [DAP] [Info] <== {"seq":1771,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:33:38 PM] [DAP] [Info] <== {"seq":1772,"type":"event","body":{"category":"stdout","output":"Reloaded 6 of 1165 libraries in 985ms (compile: 62 ms, reload: 283 ms, reassemble: 573 ms).\n"},"event":"output"}
[12:33:38 PM] [DAP] [Info] <== {"seq":1773,"type":"event","body":{"progressId":"hotReload_26"},"event":"dart.progressEnd"}
[12:33:38 PM] [DAP] [Info] <== {"seq":1774,"type":"response","command":"hotReload","request_seq":44,"success":true}
[12:33:38 PM] [DAP] [Info] <== {"seq":1775,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=766.26ms min=499.68ms max=1299.08ms count=3\n"},"event":"output"}
[12:33:39 PM] [DAP] [Info] <== {"seq":1776,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:33:39 PM] [DAP] [Info] <== {"seq":1777,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=132.35ms min=22.90ms max=498.97ms count=9\n"},"event":"output"}
[12:33:40 PM] [DAP] [Info] <== {"seq":1778,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.78ms min=499.18ms max=502.38ms count=2\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1779,"type":"event","body":{"category":"stdout","output":"D/InputMethodManager( 4955): showSoftInput() view=io.flutter.embedding.android.FlutterView{8ece927 VFE...... .F...... 0,0-1440,3036 #1 aid=1073741824} flags=0 reason=SHOW_SOFT_INPUT\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1780,"type":"event","body":{"category":"stdout","output":"D/InputMethodManager( 4955): showSoftInput() view=io.flutter.embedding.android.FlutterView{8ece927 VFE...... .F...... 0,0-1440,3036 #1 aid=1073741824} flags=0 reason=SHOW_SOFT_INPUT\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1781,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1782,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1783,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=398.33ms min=196.98ms max=499.04ms count=3\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1784,"type":"event","body":{"category":"stdout","output":"D/InputMethodManager( 4955): showSoftInput() view=io.flutter.embedding.android.FlutterView{8ece927 VFE...... .F...... 0,0-1440,3036 #1 aid=1073741824} flags=0 reason=SHOW_SOFT_INPUT\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1785,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1786,"type":"event","body":{"category":"stdout","output":"D/InputMethodManager( 4955): showSoftInput() view=io.flutter.embedding.android.FlutterView{8ece927 VFE...... .F...... 0,0-1440,3036 #1 aid=1073741824} flags=0 reason=SHOW_SOFT_INPUT\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1787,"type":"event","body":{"category":"stdout","output":"I/TextInputPlugin( 4955): Composing region changed by the framework. Restarting the input method.\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1788,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1789,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1790,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1791,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1792,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1793,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1794,"type":"event","body":{"category":"stdout","output":"D/InputMethodManager( 4955): showSoftInput() view=io.flutter.embedding.android.FlutterView{8ece927 VFE...... .F...... 0,0-1440,3036 #1 aid=1073741824} flags=0 reason=SHOW_SOFT_INPUT\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1795,"type":"event","body":{"category":"stdout","output":"I/TextInputPlugin( 4955): Composing region changed by the framework. Restarting the input method.\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1796,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1797,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1798,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1799,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getTextBeforeCursor on inactive InputConnection\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1800,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:33:42 PM] [DAP] [Info] <== {"seq":1801,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:33:43 PM] [DAP] [Info] <== {"seq":1802,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=144.51ms min=14.43ms max=499.27ms count=10\n"},"event":"output"}
[12:33:44 PM] [DAP] [Info] <== {"seq":1803,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.22ms min=499.63ms max=500.82ms count=2\n"},"event":"output"}
[12:33:46 PM] [DAP] [Info] <== {"seq":1804,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.89ms min=499.72ms max=500.05ms count=3\n"},"event":"output"}
[12:33:47 PM] [DAP] [Info] <== {"seq":1805,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.13ms min=499.47ms max=500.78ms count=2\n"},"event":"output"}
[12:33:48 PM] [DAP] [Info] <== {"seq":1806,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.44ms min=497.50ms max=501.04ms count=3\n"},"event":"output"}
[12:33:50 PM] [DAP] [Info] <== {"seq":1807,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.27ms min=499.05ms max=499.71ms count=3\n"},"event":"output"}
[12:33:51 PM] [DAP] [Info] <== {"seq":1808,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.91ms min=498.80ms max=501.02ms count=2\n"},"event":"output"}
[12:33:52 PM] [DAP] [Info] <== {"seq":1809,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.46ms min=498.61ms max=502.32ms count=2\n"},"event":"output"}
[12:33:53 PM] [DAP] [Info] <== {"seq":1810,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.29ms min=499.09ms max=499.39ms count=3\n"},"event":"output"}
[12:33:54 PM] [DAP] [Info] <== {"seq":1811,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.24ms min=499.50ms max=500.97ms count=2\n"},"event":"output"}
[12:33:56 PM] [DAP] [Info] <== {"seq":1812,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.70ms min=499.40ms max=500.21ms count=3\n"},"event":"output"}
[12:33:57 PM] [DAP] [Info] <== {"seq":1813,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.35ms min=497.78ms max=502.93ms count=2\n"},"event":"output"}
[12:33:58 PM] [DAP] [Info] <== {"seq":1814,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.05ms min=499.32ms max=500.71ms count=3\n"},"event":"output"}
[12:34:00 PM] [DAP] [Info] <== {"seq":1815,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.65ms min=497.51ms max=501.42ms count=3\n"},"event":"output"}
[12:34:01 PM] [DAP] [Info] <== {"seq":1816,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.18ms min=499.72ms max=500.64ms count=2\n"},"event":"output"}
[12:34:02 PM] [DAP] [Info] <== {"seq":1817,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.59ms min=499.08ms max=499.92ms count=3\n"},"event":"output"}
[12:34:03 PM] [DAP] [Info] <== {"seq":1818,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.26ms min=500.07ms max=500.45ms count=2\n"},"event":"output"}
[12:34:05 PM] [DAP] [Info] <== {"seq":1819,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.69ms min=499.34ms max=500.03ms count=3\n"},"event":"output"}
[12:34:06 PM] [DAP] [Info] <== {"seq":1820,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.55ms min=500.13ms max=500.97ms count=2\n"},"event":"output"}
[12:34:07 PM] [DAP] [Info] <== {"seq":1821,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.85ms min=498.52ms max=501.66ms count=3\n"},"event":"output"}
[12:34:08 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":45}
[12:34:08 PM] [DAP] [Info] <== {"seq":1822,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_27","title":"Flutter"},"event":"dart.progressStart"}
[12:34:09 PM] [DAP] [Info] <== {"seq":1823,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.68ms min=498.44ms max=500.42ms count=3\n"},"event":"output"}
[12:34:09 PM] [DAP] [Info] <== {"seq":1824,"type":"event","body":{"category":"stdout","output":"I/TextInputPlugin( 4955): Composing region changed by the framework. Restarting the input method.\n"},"event":"output"}
[12:34:09 PM] [DAP] [Info] <== {"seq":1825,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:34:09 PM] [DAP] [Info] <== {"seq":1826,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:34:09 PM] [DAP] [Info] <== {"seq":1827,"type":"event","body":{"category":"stdout","output":"W/RemoteInputConnectionImpl( 4955): getSurroundingText on inactive InputConnection\n"},"event":"output"}
[12:34:09 PM] [DAP] [Info] <== {"seq":1828,"type":"event","body":{"category":"stdout","output":"D/InsetsController( 4955): show(ime(), fromIme=true)\n"},"event":"output"}
[12:34:09 PM] [DAP] [Info] <== {"seq":1829,"type":"event","body":{"category":"stdout","output":"Reloaded 1 of 1165 libraries in 974ms (compile: 33 ms, reload: 287 ms, reassemble: 601 ms).\n"},"event":"output"}
[12:34:09 PM] [DAP] [Info] <== {"seq":1830,"type":"event","body":{"progressId":"hotReload_27"},"event":"dart.progressEnd"}
[12:34:09 PM] [DAP] [Info] <== {"seq":1831,"type":"response","command":"hotReload","request_seq":45,"success":true}
[12:34:10 PM] [DAP] [Info] <== {"seq":1832,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=329.56ms min=12.92ms max=960.26ms count=3\n"},"event":"output"}
[12:34:10 PM] [DAP] [Info] <== {"seq":1833,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:34:11 PM] [DAP] [Info] <== {"seq":1834,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=157.86ms min=1.79ms max=501.80ms count=9\n"},"event":"output"}
[12:34:13 PM] [DAP] [Info] <== {"seq":1835,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.49ms min=498.09ms max=500.69ms count=3\n"},"event":"output"}
[12:34:14 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":46}
[12:34:14 PM] [DAP] [Info] <== {"seq":1836,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_28","title":"Flutter"},"event":"dart.progressStart"}
[12:34:15 PM] [DAP] [Info] <== {"seq":1837,"type":"event","body":{"category":"stdout","output":"Reloaded 1 of 1165 libraries in 883ms (compile: 43 ms, reload: 319 ms, reassemble: 463 ms).\n"},"event":"output"}
[12:34:15 PM] [DAP] [Info] <== {"seq":1838,"type":"event","body":{"progressId":"hotReload_28"},"event":"dart.progressEnd"}
[12:34:15 PM] [DAP] [Info] <== {"seq":1839,"type":"response","command":"hotReload","request_seq":46,"success":true}
[12:34:15 PM] [DAP] [Info] <== {"seq":1840,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=648.47ms min=499.21ms max=946.62ms count=3\n"},"event":"output"}
[12:34:15 PM] [DAP] [Info] <== {"seq":1841,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:34:16 PM] [DAP] [Info] <== {"seq":1842,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=263.22ms min=53.82ms max=499.72ms count=4\n"},"event":"output"}
[12:34:17 PM] [DAP] [Info] <== {"seq":1843,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.04ms min=499.73ms max=500.35ms count=2\n"},"event":"output"}
[12:34:18 PM] [DAP] [Info] <== {"seq":1844,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.16ms min=499.78ms max=500.54ms count=2\n"},"event":"output"}
[12:34:19 PM] [DAP] [Info] <== {"seq":1845,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.06ms min=498.97ms max=500.72ms count=3\n"},"event":"output"}
[12:34:21 PM] [DAP] [Info] <== {"seq":1846,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.68ms min=498.40ms max=500.39ms count=3\n"},"event":"output"}
[12:34:22 PM] [DAP] [Info] <== {"seq":1847,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.41ms min=499.17ms max=501.75ms count=3\n"},"event":"output"}
[12:34:24 PM] [DAP] [Info] <== {"seq":1848,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.40ms min=498.30ms max=500.05ms count=3\n"},"event":"output"}
[12:34:25 PM] [DAP] [Info] <== {"seq":1849,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.94ms min=499.49ms max=500.62ms count=3\n"},"event":"output"}
[12:34:26 PM] [DAP] [Info] <== {"seq":1850,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.74ms min=500.02ms max=501.46ms count=2\n"},"event":"output"}
[12:34:28 PM] [DAP] [Info] <== {"seq":1851,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.26ms min=498.16ms max=500.77ms count=3\n"},"event":"output"}
[12:34:29 PM] [DAP] [Info] <== {"seq":1852,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.90ms min=498.51ms max=501.30ms count=2\n"},"event":"output"}
[12:34:30 PM] [DAP] [Info] <== {"seq":1853,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.76ms min=500.21ms max=501.31ms count=2\n"},"event":"output"}
[12:34:31 PM] [DAP] [Info] <== {"seq":1854,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.32ms min=498.67ms max=500.56ms count=3\n"},"event":"output"}
[12:34:33 PM] [DAP] [Info] <== {"seq":1855,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.83ms min=499.57ms max=500.28ms count=3\n"},"event":"output"}
[12:34:34 PM] [DAP] [Info] <== {"seq":1856,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.44ms min=500.05ms max=500.84ms count=2\n"},"event":"output"}
[12:34:35 PM] [DAP] [Info] <== {"seq":1857,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.37ms min=500.23ms max=500.50ms count=2\n"},"event":"output"}
[12:34:36 PM] [DAP] [Info] <== {"seq":1858,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.60ms min=499.04ms max=500.43ms count=3\n"},"event":"output"}
[12:34:38 PM] [DAP] [Info] <== {"seq":1859,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.34ms min=498.23ms max=500.08ms count=3\n"},"event":"output"}
[12:34:39 PM] [DAP] [Info] <== {"seq":1860,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=501.27ms min=501.26ms max=501.28ms count=2\n"},"event":"output"}
[12:34:40 PM] [DAP] [Info] <== {"seq":1861,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=498.87ms min=496.93ms max=501.13ms count=3\n"},"event":"output"}
[12:34:41 PM] [DAP] [Info] <== {"seq":1862,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.36ms min=499.85ms max=500.87ms count=2\n"},"event":"output"}
[12:34:42 PM] [DAP] [Info] <== {"seq":1863,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.29ms min=499.41ms max=501.17ms count=2\n"},"event":"output"}
[12:34:44 PM] [DAP] [Info] <== {"seq":1864,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.18ms min=498.82ms max=501.27ms count=3\n"},"event":"output"}
[12:34:45 PM] [DAP] [Info] <== {"seq":1865,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.21ms min=498.11ms max=500.26ms count=3\n"},"event":"output"}
[12:34:46 PM] [DAP] [Info] <== {"seq":1866,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=499.97ms min=498.55ms max=501.39ms count=2\n"},"event":"output"}
[12:34:47 PM] [DAP] [Info] <== {"seq":1867,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=500.37ms min=499.35ms max=501.40ms count=2\n"},"event":"output"}
[12:34:49 PM] [DAP] [Info] <== {"seq":1868,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=498.94ms min=497.13ms max=502.52ms count=3\n"},"event":"output"}
[12:34:49 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":47}
[12:34:49 PM] [DAP] [Info] <== {"seq":1869,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_29","title":"Flutter"},"event":"dart.progressStart"}
[12:34:50 PM] [DAP] [Info] <== {"seq":1870,"type":"event","body":{"category":"stdout","output":"Reloaded 5 of 1165 libraries in 846ms (compile: 45 ms, reload: 228 ms, reassemble: 520 ms).\n"},"event":"output"}
[12:34:50 PM] [DAP] [Info] <== {"seq":1871,"type":"event","body":{"progressId":"hotReload_29"},"event":"dart.progressEnd"}
[12:34:50 PM] [DAP] [Info] <== {"seq":1872,"type":"response","command":"hotReload","request_seq":47,"success":true}
[12:34:50 PM] [DAP] [Info] <== {"seq":1873,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=23228.67ms min=1.37ms max=232251.03ms count=10\n"},"event":"output"}
[12:34:50 PM] [DAP] [Info] <== {"seq":1874,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=736.27ms min=502.85ms max=969.68ms count=2\n"},"event":"output"}
[12:34:50 PM] [DAP] [Info] <== {"seq":1875,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:34:58 PM] [DAP] [Info] ==> {"command":"hotReload","arguments":{"debounce":true,"onlyFlutter":true,"reason":"save"},"type":"request","seq":48}
[12:34:58 PM] [DAP] [Info] <== {"seq":1876,"type":"event","body":{"message":"Hot reloading…","progressId":"hotReload_30","title":"Flutter"},"event":"dart.progressStart"}
[12:34:59 PM] [DAP] [Info] <== {"seq":1877,"type":"event","body":{"category":"stdout","output":"Reloaded 1 of 1165 libraries in 754ms (compile: 17 ms, reload: 244 ms, reassemble: 443 ms).\n"},"event":"output"}
[12:34:59 PM] [DAP] [Info] <== {"seq":1878,"type":"event","body":{"progressId":"hotReload_30"},"event":"dart.progressEnd"}
[12:34:59 PM] [DAP] [Info] <== {"seq":1879,"type":"response","command":"hotReload","request_seq":48,"success":true}
[12:34:59 PM] [DAP] [Info] <== {"seq":1880,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=1506.41ms min=9.56ms max=8768.00ms count=6\n"},"event":"output"}
[12:34:59 PM] [DAP] [Info] <== {"seq":1881,"type":"event","body":{"category":"stdout","output":"W/Firestore( 4955): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:35:01 PM] [DAP] [Info] <== {"seq":1882,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 4955): app_time_stats: avg=954.05ms min=352.17ms max=1555.93ms count=2\n"},"event":"output"}
[12:35:13 PM] [DAP] [Info] ==> {"command":"terminate","arguments":{"restart":false},"type":"request","seq":49}
[12:35:13 PM] [DAP] [Info] <== {"seq":1883,"type":"event","body":{"category":"stdout","output":"Application finished.\n"},"event":"output"}
[12:35:13 PM] [DAP] [Info] <== {"seq":1884,"type":"event","body":{"output":"\nExited (-1).\n"},"event":"output"}
[12:35:13 PM] [DAP] [Info] <== {"seq":1885,"type":"event","body":{},"event":"terminated"}
[12:35:13 PM] [DAP] [Info] <== {"seq":1886,"type":"response","command":"terminate","request_seq":49,"success":true}
[12:35:13 PM] [DAP] [Info] ==> {"command":"disconnect","arguments":{"restart":false},"type":"request","seq":50}
[12:35:13 PM] [DAP] [Info] <== {"seq":1887,"type":"response","command":"disconnect","request_seq":50,"success":true}
[12:35:13 PM] [DAP] [Info] Stopping debug session 454e343a-54f3-4faf-a91b-9ec4fc428a33
[12:35:13 PM] [DAP] [Info] Debug session 454e343a-54f3-4faf-a91b-9ec4fc428a33 errored: {}
[12:35:13 PM] [DAP] [Info] Debug session 454e343a-54f3-4faf-a91b-9ec4fc428a33 exit: code: 1, signal: undefined
[12:39:45 PM] [DAP] [Info] Starting debug session 7bd0aae7-194c-40e6-9a93-40bb458a4948
[12:39:45 PM] [DAP] [Info] ==> {"command":"initialize","arguments":{"clientID":"vscode","clientName":"Visual Studio Code","adapterID":"dart","pathFormat":"path","linesStartAt1":true,"columnsStartAt1":true,"supportsVariableType":true,"supportsVariablePaging":true,"supportsRunInTerminalRequest":true,"locale":"en","supportsProgressReporting":true,"supportsInvalidatedEvent":true,"supportsMemoryReferences":true,"supportsArgsCanBeInterpretedByShell":true,"supportsMemoryEvent":true,"supportsStartDebuggingRequest":true},"type":"request","seq":1}
[12:39:46 PM] [DAP] [Info] <== {"seq":1,"type":"response","body":{"exceptionBreakpointFilters":[{"default":false,"filter":"All","label":"All Exceptions"},{"default":true,"filter":"Unhandled","label":"Uncaught Exceptions"}],"supportsClipboardContext":true,"supportsConditionalBreakpoints":true,"supportsConfigurationDoneRequest":true,"supportsDelayedStackTraceLoading":true,"supportsEvaluateForHovers":true,"supportsLogPoints":true,"supportsRestartRequest":false,"supportsTerminateRequest":true,"supportsValueFormattingOptions":true},"command":"initialize","request_seq":1,"success":true}
[12:39:46 PM] [DAP] [Info] <== {"seq":2,"type":"event","body":{},"event":"initialized"}
[12:39:46 PM] [DAP] [Info] ==> {"command":"launch","arguments":{"name":"Dart  (Pixel 6 Pro API 33)","noDebug":false,"request":"launch","type":"dart","program":"D:\\Flutter\\tintuc\\lib\\main.dart","dartCodeDebugSessionID":"session-f4002","projectRootPath":"D:\\Flutter\\tintuc","cwd":"D:\\Flutter\\tintuc","deviceId":"emulator-5554","deviceName":"Pixel 6 Pro API 33 (android-x64)","toolEnv":{"FLUTTER_HOST":"VSCode","PUB_ENVIRONMENT":"vscode.dart-code","FLUTTER_ROOT":"C:\\src\\flutter"},"sendLogsToClient":false,"sendCustomProgressEvents":true,"allowAnsiColorOutput":true,"additionalProjectPaths":["D:\\Flutter\\tintuc"],"args":[],"vmAdditionalArgs":[],"toolArgs":["-d","emulator-5554","--devtools-server-address","http://127.0.0.1:9100/"],"vmServicePort":0,"dartSdkPath":"C:\\src\\flutter\\bin\\cache\\dart-sdk","vmServiceLogFile":"D:\\Flutter\\tintuc\\logs\\observatory.txt","maxLogLineLength":2000,"dartTestLogFile":"D:\\Flutter\\tintuc\\logs\\dart_test.txt","debugSdkLibraries":true,"debugExternalPackageLibraries":true,"showDartDeveloperLogs":true,"evaluateGettersInDebugViews":true,"showGettersInDebugViews":true,"evaluateToStringInDebugViews":true,"flutterSdkPath":"C:\\src\\flutter","useInspectorNotificationsForWidgetErrors":true,"flutterRunLogFile":"D:\\Flutter\\tintuc\\logs\\flutter_run.txt","flutterTestLogFile":"D:\\Flutter\\tintuc\\logs\\flutter_test.txt","showMemoryUsage":false,"debuggerType":2,"__sessionId":"7bd0aae7-194c-40e6-9a93-40bb458a4948"},"type":"request","seq":2}
[12:39:46 PM] [DAP] [Info] ==> {"command":"setBreakpoints","arguments":{"source":{"name":"postcats.dart","path":"d:\\Flutter\\tintuc\\lib\\media\\postcats.dart"},"lines":[86],"breakpoints":[{"line":86}],"sourceModified":false},"type":"request","seq":3}
[12:39:46 PM] [DAP] [Info] ==> {"command":"setExceptionBreakpoints","arguments":{"filters":["Unhandled"]},"type":"request","seq":4}
[12:39:46 PM] [DAP] [Info] <== {"seq":3,"type":"response","body":{"breakpoints":[{"id":100000,"verified":false}]},"command":"setBreakpoints","request_seq":3,"success":true}
[12:39:46 PM] [DAP] [Info] <== {"seq":4,"type":"response","body":{},"command":"setExceptionBreakpoints","request_seq":4,"success":true}
[12:39:46 PM] [DAP] [Info] ==> {"command":"configurationDone","type":"request","seq":5}
[12:39:46 PM] [DAP] [Info] <== {"seq":5,"type":"response","command":"configurationDone","request_seq":5,"success":true}
[12:39:46 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":6}
[12:39:46 PM] [DAP] [Info] <== {"seq":6,"type":"event","body":{"message":"Launching…","progressId":"launch_1","title":"Flutter"},"event":"dart.progressStart"}
[12:39:46 PM] [DAP] [Info] <== {"seq":7,"type":"response","command":"launch","request_seq":2,"success":true}
[12:39:46 PM] [DAP] [Info] <== {"seq":8,"type":"response","body":{"threads":[]},"command":"threads","request_seq":6,"success":true}
[12:39:47 PM] [DAP] [Info] <== {"seq":9,"type":"event","body":{"capabilities":{"supportsRestartRequest":true}},"event":"capabilities"}
[12:39:47 PM] [DAP] [Info] <== {"seq":10,"type":"event","body":{"appId":"f5c29194-9a73-4542-8411-5e1f0852f5da","deviceId":"emulator-5554","directory":"D:\\Flutter\\tintuc","supportsRestart":true,"launchMode":"run","mode":"debug"},"event":"flutter.appStart"}
[12:39:47 PM] [DAP] [Info] <== {"seq":11,"type":"event","body":{"category":"console","output":"Launching lib\\main.dart on sdk gphone x86 64 in debug mode...\n"},"event":"output"}
[12:39:47 PM] [DAP] [Info] <== {"seq":12,"type":"event","body":{"category":"console","output":"Building with Flutter multidex support enabled.\n"},"event":"output"}
[12:39:59 PM] [DAP] [Info] <== {"seq":13,"type":"event","body":{"category":"console","output":"√  Built build\\app\\outputs\\flutter-apk\\app-debug.apk.\n"},"event":"output"}
[12:40:06 PM] [DAP] [Info] <== {"seq":14,"type":"event","body":{"progressId":"launch_1"},"event":"dart.progressEnd"}
[12:40:06 PM] [DAP] [Info] <== {"seq":15,"type":"event","body":{"output":"Connecting to VM Service at ws://127.0.0.1:55902/eux4flDTq3k=/ws\n"},"event":"output"}
[12:40:06 PM] [DAP] [Info] <== {"seq":16,"type":"event","body":{"vmServiceUri":"ws://127.0.0.1:55902/eux4flDTq3k=/ws"},"event":"dart.debuggerUris"}
[12:40:06 PM] [DAP] [Info] <== {"seq":17,"type":"event","body":{"reason":"started","threadId":4829968119790563},"event":"thread"}
[12:40:06 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":7}
[12:40:06 PM] [DAP] [Info] <== {"seq":18,"type":"response","body":{"threads":[{"id":4829968119790563,"name":"main"}]},"command":"threads","request_seq":7,"success":true}
[12:40:06 PM] [DAP] [Info] <== {"seq":19,"type":"event","body":{"category":"stdout","output":"I/.example.tintuc( 7058): Compiler allocated 4533KB to compile void android.view.ViewRootImpl.performTraversals()\n"},"event":"output"}
[12:40:06 PM] [DAP] [Info] <== {"seq":20,"type":"event","body":{},"event":"flutter.appStarted"}
[12:40:06 PM] [DAP] [Info] <== {"seq":21,"type":"event","body":{"service":"reloadSources","method":"s0.reloadSources"},"event":"dart.serviceRegistered"}
[12:40:06 PM] [DAP] [Info] <== {"seq":22,"type":"event","body":{"service":"hotRestart","method":"s0.hotRestart"},"event":"dart.serviceRegistered"}
[12:40:06 PM] [DAP] [Info] <== {"seq":23,"type":"event","body":{"service":"flutterVersion","method":"s0.flutterVersion"},"event":"dart.serviceRegistered"}
[12:40:06 PM] [DAP] [Info] <== {"seq":24,"type":"event","body":{"service":"compileExpression","method":"s0.compileExpression"},"event":"dart.serviceRegistered"}
[12:40:06 PM] [DAP] [Info] <== {"seq":25,"type":"event","body":{"service":"flutterMemoryInfo","method":"s0.flutterMemoryInfo"},"event":"dart.serviceRegistered"}
[12:40:06 PM] [DAP] [Info] <== {"seq":26,"type":"event","body":{"service":"flutterGetSkSL","method":"s0.flutterGetSkSL"},"event":"dart.serviceRegistered"}
[12:40:06 PM] [DAP] [Info] <== {"seq":27,"type":"event","body":{"service":"launchDevTools","method":"s2.launchDevTools"},"event":"dart.serviceRegistered"}
[12:40:06 PM] [DAP] [Info] <== {"seq":28,"type":"event","body":{"extensionRPC":"ext.flutter.reassemble","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":29,"type":"event","body":{"extensionRPC":"ext.flutter.exit","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":30,"type":"event","body":{"extensionRPC":"ext.flutter.connectedVmServiceUri","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":31,"type":"event","body":{"extensionRPC":"ext.flutter.activeDevToolsServerAddress","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":32,"type":"event","body":{"extensionRPC":"ext.flutter.platformOverride","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":33,"type":"event","body":{"extensionRPC":"ext.flutter.brightnessOverride","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":34,"type":"event","body":{"extensionRPC":"ext.flutter.timeDilation","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":35,"type":"event","body":{"extensionRPC":"ext.flutter.evict","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":36,"type":"event","body":{"extensionRPC":"ext.flutter.invertOversizedImages","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":37,"type":"event","body":{"extensionRPC":"ext.flutter.debugPaint","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":38,"type":"event","body":{"extensionRPC":"ext.flutter.debugPaintBaselinesEnabled","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":39,"type":"event","body":{"extensionRPC":"ext.flutter.repaintRainbow","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":40,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpLayerTree","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":41,"type":"event","body":{"extensionRPC":"ext.flutter.debugDisableClipLayers","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":42,"type":"event","body":{"extensionRPC":"ext.flutter.debugDisablePhysicalShapeLayers","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":43,"type":"event","body":{"extensionRPC":"ext.flutter.debugDisableOpacityLayers","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":44,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpRenderTree","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":45,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpSemanticsTreeInTraversalOrder","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":46,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpSemanticsTreeInInverseHitTestOrder","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":47,"type":"event","body":{"extensionRPC":"ext.flutter.profileRenderObjectPaints","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":48,"type":"event","body":{"extensionRPC":"ext.flutter.profileRenderObjectLayouts","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":49,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpApp","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":50,"type":"event","body":{"extensionRPC":"ext.flutter.debugDumpFocusTree","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":51,"type":"event","body":{"extensionRPC":"ext.flutter.showPerformanceOverlay","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":52,"type":"event","body":{"extensionRPC":"ext.flutter.didSendFirstFrameEvent","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":53,"type":"event","body":{"extensionRPC":"ext.flutter.didSendFirstFrameRasterizedEvent","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":54,"type":"event","body":{"extensionRPC":"ext.flutter.profileWidgetBuilds","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":55,"type":"event","body":{"extensionRPC":"ext.flutter.profileUserWidgetBuilds","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":56,"type":"event","body":{"extensionRPC":"ext.flutter.debugAllowBanner","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":57,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.structuredErrors","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":58,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.show","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":59,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.trackRebuildDirtyWidgets","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":60,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.trackRepaintWidgets","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":61,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.disposeAllGroups","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":62,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.disposeGroup","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":63,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.isWidgetTreeReady","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":64,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.disposeId","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":65,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setPubRootDirectories","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":66,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.addPubRootDirectories","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":67,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.removePubRootDirectories","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":68,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getPubRootDirectories","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":69,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setSelectionById","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":70,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getParentChain","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":71,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getProperties","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":72,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getChildren","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":73,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getChildrenSummaryTree","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":74,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getChildrenDetailsSubtree","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":75,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getRootWidget","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":76,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getRootWidgetSummaryTree","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":77,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getRootWidgetSummaryTreeWithPreviews","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":78,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getDetailsSubtree","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":79,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getSelectedWidget","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":80,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getSelectedSummaryWidget","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":81,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.isWidgetCreationTracked","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":82,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.screenshot","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":83,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.getLayoutExplorerNode","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":84,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setFlexFit","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":85,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setFlexFactor","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":86,"type":"event","body":{"extensionRPC":"ext.flutter.inspector.setFlexProperties","isolateId":"isolates/4829968119790563"},"event":"dart.serviceExtensionAdded"}
[12:40:06 PM] [DAP] [Info] <== {"seq":87,"type":"event","body":{"extension":"ext.flutter.activeDevToolsServerAddress","value":"http://127.0.0.1:9100"},"event":"flutter.serviceExtensionStateChanged"}
[12:40:06 PM] [DAP] [Info] <== {"seq":88,"type":"event","body":{"extension":"ext.flutter.connectedVmServiceUri","value":"http://127.0.0.1:55902/eux4flDTq3k=/"},"event":"flutter.serviceExtensionStateChanged"}
[12:40:06 PM] [DAP] [Info] <== {"seq":89,"type":"event","body":{"category":"stdout","output":"D/CompatibilityChangeReporter( 7058): Compat change id reported: 183155436; UID 10172; state: ENABLED\n"},"event":"output"}
[12:40:06 PM] [DAP] [Info] <== {"seq":90,"type":"event","body":{"category":"stdout","output":"D/SessionsDependencies( 7058): Dependency to CRASHLYTICS added.\n"},"event":"output"}
[12:40:06 PM] [DAP] [Info] ==> {"command":"callService","arguments":{"method":"ext.flutter.inspector.setPubRootDirectories","params":{"isolateId":"isolates/4829968119790563","arg0":"file:///D:/Flutter/tintuc"}},"type":"request","seq":8}
[12:40:06 PM] [DAP] [Info] <== {"seq":91,"type":"event","body":{"category":"stdout","output":"I/FirebaseApp( 7058): Device unlocked: initializing all Firebase APIs for app [DEFAULT]\n"},"event":"output"}
[12:40:06 PM] [DAP] [Info] <== {"seq":92,"type":"response","body":{"result":null,"type":"_extensionType","method":"ext.flutter.inspector.setPubRootDirectories"},"command":"callService","request_seq":8,"success":true}
[12:40:07 PM] [DAP] [Info] <== {"seq":93,"type":"event","body":{"category":"stdout","output":"I/FIAM.Headless( 7058): Starting InAppMessaging runtime with Installation ID fIRDsylTRuW7ng8S4568Wf\n"},"event":"output"}
[12:40:07 PM] [DAP] [Info] <== {"seq":94,"type":"event","body":{"category":"stdout","output":"W/Glide   ( 7058): Failed to find GeneratedAppGlideModule. You should include an annotationProcessor compile dependency on com.github.bumptech.glide:compiler in your application and a @GlideModule annotated AppGlideModule implementation or LibraryGlideModules will be silently ignored\n"},"event":"output"}
[12:40:07 PM] [DAP] [Info] <== {"seq":95,"type":"event","body":{"category":"stdout","output":"I/FirebaseCrashlytics( 7058): Initializing Firebase Crashlytics 18.6.0 for com.example.tintuc\n"},"event":"output"}
[12:40:07 PM] [DAP] [Info] <== {"seq":96,"type":"event","body":{"category":"stdout","output":"D/SessionsDependencies( 7058): Subscriber CRASHLYTICS registered.\n"},"event":"output"}
[12:40:07 PM] [DAP] [Info] <== {"seq":97,"type":"event","body":{"extension":"ext.flutter.inspector.structuredErrors","value":true},"event":"flutter.serviceExtensionStateChanged"}
[12:40:07 PM] [DAP] [Info] <== {"seq":98,"type":"event","body":{"category":"stdout","output":"I/FirebaseCrashlytics( 7058): No version control information found\n"},"event":"output"}
[12:40:07 PM] [DAP] [Info] <== {"seq":99,"type":"event","body":{"category":"stdout","output":"D/FirebaseSessions( 7058): Initializing Firebase Sessions SDK.\n"},"event":"output"}
[12:40:07 PM] [DAP] [Info] <== {"seq":100,"type":"event","body":{"category":"stdout","output":"D/LifecycleServiceBinder( 7058): Binding service to application.\n"},"event":"output"}
[12:40:07 PM] [DAP] [Info] <== {"seq":101,"type":"event","body":{"category":"stdout","output":"D/SessionLifecycleService( 7058): Service bound to new client on process 7058\n"},"event":"output"}
[12:40:07 PM] [DAP] [Info] <== {"seq":102,"type":"event","body":{"category":"stdout","output":"D/SessionLifecycleService( 7058): App has not yet foregrounded. Using previously stored session: null\n"},"event":"output"}
[12:40:07 PM] [DAP] [Info] <== {"seq":103,"type":"event","body":{"category":"stdout","output":"D/SessionLifecycleService( 7058): Client android.os.Messenger@65696fb bound at 2445530. Clients: 1\n"},"event":"output"}
[12:40:07 PM] [DAP] [Info] <== {"seq":104,"type":"event","body":{"category":"stdout","output":"D/SessionLifecycleClient( 7058): Connected to SessionLifecycleService. Queue size 0\n"},"event":"output"}
[12:40:07 PM] [DAP] [Info] <== {"seq":105,"type":"event","body":{"category":"stdout","output":"D/FirebaseAuth( 7058): Notifying id token listeners about user ( dlQUShZwTNauBaiAC73oiPtacgZ2 ).\n"},"event":"output"}
[12:40:07 PM] [DAP] [Info] <== {"seq":106,"type":"event","body":{"category":"stdout","output":"D/FRCPlugin( 7058): Sending fetchTimeout: 60\n"},"event":"output"}
[12:40:08 PM] [DAP] [Info] <== {"seq":107,"type":"event","body":{"category":"stdout","output":"I/ExoPlayerImpl( 7058): Init 22e3b65 [ExoPlayerLib/2.18.7] [emu64xa, sdk_gphone_x86_64, Google, 33]\n"},"event":"output"}
[12:40:08 PM] [DAP] [Info] <== {"seq":108,"type":"event","body":{"category":"stdout","output":"W/.example.tintuc( 7058): Accessing hidden method Landroid/media/AudioTrack;->getLatency()I (unsupported, reflection, allowed)\n"},"event":"output"}
[12:40:09 PM] [DAP] [Info] <== {"seq":109,"type":"event","body":{"category":"stdout","output":"W/DynamiteModule( 7058): Local module descriptor class for com.google.android.gms.providerinstaller.dynamite not found.\n"},"event":"output"}
[12:40:09 PM] [DAP] [Info] <== {"seq":110,"type":"event","body":{"category":"stdout","output":"I/DynamiteModule( 7058): Considering local module com.google.android.gms.providerinstaller.dynamite:0 and remote module com.google.android.gms.providerinstaller.dynamite:0\n"},"event":"output"}
[12:40:09 PM] [DAP] [Info] <== {"seq":111,"type":"event","body":{"category":"stdout","output":"W/ProviderInstaller( 7058): Failed to load providerinstaller module: No acceptable module com.google.android.gms.providerinstaller.dynamite found. Local version is 0 and remote version is 0.\n"},"event":"output"}
[12:40:09 PM] [DAP] [Info] <== {"seq":112,"type":"event","body":{"category":"stdout","output":"D/nativeloader( 7058): Configuring classloader-namespace for other apk /system/framework/org.apache.http.legacy.jar. target_sdk_version=33, uses_libraries=ALL, library_path=/product/priv-app/PrebuiltGmsCore/lib/x86_64:/product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk!/lib/x86_64, permitted_path=/data:/mnt/expand:/data/user/0/com.google.android.gms\n"},"event":"output"}
[12:40:09 PM] [DAP] [Info] <== {"seq":113,"type":"event","body":{"category":"stdout","output":"D/nativeloader( 7058): Configuring classloader-namespace for other apk /system/framework/com.android.media.remotedisplay.jar. target_sdk_version=33, uses_libraries=ALL, library_path=/product/priv-app/PrebuiltGmsCore/lib/x86_64:/product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk!/lib/x86_64, permitted_path=/data:/mnt/expand:/data/user/0/com.google.android.gms\n"},"event":"output"}
[12:40:09 PM] [DAP] [Info] <== {"seq":114,"type":"event","body":{"category":"stdout","output":"D/nativeloader( 7058): Configuring classloader-namespace for other apk /system/framework/com.android.location.provider.jar. target_sdk_version=33, uses_libraries=ALL, library_path=/product/priv-app/PrebuiltGmsCore/lib/x86_64:/product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk!/lib/x86_64, permitted_path=/data:/mnt/expand:/data/user/0/com.google.android.gms\n"},"event":"output"}
[12:40:09 PM] [DAP] [Info] <== {"seq":115,"type":"event","body":{"category":"stdout","output":"D/nativeloader( 7058): Configuring vendor-classloader-namespace for unbundled product apk /product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk. target_sdk_version=33, uses_libraries=, library_path=/product/priv-app/PrebuiltGmsCore/lib/x86_64:/product/priv-app/PrebuiltGmsCore/PrebuiltGmsCore.apk!/lib/x86_64:/product/lib64:/system/product/lib64, permitted_path=/data:/mnt/expand:/data/user/0/com.google.android.gms:/product/lib64:/system/product/lib64\n"},"event":"output"}
[12:40:09 PM] [DAP] [Info] <== {"seq":116,"type":"event","body":{"category":"stdout","output":"D/TrafficStats( 7058): tagSocket(136) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:40:09 PM] [DAP] [Info] <== {"seq":117,"type":"event","body":{"category":"stdout","output":"V/NativeCrypto( 7058): Registering com/google/android/gms/org/conscrypt/NativeCrypto's 295 native methods...\n"},"event":"output"}
[12:40:09 PM] [DAP] [Info] <== {"seq":118,"type":"event","body":{"category":"stdout","output":"W/.example.tintuc( 7058): Accessing hidden method Ljava/security/spec/ECParameterSpec;->getCurveName()Ljava/lang/String; (unsupported, reflection, allowed)\n"},"event":"output"}
[12:40:09 PM] [DAP] [Info] <== {"seq":119,"type":"event","body":{"category":"stdout","output":"I/ProviderInstaller( 7058): Installed default security provider GmsCore_OpenSSL\n"},"event":"output"}
[12:40:09 PM] [DAP] [Info] <== {"seq":120,"type":"event","body":{"category":"stdout","output":"W/.example.tintuc( 7058): Accessing hidden method Ljava/security/spec/ECParameterSpec;->setCurveName(Ljava/lang/String;)V (unsupported, reflection, allowed)\n"},"event":"output"}
[12:40:09 PM] [DAP] [Info] <== {"seq":121,"type":"event","body":{"category":"stdout","output":"D/TrafficStats( 7058): tagSocket(147) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:40:09 PM] [DAP] [Info] <== {"seq":122,"type":"event","body":{"category":"stdout","output":"W/.example.tintuc( 7058): Accessing hidden field Ljava/net/Socket;->impl:Ljava/net/SocketImpl; (unsupported, reflection, allowed)\n"},"event":"output"}
[12:40:10 PM] [DAP] [Info] <== {"seq":123,"type":"event","body":{"category":"stdout","output":"W/Parcel  ( 7058): Expecting binder but got null!\n"},"event":"output"}
[12:40:10 PM] [DAP] [Info] <== {"seq":124,"type":"event","body":{"category":"stdout","output":"W/Firestore( 7058): (24.9.1) [Firestore]: Listen for Query(target=Query(dataMedia order by __name__);limitType=LIMIT_TO_FIRST) failed: Status{code=PERMISSION_DENIED, description=Missing or insufficient permissions., cause=null}\n"},"event":"output"}
[12:40:10 PM] [DAP] [Info] <== {"seq":125,"type":"event","body":{"category":"stdout","output":"D/ProfileInstaller( 7058): Installing profile for com.example.tintuc\n"},"event":"output"}
[12:40:10 PM] [DAP] [Info] <== {"seq":126,"type":"event","body":{"category":"stdout","output":"D/TrafficStats( 7058): tagSocket(136) with statsTag=0xffffffff, statsUid=-1\n"},"event":"output"}
[12:40:11 PM] [DAP] [Info] <== {"seq":127,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 7058): app_time_stats: avg=40.23ms min=4.30ms max=372.73ms count=24\n"},"event":"output"}
[12:40:11 PM] [DAP] [Info] <== {"seq":128,"type":"event","body":{"reason":"started","threadId":4060234319201099},"event":"thread"}
[12:40:11 PM] [DAP] [Info] <== {"seq":129,"type":"event","body":{"reason":"started","threadId":5198006443676731},"event":"thread"}
[12:40:11 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":9}
[12:40:11 PM] [DAP] [Info] <== {"seq":130,"type":"event","body":{"reason":"started","threadId":6821007546100363},"event":"thread"}
[12:40:11 PM] [DAP] [Info] <== {"seq":131,"type":"response","body":{"threads":[{"id":4829968119790563,"name":"main"},{"id":4060234319201099,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."},{"id":5198006443676731,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."},{"id":6821007546100363,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."}]},"command":"threads","request_seq":9,"success":true}
[12:40:11 PM] [DAP] [Info] <== {"seq":132,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpEnableTimelineLogging","isolateId":"isolates/4060234319201099"},"event":"dart.serviceExtensionAdded"}
[12:40:11 PM] [DAP] [Info] <== {"seq":133,"type":"event","body":{"extensionRPC":"ext.dart.io.setHttpEnableTimelineLogging","isolateId":"isolates/4060234319201099"},"event":"dart.serviceExtensionAdded"}
[12:40:11 PM] [DAP] [Info] <== {"seq":134,"type":"event","body":{"extensionRPC":"ext.dart.io.httpEnableTimelineLogging","isolateId":"isolates/4060234319201099"},"event":"dart.serviceExtensionAdded"}
[12:40:11 PM] [DAP] [Info] <== {"seq":135,"type":"event","body":{"extensionRPC":"ext.dart.io.getSocketProfile","isolateId":"isolates/4060234319201099"},"event":"dart.serviceExtensionAdded"}
[12:40:11 PM] [DAP] [Info] <== {"seq":136,"type":"event","body":{"extensionRPC":"ext.dart.io.startSocketProfiling","isolateId":"isolates/4060234319201099"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":137,"type":"event","body":{"extensionRPC":"ext.dart.io.pauseSocketProfiling","isolateId":"isolates/4060234319201099"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":138,"type":"event","body":{"extensionRPC":"ext.dart.io.socketProfilingEnabled","isolateId":"isolates/4060234319201099"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":139,"type":"event","body":{"extensionRPC":"ext.dart.io.clearSocketProfile","isolateId":"isolates/4060234319201099"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":140,"type":"event","body":{"extensionRPC":"ext.dart.io.getVersion","isolateId":"isolates/4060234319201099"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":141,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfile","isolateId":"isolates/4060234319201099"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":142,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfileRequest","isolateId":"isolates/4060234319201099"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":143,"type":"event","body":{"extensionRPC":"ext.dart.io.clearHttpProfile","isolateId":"isolates/4060234319201099"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":144,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 7058): app_time_stats: avg=22.79ms min=11.66ms max=68.90ms count=41\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":145,"type":"event","body":{"reason":"started","threadId":5848963128528775},"event":"thread"}
[12:40:12 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":10}
[12:40:12 PM] [DAP] [Info] <== {"seq":146,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpEnableTimelineLogging","isolateId":"isolates/5198006443676731"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":147,"type":"event","body":{"extensionRPC":"ext.dart.io.setHttpEnableTimelineLogging","isolateId":"isolates/5198006443676731"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":148,"type":"event","body":{"extensionRPC":"ext.dart.io.httpEnableTimelineLogging","isolateId":"isolates/5198006443676731"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":149,"type":"event","body":{"extensionRPC":"ext.dart.io.getSocketProfile","isolateId":"isolates/5198006443676731"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":150,"type":"event","body":{"extensionRPC":"ext.dart.io.startSocketProfiling","isolateId":"isolates/5198006443676731"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":151,"type":"event","body":{"extensionRPC":"ext.dart.io.pauseSocketProfiling","isolateId":"isolates/5198006443676731"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":152,"type":"event","body":{"extensionRPC":"ext.dart.io.socketProfilingEnabled","isolateId":"isolates/5198006443676731"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":153,"type":"event","body":{"extensionRPC":"ext.dart.io.clearSocketProfile","isolateId":"isolates/5198006443676731"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":154,"type":"event","body":{"extensionRPC":"ext.dart.io.getVersion","isolateId":"isolates/5198006443676731"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":155,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfile","isolateId":"isolates/5198006443676731"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":156,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfileRequest","isolateId":"isolates/5198006443676731"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":157,"type":"event","body":{"extensionRPC":"ext.dart.io.clearHttpProfile","isolateId":"isolates/5198006443676731"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":158,"type":"event","body":{"reason":"exited","threadId":4060234319201099},"event":"thread"}
[12:40:12 PM] [DAP] [Info] <== {"seq":159,"type":"response","body":{"threads":[{"id":4829968119790563,"name":"main"},{"id":5198006443676731,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."},{"id":6821007546100363,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."},{"id":5848963128528775,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."}]},"command":"threads","request_seq":10,"success":true}
[12:40:12 PM] [DAP] [Info] <== {"seq":160,"type":"event","body":{"category":"stdout","output":"I/DMCodecAdapterFactory( 7058): Creating an asynchronous MediaCodec adapter for track type video\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":161,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058): allocate(c2.goldfish.h264.decoder)\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":162,"type":"event","body":{"category":"stdout","output":"I/Codec2Client( 7058): Available Codec2 services: \"default\" \"software\"\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] ==> {"command":"threads","type":"request","seq":11}
[12:40:12 PM] [DAP] [Info] <== {"seq":163,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpEnableTimelineLogging","isolateId":"isolates/6821007546100363"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":164,"type":"event","body":{"extensionRPC":"ext.dart.io.setHttpEnableTimelineLogging","isolateId":"isolates/6821007546100363"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":165,"type":"event","body":{"extensionRPC":"ext.dart.io.httpEnableTimelineLogging","isolateId":"isolates/6821007546100363"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":166,"type":"event","body":{"extensionRPC":"ext.dart.io.getSocketProfile","isolateId":"isolates/6821007546100363"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":167,"type":"event","body":{"extensionRPC":"ext.dart.io.startSocketProfiling","isolateId":"isolates/6821007546100363"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":168,"type":"event","body":{"extensionRPC":"ext.dart.io.pauseSocketProfiling","isolateId":"isolates/6821007546100363"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":169,"type":"event","body":{"extensionRPC":"ext.dart.io.socketProfilingEnabled","isolateId":"isolates/6821007546100363"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":170,"type":"event","body":{"extensionRPC":"ext.dart.io.clearSocketProfile","isolateId":"isolates/6821007546100363"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":171,"type":"event","body":{"extensionRPC":"ext.dart.io.getVersion","isolateId":"isolates/6821007546100363"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":172,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfile","isolateId":"isolates/6821007546100363"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":173,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfileRequest","isolateId":"isolates/6821007546100363"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":174,"type":"event","body":{"extensionRPC":"ext.dart.io.clearHttpProfile","isolateId":"isolates/6821007546100363"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":175,"type":"event","body":{"reason":"exited","threadId":5198006443676731},"event":"thread"}
[12:40:12 PM] [DAP] [Info] <== {"seq":176,"type":"event","body":{"category":"stdout","output":"I/CCodec  ( 7058): setting up 'default' as default (vendor) store\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":177,"type":"response","body":{"threads":[{"id":4829968119790563,"name":"main"},{"id":6821007546100363,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."},{"id":5848963128528775,"name":"Closure: (String, {((Object?, Object?) => Object?)? reviver}) => dynamic from Function 'jsonDecode': static."}]},"command":"threads","request_seq":11,"success":true}
[12:40:12 PM] [DAP] [Info] <== {"seq":178,"type":"event","body":{"category":"stdout","output":"I/CCodec  ( 7058): Created component [c2.goldfish.h264.decoder]\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":179,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058): read media type: video/avc\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":180,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 7058): extent() != 1 for single value type: algo.buffers.max-count.values\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":181,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 7058): extent() != 1 for single value type: output.subscribed-indices.values\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":182,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 7058): extent() != 1 for single value type: input.buffers.allocator-ids.values\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":183,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 7058): extent() != 1 for single value type: output.buffers.allocator-ids.values\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":184,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 7058): extent() != 1 for single value type: algo.buffers.allocator-ids.values\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":185,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 7058): extent() != 1 for single value type: output.buffers.pool-ids.values\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":186,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 7058): extent() != 1 for single value type: algo.buffers.pool-ids.values\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":187,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 7058): ignored struct field coded.color-format.locations\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":188,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058): ignoring local param raw.size (0xd2001800) as it is already supported\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":189,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058): ignoring local param default.color (0x5200180b) as it is already supported\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":190,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 7058): ignored struct field raw.hdr-static-info.mastering\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":191,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 7058): query failed after returning 12 values (BAD_INDEX)\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":192,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058): c2 config diff is Dict {\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":193,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 coded.pl.level = 20496\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":194,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 coded.pl.profile = 20481\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":195,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 coded.vui.color.matrix = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":196,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 coded.vui.color.primaries = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":197,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 coded.vui.color.range = 2\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":198,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 coded.vui.color.transfer = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":199,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 default.color.matrix = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":200,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 default.color.primaries = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":201,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 default.color.range = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":202,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 default.color.transfer = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":203,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 input.buffers.max-size.value = 6291456\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":204,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 input.delay.value = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":205,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   string input.media-type.value = \"video/avc\"\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":206,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 output.delay.value = 8\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":207,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   string output.media-type.value = \"video/raw\"\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":208,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.color.matrix = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":209,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.color.primaries = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":210,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.color.range = 2\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":211,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.color.transfer = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":212,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.max-size.height = 240\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":213,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.max-size.width = 320\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":214,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.pixel-format.value = 35\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":215,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::i32 raw.rotation.flip = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":216,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::i32 raw.rotation.value = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":217,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.sar.height = 1\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":218,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.sar.width = 1\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":219,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.size.height = 240\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":220,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.size.width = 320\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":221,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2:\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":222,"type":"event","body":{"category":"stdout","output":"W/ColorUtils( 7058): expected specified color aspects (2:0:0:0)\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":223,"type":"event","body":{"category":"stdout","output":"I/MediaCodec( 7058): MediaCodec will operate in async mode\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":224,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 7058): connecting to surface 0x7dc3b43eb5b0, reason connectToSurface\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":225,"type":"event","body":{"category":"stdout","output":"I/MediaCodec( 7058): [c2.goldfish.h264.decoder] setting surface generation to 7227393\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":226,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 7058): disconnecting from surface 0x7dc3b43eb5b0, reason connectToSurface(reconnect)\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":227,"type":"event","body":{"category":"stdout","output":"D/SurfaceUtils( 7058): connecting to surface 0x7dc3b43eb5b0, reason connectToSurface(reconnect)\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":228,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058): [c2.goldfish.h264.decoder] buffers are bound to CCodec for this session\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":229,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058): no c2 equivalents for csd-1\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":230,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058): no c2 equivalents for log-session-id\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":231,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058): no c2 equivalents for native-window\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":232,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058): no c2 equivalents for flags\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":233,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058): config failed => CORRUPTED\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":234,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058): c2 config diff is   c2::u32 raw.max-size.height = 720\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":235,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.max-size.width = 1280\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":236,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.size.height = 720\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":237,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.size.width = 1280\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":238,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 7058): query -- param skipped: index = 1107298332.\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":239,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058): client requested max input size 219813, which is smaller than what component recommended (6291456); overriding with component recommendation.\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":240,"type":"event","body":{"category":"stdout","output":"W/CCodec  ( 7058): This behavior is subject to change. It is recommended that app developers double check whether the requested max input size is in reasonable range.\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":241,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058): encoding statistics level = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":242,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058): setup formats input: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":243,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t height = 720\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":244,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t level = 65536\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":245,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t max-input-size = 6291456\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":246,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   string mime = \"video/avc\"\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":247,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t profile = 65536\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":248,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t width = 1280\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":249,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   Rect crop(0, 0, 1279, 719)\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":250,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058): }\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":251,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058): setup formats output: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":252,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t android._color-format = 2135033992\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":253,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t android._video-scaling = 1\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":254,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t rotation-degrees = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":255,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t color-standard = 1\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":256,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t color-range = 2\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":257,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t color-transfer = 3\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":258,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t sar-height = 1\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":259,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t sar-width = 1\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":260,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   Rect crop(0, 0, 1279, 719)\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":261,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t width = 1280\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":262,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t height = 720\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":263,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t max-height = 720\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":264,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t max-width = 1280\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":265,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   string mime = \"video/raw\"\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":266,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t android._dataspace = 260\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":267,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t color-format = 2130708361\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":268,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058): }\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":269,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 7058): query failed after returning 12 values (BAD_INDEX)\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":270,"type":"event","body":{"category":"stdout","output":"D/MediaCodec( 7058): keep callback message for reclaim\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":271,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 7058): query -- param skipped: index = 1342179345.\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":272,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 7058): query -- param skipped: index = 2415921170.\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":273,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 7058): query -- param skipped: index = 1610614798.\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":274,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 7058): query -- param skipped: index = 2684356609.\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":275,"type":"event","body":{"category":"stdout","output":"D/C2Store ( 7058): Using DMABUF Heaps\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":276,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 7058): [c2.goldfish.h264.decoder#718] Created input block pool with allocatorID 16 => poolID 17 - OK (0)\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":277,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 7058): [c2.goldfish.h264.decoder#718] Query output surface allocator returned 0 params => BAD_INDEX (6)\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":278,"type":"event","body":{"category":"stdout","output":"I/CCodecBufferChannel( 7058): [c2.goldfish.h264.decoder#718] Created output block pool with allocatorID 18 => poolID 21 - OK\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":279,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 7058): [c2.goldfish.h264.decoder#718] Configured output block pool ids 21 => OK\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":280,"type":"event","body":{"category":"stdout","output":"D/Codec2-OutputBufferQueue( 7058): remote graphic buffer migration 0/0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":281,"type":"event","body":{"category":"stdout","output":"D/Codec2Client( 7058): setOutputSurface -- failed to set consumer usage (6/BAD_INDEX)\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":282,"type":"event","body":{"category":"stdout","output":"D/Codec2Client( 7058): setOutputSurface -- generation=7227393 consumer usage=0x900\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":283,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpEnableTimelineLogging","isolateId":"isolates/5848963128528775"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":284,"type":"event","body":{"extensionRPC":"ext.dart.io.setHttpEnableTimelineLogging","isolateId":"isolates/5848963128528775"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":285,"type":"event","body":{"extensionRPC":"ext.dart.io.httpEnableTimelineLogging","isolateId":"isolates/5848963128528775"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":286,"type":"event","body":{"extensionRPC":"ext.dart.io.getSocketProfile","isolateId":"isolates/5848963128528775"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":287,"type":"event","body":{"extensionRPC":"ext.dart.io.startSocketProfiling","isolateId":"isolates/5848963128528775"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":288,"type":"event","body":{"extensionRPC":"ext.dart.io.pauseSocketProfiling","isolateId":"isolates/5848963128528775"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":289,"type":"event","body":{"extensionRPC":"ext.dart.io.socketProfilingEnabled","isolateId":"isolates/5848963128528775"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":290,"type":"event","body":{"extensionRPC":"ext.dart.io.clearSocketProfile","isolateId":"isolates/5848963128528775"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":291,"type":"event","body":{"extensionRPC":"ext.dart.io.getVersion","isolateId":"isolates/5848963128528775"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":292,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfile","isolateId":"isolates/5848963128528775"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":293,"type":"event","body":{"extensionRPC":"ext.dart.io.getHttpProfileRequest","isolateId":"isolates/5848963128528775"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":294,"type":"event","body":{"extensionRPC":"ext.dart.io.clearHttpProfile","isolateId":"isolates/5848963128528775"},"event":"dart.serviceExtensionAdded"}
[12:40:12 PM] [DAP] [Info] <== {"seq":295,"type":"event","body":{"reason":"exited","threadId":5848963128528775},"event":"thread"}
[12:40:12 PM] [DAP] [Info] <== {"seq":296,"type":"event","body":{"category":"stdout","output":"D/Codec2Client( 7058): Surface configure completed\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":297,"type":"event","body":{"reason":"exited","threadId":6821007546100363},"event":"thread"}
[12:40:12 PM] [DAP] [Info] <== {"seq":298,"type":"event","body":{"category":"stdout","output":"I/DMABUFHEAPS( 7058): Using DMA-BUF heap named: system\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":299,"type":"event","body":{"category":"stdout","output":"I/DMCodecAdapterFactory( 7058): Creating an asynchronous MediaCodec adapter for track type audio\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":300,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058): allocate(c2.android.aac.decoder)\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":301,"type":"event","body":{"category":"stdout","output":"I/CCodec  ( 7058): setting up 'default' as default (vendor) store\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":302,"type":"event","body":{"category":"stdout","output":"I/CCodec  ( 7058): Created component [c2.android.aac.decoder]\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":303,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058): read media type: audio/mp4a-latm\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":304,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 7058): extent() != 1 for single value type: algo.buffers.max-count.values\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":305,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 7058): extent() != 1 for single value type: output.subscribed-indices.values\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":306,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 7058): extent() != 1 for single value type: input.buffers.allocator-ids.values\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":307,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 7058): extent() != 1 for single value type: output.buffers.allocator-ids.values\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":308,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 7058): extent() != 1 for single value type: algo.buffers.allocator-ids.values\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":309,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 7058): extent() != 1 for single value type: output.buffers.pool-ids.values\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":310,"type":"event","body":{"category":"stdout","output":"D/ReflectedParamUpdater( 7058): extent() != 1 for single value type: algo.buffers.pool-ids.values\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":311,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 7058): query failed after returning 20 values (BAD_INDEX)\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":312,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058): c2 config diff is Dict {\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":313,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 coded.aac-packaging.value = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":314,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 coded.bitrate.value = 64000\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":315,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 coded.pl.level = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":316,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 coded.pl.profile = 8192\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":317,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::i32 coding.drc.album-mode.value = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":318,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::float coding.drc.attenuation-factor.value = 1\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":319,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::float coding.drc.boost-factor.value = 1\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":320,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::i32 coding.drc.compression-mode.value = 3\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":321,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::i32 coding.drc.effect-type.value = 3\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":322,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::float coding.drc.encoded-level.value = 0.25\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":323,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::float coding.drc.reference-level.value = -16\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":324,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 input.buffers.max-size.value = 8192\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":325,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 input.delay.value = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":326,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   string input.media-type.value = \"audio/mp4a-latm\"\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":327,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 output.delay.value = 2\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":328,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::float output.drc.output-loudness.value = 0.25\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":329,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   string output.media-type.value = \"audio/raw\"\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":330,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.channel-count.value = 1\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":331,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.channel-mask.value = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":332,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.max-channel-count.value = 8\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":333,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.sample-rate.value = 44100\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":334,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058): }\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":335,"type":"event","body":{"category":"stdout","output":"I/MediaCodec( 7058): MediaCodec will operate in async mode\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":336,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058): [c2.android.aac.decoder] buffers are bound to CCodec for this session\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":337,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058): no c2 equivalents for log-session-id\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":338,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058): no c2 equivalents for flags\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":339,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058): config failed => CORRUPTED\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":340,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058): c2 config diff is   c2::u32 raw.channel-count.value = 2\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":341,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 7058): query -- param skipped: index = 1107298332.\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":342,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058): client requested max input size 623, which is smaller than what component recommended (8192); overriding with component recommendation.\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":343,"type":"event","body":{"category":"stdout","output":"W/CCodec  ( 7058): This behavior is subject to change. It is recommended that app developers double check whether the requested max input size is in reasonable range.\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":344,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058): encoding statistics level = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":345,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058): setup formats input: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":346,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t aac-drc-album-mode = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":347,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t aac-drc-boost-level = 127\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":348,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t aac-drc-cut-level = 127\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":349,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t aac-drc-effect-type = 3\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":350,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t aac-encoded-target-level = -1\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":351,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t aac-max-output-channel_count = 8\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":352,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t aac-target-ref-level = 64\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":353,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t bitrate = 64000\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":354,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t channel-count = 2\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":355,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t channel-mask = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":356,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t level = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":357,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t max-input-size = 8192\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":358,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t max-output-channel-count = 8\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":359,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   string mime = \"audio/mp4a-latm\"\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":360,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t profile = 2\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":361,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t sample-rate = 44100\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":362,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058): }\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":363,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058): setup formats output: AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":364,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t aac-drc-album-mode = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":365,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t aac-drc-boost-level = 127\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":366,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t aac-drc-cut-level = 127\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":367,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t aac-drc-effect-type = 3\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":368,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t aac-drc-output-loudness = -1\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":369,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t aac-encoded-target-level = -1\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":370,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t aac-max-output-channel_count = 8\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":371,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t aac-target-ref-level = 64\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":372,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t channel-count = 2\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":373,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t channel-mask = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":374,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t max-output-channel-count = 8\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":375,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   string mime = \"audio/raw\"\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":376,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t sample-rate = 44100\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":377,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058):   int32_t android._config-pcm-encoding = 2\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":378,"type":"event","body":{"category":"stdout","output":"D/CCodec  ( 7058): }\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":379,"type":"event","body":{"category":"stdout","output":"I/CCodecConfig( 7058): query failed after returning 20 values (BAD_INDEX)\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":380,"type":"event","body":{"category":"stdout","output":"D/MediaCodec( 7058): keep callback message for reclaim\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":381,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 7058): query -- param skipped: index = 1342179345.\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":382,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 7058): query -- param skipped: index = 2415921170.\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":383,"type":"event","body":{"category":"stdout","output":"W/Codec2Client( 7058): query -- param skipped: index = 1610614798.\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":384,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 7058): [c2.android.aac.decoder#73] Created input block pool with allocatorID 16 => poolID 18 - OK (0)\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":385,"type":"event","body":{"category":"stdout","output":"I/CCodecBufferChannel( 7058): [c2.android.aac.decoder#73] Created output block pool with allocatorID 16 => poolID 30 - OK\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":386,"type":"event","body":{"category":"stdout","output":"D/CCodecBufferChannel( 7058): [c2.android.aac.decoder#73] Configured output block pool ids 30 => OK\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":387,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058): c2 config diff is   c2::u32 raw.channel-mask.value = 12\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":388,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 7058): [c2.android.aac.decoder#73:Output[N]] popFromStashAndRegister: at 1000000000000us, output format changed to AMessage(what = 0x00000000) = {\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":389,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 7058):   int32_t aac-drc-album-mode = 0\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":390,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 7058):   int32_t aac-drc-boost-level = 127\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":391,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 7058):   int32_t aac-drc-cut-level = 127\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":392,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 7058):   int32_t aac-drc-effect-type = 3\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":393,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 7058):   int32_t aac-drc-output-loudness = -1\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":394,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 7058):   int32_t aac-encoded-target-level = -1\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":395,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 7058):   int32_t aac-max-output-channel_count = 8\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":396,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 7058):   int32_t aac-target-ref-level = 64\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":397,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 7058):   int32_t channel-count = 2\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":398,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 7058):   int32_t channel-mask = 12\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":399,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 7058):   int32_t max-output-channel-count = 8\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":400,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 7058):   string mime = \"audio/raw\"\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":401,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 7058):   int32_t sample-rate = 44100\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":402,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 7058):   int32_t android._config-pcm-encoding = 2\n"},"event":"output"}
[12:40:12 PM] [DAP] [Info] <== {"seq":403,"type":"event","body":{"category":"stdout","output":"D/CCodecBuffers( 7058): }\n"},"event":"output"}
[12:40:13 PM] [DAP] [Info] <== {"seq":404,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 7058): app_time_stats: avg=365.87ms min=77.72ms max=820.59ms count=3\n"},"event":"output"}
[12:40:13 PM] [DAP] [Info] <== {"seq":405,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058): c2 config diff is   c2::u32 raw.color.matrix = 1\n"},"event":"output"}
[12:40:13 PM] [DAP] [Info] <== {"seq":406,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.color.primaries = 1\n"},"event":"output"}
[12:40:13 PM] [DAP] [Info] <== {"seq":407,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.color.transfer = 3\n"},"event":"output"}
[12:40:13 PM] [DAP] [Info] <== {"seq":408,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.crop.height = 720\n"},"event":"output"}
[12:40:13 PM] [DAP] [Info] <== {"seq":409,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.crop.left = 0\n"},"event":"output"}
[12:40:13 PM] [DAP] [Info] <== {"seq":410,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.crop.top = 0\n"},"event":"output"}
[12:40:13 PM] [DAP] [Info] <== {"seq":411,"type":"event","body":{"category":"stdout","output":"D/CCodecConfig( 7058):   c2::u32 raw.crop.width = 1280\n"},"event":"output"}
[12:40:13 PM] [DAP] [Info] <== {"seq":412,"type":"event","body":{"category":"stdout","output":"I/.example.tintuc( 7058): Background concurrent copying GC freed 132217(10008KB) AllocSpace objects, 45(1596KB) LOS objects, 49% free, 9102KB/17MB, paused 1.014ms,196us total 139.400ms\n"},"event":"output"}
[12:40:14 PM] [DAP] [Info] <== {"seq":413,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 7058): app_time_stats: avg=278.62ms min=19.50ms max=549.85ms count=4\n"},"event":"output"}
[12:40:15 PM] [DAP] [Info] <== {"seq":414,"type":"event","body":{"category":"stdout","output":"D/EGL_emulation( 7058): app_time_stats: avg=549.59ms min=282.81ms max=816.38ms count=2\n"},"event":"output"}
